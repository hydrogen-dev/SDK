/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.api;

import com.hydrogen.nucleus.ApiException;
import com.hydrogen.nucleus.model.Budget;
import com.hydrogen.nucleus.model.PageBudget;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BudgetApi
 */
@Ignore
public class BudgetApiTest {

    private final BudgetApi api = new BudgetApi();

    
    /**
     * Create a budget request
     *
     * Create a new budget request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBudgetUsingPostTest() throws ApiException {
        Budget budgetRequest = null;
        Budget response = api.createBudgetUsingPost(budgetRequest);

        // TODO: test validations
    }
    
    /**
     * Delete a budget request
     *
     * Permanently delete a budget request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBudgetUsingDeleteTest() throws ApiException {
        UUID budgetId = null;
        api.deleteBudgetUsingDelete(budgetId);

        // TODO: test validations
    }
    
    /**
     * List all budget requests
     *
     * Get the information for all budget requests.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBudgetAllUsingGetTest() throws ApiException {
        Boolean ascending = null;
        String currencyConversion = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        PageBudget response = api.getBudgetAllUsingGet(ascending, currencyConversion, filter, orderBy, page, size);

        // TODO: test validations
    }
    
    /**
     * Retrieve a budget request
     *
     * Retrieve the information for a budget request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBudgetUsingGetTest() throws ApiException {
        UUID budgetId = null;
        String currencyConversion = null;
        Budget response = api.getBudgetUsingGet(budgetId, currencyConversion);

        // TODO: test validations
    }
    
    /**
     * Update a budget request
     *
     * Update the information for a budget request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBudgetUsingPutTest() throws ApiException {
        Object budget = null;
        UUID budgetId = null;
        Budget response = api.updateBudgetUsingPut(budget, budgetId);

        // TODO: test validations
    }
    
}
