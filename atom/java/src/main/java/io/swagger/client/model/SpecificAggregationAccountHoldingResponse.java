/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CreateAggregationAccountHoldingResponse;
import java.io.IOException;
import java.util.UUID;

/**
 * SpecificAggregationAccountHoldingResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class SpecificAggregationAccountHoldingResponse {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("create_date")
  private String createDate = null;

  @SerializedName("aggregation_account_id")
  private UUID aggregationAccountId = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("ticker")
  private String ticker = null;

  @SerializedName("ticker_name")
  private String tickerName = null;

  @SerializedName("shares")
  private Double shares = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("holding_type")
  private String holdingType = null;

  @SerializedName("asset_class")
  private String assetClass = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("cost_basis")
  private Double costBasis = null;

  @SerializedName("exchange")
  private String exchange = null;

  @SerializedName("cusip")
  private String cusip = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("update_date")
  private String updateDate = null;

  public SpecificAggregationAccountHoldingResponse id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the aggregation account holding
   * @return id
  **/
  @ApiModelProperty(value = "ID of the aggregation account holding")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public SpecificAggregationAccountHoldingResponse createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Datetime the aggregation account holding was created
   * @return createDate
  **/
  @ApiModelProperty(value = "Datetime the aggregation account holding was created")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public SpecificAggregationAccountHoldingResponse aggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
    return this;
  }

   /**
   * The unique identifier of the aggregation account the holding belongs
   * @return aggregationAccountId
  **/
  @ApiModelProperty(required = true, value = "The unique identifier of the aggregation account the holding belongs")
  public UUID getAggregationAccountId() {
    return aggregationAccountId;
  }

  public void setAggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
  }

  public SpecificAggregationAccountHoldingResponse currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Alphabetic currency code for the currency of the holding, limited to 3 characters.
   * @return currencyCode
  **/
  @ApiModelProperty(value = "Alphabetic currency code for the currency of the holding, limited to 3 characters.")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public SpecificAggregationAccountHoldingResponse ticker(String ticker) {
    this.ticker = ticker;
    return this;
  }

   /**
   * Ticker of the security holding
   * @return ticker
  **/
  @ApiModelProperty(required = true, value = "Ticker of the security holding")
  public String getTicker() {
    return ticker;
  }

  public void setTicker(String ticker) {
    this.ticker = ticker;
  }

  public SpecificAggregationAccountHoldingResponse tickerName(String tickerName) {
    this.tickerName = tickerName;
    return this;
  }

   /**
   * Ticker name of the security holding
   * @return tickerName
  **/
  @ApiModelProperty(required = true, value = "Ticker name of the security holding")
  public String getTickerName() {
    return tickerName;
  }

  public void setTickerName(String tickerName) {
    this.tickerName = tickerName;
  }

  public SpecificAggregationAccountHoldingResponse shares(Double shares) {
    this.shares = shares;
    return this;
  }

   /**
   * Number of shares of the security holding
   * @return shares
  **/
  @ApiModelProperty(required = true, value = "Number of shares of the security holding")
  public Double getShares() {
    return shares;
  }

  public void setShares(Double shares) {
    this.shares = shares;
  }

  public SpecificAggregationAccountHoldingResponse amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Monetary amount of the security holding
   * @return amount
  **/
  @ApiModelProperty(value = "Monetary amount of the security holding")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public SpecificAggregationAccountHoldingResponse holdingType(String holdingType) {
    this.holdingType = holdingType;
    return this;
  }

   /**
   * Describes the type of security holding such as “Equity”, “Fixed Income”, “Cash” or “Mutual Fund”
   * @return holdingType
  **/
  @ApiModelProperty(value = "Describes the type of security holding such as “Equity”, “Fixed Income”, “Cash” or “Mutual Fund”")
  public String getHoldingType() {
    return holdingType;
  }

  public void setHoldingType(String holdingType) {
    this.holdingType = holdingType;
  }

  public SpecificAggregationAccountHoldingResponse assetClass(String assetClass) {
    this.assetClass = assetClass;
    return this;
  }

   /**
   * Asset class of the holding such as “US Equity” or “Fixed Income”
   * @return assetClass
  **/
  @ApiModelProperty(value = "Asset class of the holding such as “US Equity” or “Fixed Income”")
  public String getAssetClass() {
    return assetClass;
  }

  public void setAssetClass(String assetClass) {
    this.assetClass = assetClass;
  }

  public SpecificAggregationAccountHoldingResponse price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price of the security holding
   * @return price
  **/
  @ApiModelProperty(value = "Price of the security holding")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public SpecificAggregationAccountHoldingResponse costBasis(Double costBasis) {
    this.costBasis = costBasis;
    return this;
  }

   /**
   * The original value of the asset used for tax purposes, usually the purchase price
   * @return costBasis
  **/
  @ApiModelProperty(value = "The original value of the asset used for tax purposes, usually the purchase price")
  public Double getCostBasis() {
    return costBasis;
  }

  public void setCostBasis(Double costBasis) {
    this.costBasis = costBasis;
  }

  public SpecificAggregationAccountHoldingResponse exchange(String exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Financial exchange the security holding is traded on such as “NYSE or “NASDAQ”
   * @return exchange
  **/
  @ApiModelProperty(value = "Financial exchange the security holding is traded on such as “NYSE or “NASDAQ”")
  public String getExchange() {
    return exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = exchange;
  }

  public SpecificAggregationAccountHoldingResponse cusip(String cusip) {
    this.cusip = cusip;
    return this;
  }

   /**
   * The CUSIP of the security holding
   * @return cusip
  **/
  @ApiModelProperty(value = "The CUSIP of the security holding")
  public String getCusip() {
    return cusip;
  }

  public void setCusip(String cusip) {
    this.cusip = cusip;
  }

  public SpecificAggregationAccountHoldingResponse secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public SpecificAggregationAccountHoldingResponse metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Custom information associated with the aggregation account transaction in the format key:value
   * @return metadata
  **/
  @ApiModelProperty(value = "Custom information associated with the aggregation account transaction in the format key:value")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public SpecificAggregationAccountHoldingResponse updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Latest datetime the aggregation account holding was updated
   * @return updateDate
  **/
  @ApiModelProperty(value = "Latest datetime the aggregation account holding was updated")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecificAggregationAccountHoldingResponse specificAggregationAccountHoldingResponse = (SpecificAggregationAccountHoldingResponse) o;
    return Objects.equals(this.id, specificAggregationAccountHoldingResponse.id) &&
        Objects.equals(this.createDate, specificAggregationAccountHoldingResponse.createDate) &&
        Objects.equals(this.aggregationAccountId, specificAggregationAccountHoldingResponse.aggregationAccountId) &&
        Objects.equals(this.currencyCode, specificAggregationAccountHoldingResponse.currencyCode) &&
        Objects.equals(this.ticker, specificAggregationAccountHoldingResponse.ticker) &&
        Objects.equals(this.tickerName, specificAggregationAccountHoldingResponse.tickerName) &&
        Objects.equals(this.shares, specificAggregationAccountHoldingResponse.shares) &&
        Objects.equals(this.amount, specificAggregationAccountHoldingResponse.amount) &&
        Objects.equals(this.holdingType, specificAggregationAccountHoldingResponse.holdingType) &&
        Objects.equals(this.assetClass, specificAggregationAccountHoldingResponse.assetClass) &&
        Objects.equals(this.price, specificAggregationAccountHoldingResponse.price) &&
        Objects.equals(this.costBasis, specificAggregationAccountHoldingResponse.costBasis) &&
        Objects.equals(this.exchange, specificAggregationAccountHoldingResponse.exchange) &&
        Objects.equals(this.cusip, specificAggregationAccountHoldingResponse.cusip) &&
        Objects.equals(this.secondaryId, specificAggregationAccountHoldingResponse.secondaryId) &&
        Objects.equals(this.metadata, specificAggregationAccountHoldingResponse.metadata) &&
        Objects.equals(this.updateDate, specificAggregationAccountHoldingResponse.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createDate, aggregationAccountId, currencyCode, ticker, tickerName, shares, amount, holdingType, assetClass, price, costBasis, exchange, cusip, secondaryId, metadata, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecificAggregationAccountHoldingResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    aggregationAccountId: ").append(toIndentedString(aggregationAccountId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    tickerName: ").append(toIndentedString(tickerName)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    holdingType: ").append(toIndentedString(holdingType)).append("\n");
    sb.append("    assetClass: ").append(toIndentedString(assetClass)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    cusip: ").append(toIndentedString(cusip)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

