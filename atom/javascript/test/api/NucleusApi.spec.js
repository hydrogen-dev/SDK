/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.atom_api);
  }
}(this, function(expect, atom_api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new atom_api.NucleusApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NucleusApi', function() {
    describe('deleteAccount', function() {
      it('should call deleteAccount successfully', function(done) {
        //uncomment below and update the code to test deleteAccount
        //instance.deleteAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountAllocation', function() {
      it('should call deleteAccountAllocation successfully', function(done) {
        //uncomment below and update the code to test deleteAccountAllocation
        //instance.deleteAccountAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountPermission', function() {
      it('should call deleteAccountPermission successfully', function(done) {
        //uncomment below and update the code to test deleteAccountPermission
        //instance.deleteAccountPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountStage', function() {
      it('should call deleteAccountStage successfully', function(done) {
        //uncomment below and update the code to test deleteAccountStage
        //instance.deleteAccountStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountStatus', function() {
      it('should call deleteAccountStatus successfully', function(done) {
        //uncomment below and update the code to test deleteAccountStatus
        //instance.deleteAccountStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountType', function() {
      it('should call deleteAccountType successfully', function(done) {
        //uncomment below and update the code to test deleteAccountType
        //instance.deleteAccountType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAggregationAccount', function() {
      it('should call deleteAggregationAccount successfully', function(done) {
        //uncomment below and update the code to test deleteAggregationAccount
        //instance.deleteAggregationAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAggregationAccountBalance', function() {
      it('should call deleteAggregationAccountBalance successfully', function(done) {
        //uncomment below and update the code to test deleteAggregationAccountBalance
        //instance.deleteAggregationAccountBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAllocation', function() {
      it('should call deleteAllocation successfully', function(done) {
        //uncomment below and update the code to test deleteAllocation
        //instance.deleteAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAllocationComposition', function() {
      it('should call deleteAllocationComposition successfully', function(done) {
        //uncomment below and update the code to test deleteAllocationComposition
        //instance.deleteAllocationComposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBankLink', function() {
      it('should call deleteBankLink successfully', function(done) {
        //uncomment below and update the code to test deleteBankLink
        //instance.deleteBankLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBenchmark', function() {
      it('should call deleteBenchmark successfully', function(done) {
        //uncomment below and update the code to test deleteBenchmark
        //instance.deleteBenchmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClient', function() {
      it('should call deleteClient successfully', function(done) {
        //uncomment below and update the code to test deleteClient
        //instance.deleteClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClientHydro', function() {
      it('should call deleteClientHydro successfully', function(done) {
        //uncomment below and update the code to test deleteClientHydro
        //instance.deleteClientHydro(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClientResponse', function() {
      it('should call deleteClientResponse successfully', function(done) {
        //uncomment below and update the code to test deleteClientResponse
        //instance.deleteClientResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDecisionTree', function() {
      it('should call deleteDecisionTree successfully', function(done) {
        //uncomment below and update the code to test deleteDecisionTree
        //instance.deleteDecisionTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDepositRequest', function() {
      it('should call deleteDepositRequest successfully', function(done) {
        //uncomment below and update the code to test deleteDepositRequest
        //instance.deleteDepositRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFundingRequest', function() {
      it('should call deleteFundingRequest successfully', function(done) {
        //uncomment below and update the code to test deleteFundingRequest
        //instance.deleteFundingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGoal', function() {
      it('should call deleteGoal successfully', function(done) {
        //uncomment below and update the code to test deleteGoal
        //instance.deleteGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGoalTrackRecord', function() {
      it('should call deleteGoalTrackRecord successfully', function(done) {
        //uncomment below and update the code to test deleteGoalTrackRecord
        //instance.deleteGoalTrackRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel', function() {
      it('should call deleteModel successfully', function(done) {
        //uncomment below and update the code to test deleteModel
        //instance.deleteModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelAssetSize', function() {
      it('should call deleteModelAssetSize successfully', function(done) {
        //uncomment below and update the code to test deleteModelAssetSize
        //instance.deleteModelAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelComment', function() {
      it('should call deleteModelComment successfully', function(done) {
        //uncomment below and update the code to test deleteModelComment
        //instance.deleteModelComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelHolding', function() {
      it('should call deleteModelHolding successfully', function(done) {
        //uncomment below and update the code to test deleteModelHolding
        //instance.deleteModelHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelTransaction', function() {
      it('should call deleteModelTransaction successfully', function(done) {
        //uncomment below and update the code to test deleteModelTransaction
        //instance.deleteModelTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNode', function() {
      it('should call deleteNode successfully', function(done) {
        //uncomment below and update the code to test deleteNode
        //instance.deleteNode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNodeRelationship', function() {
      it('should call deleteNodeRelationship successfully', function(done) {
        //uncomment below and update the code to test deleteNodeRelationship
        //instance.deleteNodeRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderRecord', function() {
      it('should call deleteOrderRecord successfully', function(done) {
        //uncomment below and update the code to test deleteOrderRecord
        //instance.deleteOrderRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderStatus', function() {
      it('should call deleteOrderStatus successfully', function(done) {
        //uncomment below and update the code to test deleteOrderStatus
        //instance.deleteOrderStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderTrackingRecord', function() {
      it('should call deleteOrderTrackingRecord successfully', function(done) {
        //uncomment below and update the code to test deleteOrderTrackingRecord
        //instance.deleteOrderTrackingRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolio', function() {
      it('should call deletePortfolio successfully', function(done) {
        //uncomment below and update the code to test deletePortfolio
        //instance.deletePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolioAssetSize', function() {
      it('should call deletePortfolioAssetSize successfully', function(done) {
        //uncomment below and update the code to test deletePortfolioAssetSize
        //instance.deletePortfolioAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolioComment', function() {
      it('should call deletePortfolioComment successfully', function(done) {
        //uncomment below and update the code to test deletePortfolioComment
        //instance.deletePortfolioComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolioHolding', function() {
      it('should call deletePortfolioHolding successfully', function(done) {
        //uncomment below and update the code to test deletePortfolioHolding
        //instance.deletePortfolioHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolioTransaction', function() {
      it('should call deletePortfolioTransaction successfully', function(done) {
        //uncomment below and update the code to test deletePortfolioTransaction
        //instance.deletePortfolioTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuestionnaire', function() {
      it('should call deleteQuestionnaire successfully', function(done) {
        //uncomment below and update the code to test deleteQuestionnaire
        //instance.deleteQuestionnaire(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScore', function() {
      it('should call deleteScore successfully', function(done) {
        //uncomment below and update the code to test deleteScore
        //instance.deleteScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSecurity', function() {
      it('should call deleteSecurity successfully', function(done) {
        //uncomment below and update the code to test deleteSecurity
        //instance.deleteSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSecurityExclusion', function() {
      it('should call deleteSecurityExclusion successfully', function(done) {
        //uncomment below and update the code to test deleteSecurityExclusion
        //instance.deleteSecurityExclusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSecurityPrice', function() {
      it('should call deleteSecurityPrice successfully', function(done) {
        //uncomment below and update the code to test deleteSecurityPrice
        //instance.deleteSecurityPrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransactionCode', function() {
      it('should call deleteTransactionCode successfully', function(done) {
        //uncomment below and update the code to test deleteTransactionCode
        //instance.deleteTransactionCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransferRequest', function() {
      it('should call deleteTransferRequest successfully', function(done) {
        //uncomment below and update the code to test deleteTransferRequest
        //instance.deleteTransferRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWithdrawalRequest', function() {
      it('should call deleteWithdrawalRequest successfully', function(done) {
        //uncomment below and update the code to test deleteWithdrawalRequest
        //instance.deleteWithdrawalRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccount', function() {
      it('should call getAccount successfully', function(done) {
        //uncomment below and update the code to test getAccount
        //instance.getAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountAllocation', function() {
      it('should call getAccountAllocation successfully', function(done) {
        //uncomment below and update the code to test getAccountAllocation
        //instance.getAccountAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountAllocations', function() {
      it('should call getAccountAllocations successfully', function(done) {
        //uncomment below and update the code to test getAccountAllocations
        //instance.getAccountAllocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountAssetSizes', function() {
      it('should call getAccountAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getAccountAssetSizes
        //instance.getAccountAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountHoldings', function() {
      it('should call getAccountHoldings successfully', function(done) {
        //uncomment below and update the code to test getAccountHoldings
        //instance.getAccountHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountPerformance', function() {
      it('should call getAccountPerformance successfully', function(done) {
        //uncomment below and update the code to test getAccountPerformance
        //instance.getAccountPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountPermission', function() {
      it('should call getAccountPermission successfully', function(done) {
        //uncomment below and update the code to test getAccountPermission
        //instance.getAccountPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountPermissions', function() {
      it('should call getAccountPermissions successfully', function(done) {
        //uncomment below and update the code to test getAccountPermissions
        //instance.getAccountPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountStage', function() {
      it('should call getAccountStage successfully', function(done) {
        //uncomment below and update the code to test getAccountStage
        //instance.getAccountStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountStages', function() {
      it('should call getAccountStages successfully', function(done) {
        //uncomment below and update the code to test getAccountStages
        //instance.getAccountStages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountStatus', function() {
      it('should call getAccountStatus successfully', function(done) {
        //uncomment below and update the code to test getAccountStatus
        //instance.getAccountStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountStatuses', function() {
      it('should call getAccountStatuses successfully', function(done) {
        //uncomment below and update the code to test getAccountStatuses
        //instance.getAccountStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountTransactions', function() {
      it('should call getAccountTransactions successfully', function(done) {
        //uncomment below and update the code to test getAccountTransactions
        //instance.getAccountTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountType', function() {
      it('should call getAccountType successfully', function(done) {
        //uncomment below and update the code to test getAccountType
        //instance.getAccountType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountTypes', function() {
      it('should call getAccountTypes successfully', function(done) {
        //uncomment below and update the code to test getAccountTypes
        //instance.getAccountTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccounts', function() {
      it('should call getAccounts successfully', function(done) {
        //uncomment below and update the code to test getAccounts
        //instance.getAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAggregationAccount', function() {
      it('should call getAggregationAccount successfully', function(done) {
        //uncomment below and update the code to test getAggregationAccount
        //instance.getAggregationAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAggregationAccountBalance', function() {
      it('should call getAggregationAccountBalance successfully', function(done) {
        //uncomment below and update the code to test getAggregationAccountBalance
        //instance.getAggregationAccountBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAggregationAccountBalances', function() {
      it('should call getAggregationAccountBalances successfully', function(done) {
        //uncomment below and update the code to test getAggregationAccountBalances
        //instance.getAggregationAccountBalances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAggregationAccounts', function() {
      it('should call getAggregationAccounts successfully', function(done) {
        //uncomment below and update the code to test getAggregationAccounts
        //instance.getAggregationAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocation', function() {
      it('should call getAllocation successfully', function(done) {
        //uncomment below and update the code to test getAllocation
        //instance.getAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationAssetSizes', function() {
      it('should call getAllocationAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getAllocationAssetSizes
        //instance.getAllocationAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationComposition', function() {
      it('should call getAllocationComposition successfully', function(done) {
        //uncomment below and update the code to test getAllocationComposition
        //instance.getAllocationComposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationCompositions', function() {
      it('should call getAllocationCompositions successfully', function(done) {
        //uncomment below and update the code to test getAllocationCompositions
        //instance.getAllocationCompositions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationHoldings', function() {
      it('should call getAllocationHoldings successfully', function(done) {
        //uncomment below and update the code to test getAllocationHoldings
        //instance.getAllocationHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationPerformance', function() {
      it('should call getAllocationPerformance successfully', function(done) {
        //uncomment below and update the code to test getAllocationPerformance
        //instance.getAllocationPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocationTransactions', function() {
      it('should call getAllocationTransactions successfully', function(done) {
        //uncomment below and update the code to test getAllocationTransactions
        //instance.getAllocationTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllocations', function() {
      it('should call getAllocations successfully', function(done) {
        //uncomment below and update the code to test getAllocations
        //instance.getAllocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBankLink', function() {
      it('should call getBankLink successfully', function(done) {
        //uncomment below and update the code to test getBankLink
        //instance.getBankLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBankLinks', function() {
      it('should call getBankLinks successfully', function(done) {
        //uncomment below and update the code to test getBankLinks
        //instance.getBankLinks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBenchmark', function() {
      it('should call getBenchmark successfully', function(done) {
        //uncomment below and update the code to test getBenchmark
        //instance.getBenchmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBenchmarkAssetSizes', function() {
      it('should call getBenchmarkAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getBenchmarkAssetSizes
        //instance.getBenchmarkAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBenchmarkPerformance', function() {
      it('should call getBenchmarkPerformance successfully', function(done) {
        //uncomment below and update the code to test getBenchmarkPerformance
        //instance.getBenchmarkPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBenchmarks', function() {
      it('should call getBenchmarks successfully', function(done) {
        //uncomment below and update the code to test getBenchmarks
        //instance.getBenchmarks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBulkOrders', function() {
      it('should call getBulkOrders successfully', function(done) {
        //uncomment below and update the code to test getBulkOrders
        //instance.getBulkOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClient', function() {
      it('should call getClient successfully', function(done) {
        //uncomment below and update the code to test getClient
        //instance.getClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientAssetSizes', function() {
      it('should call getClientAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getClientAssetSizes
        //instance.getClientAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientHoldings', function() {
      it('should call getClientHoldings successfully', function(done) {
        //uncomment below and update the code to test getClientHoldings
        //instance.getClientHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientHydro', function() {
      it('should call getClientHydro successfully', function(done) {
        //uncomment below and update the code to test getClientHydro
        //instance.getClientHydro(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientHydros', function() {
      it('should call getClientHydros successfully', function(done) {
        //uncomment below and update the code to test getClientHydros
        //instance.getClientHydros(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientPerformance', function() {
      it('should call getClientPerformance successfully', function(done) {
        //uncomment below and update the code to test getClientPerformance
        //instance.getClientPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientResponse', function() {
      it('should call getClientResponse successfully', function(done) {
        //uncomment below and update the code to test getClientResponse
        //instance.getClientResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientResponses', function() {
      it('should call getClientResponses successfully', function(done) {
        //uncomment below and update the code to test getClientResponses
        //instance.getClientResponses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientTransactions', function() {
      it('should call getClientTransactions successfully', function(done) {
        //uncomment below and update the code to test getClientTransactions
        //instance.getClientTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClients', function() {
      it('should call getClients successfully', function(done) {
        //uncomment below and update the code to test getClients
        //instance.getClients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDecisionTree', function() {
      it('should call getDecisionTree successfully', function(done) {
        //uncomment below and update the code to test getDecisionTree
        //instance.getDecisionTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDecisionTrees', function() {
      it('should call getDecisionTrees successfully', function(done) {
        //uncomment below and update the code to test getDecisionTrees
        //instance.getDecisionTrees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDepositRequest', function() {
      it('should call getDepositRequest successfully', function(done) {
        //uncomment below and update the code to test getDepositRequest
        //instance.getDepositRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDepositRequests', function() {
      it('should call getDepositRequests successfully', function(done) {
        //uncomment below and update the code to test getDepositRequests
        //instance.getDepositRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFundingRequest', function() {
      it('should call getFundingRequest successfully', function(done) {
        //uncomment below and update the code to test getFundingRequest
        //instance.getFundingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFundingRequests', function() {
      it('should call getFundingRequests successfully', function(done) {
        //uncomment below and update the code to test getFundingRequests
        //instance.getFundingRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoal', function() {
      it('should call getGoal successfully', function(done) {
        //uncomment below and update the code to test getGoal
        //instance.getGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalAssetSizes', function() {
      it('should call getGoalAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getGoalAssetSizes
        //instance.getGoalAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalHoldings', function() {
      it('should call getGoalHoldings successfully', function(done) {
        //uncomment below and update the code to test getGoalHoldings
        //instance.getGoalHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalPerformance', function() {
      it('should call getGoalPerformance successfully', function(done) {
        //uncomment below and update the code to test getGoalPerformance
        //instance.getGoalPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalTrackRecord', function() {
      it('should call getGoalTrackRecord successfully', function(done) {
        //uncomment below and update the code to test getGoalTrackRecord
        //instance.getGoalTrackRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalTrackRecords', function() {
      it('should call getGoalTrackRecords successfully', function(done) {
        //uncomment below and update the code to test getGoalTrackRecords
        //instance.getGoalTrackRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoalTransactions', function() {
      it('should call getGoalTransactions successfully', function(done) {
        //uncomment below and update the code to test getGoalTransactions
        //instance.getGoalTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGoals', function() {
      it('should call getGoals successfully', function(done) {
        //uncomment below and update the code to test getGoals
        //instance.getGoals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModel', function() {
      it('should call getModel successfully', function(done) {
        //uncomment below and update the code to test getModel
        //instance.getModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelAssetSize', function() {
      it('should call getModelAssetSize successfully', function(done) {
        //uncomment below and update the code to test getModelAssetSize
        //instance.getModelAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelAssetSizes', function() {
      it('should call getModelAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getModelAssetSizes
        //instance.getModelAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelComment', function() {
      it('should call getModelComment successfully', function(done) {
        //uncomment below and update the code to test getModelComment
        //instance.getModelComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelComments', function() {
      it('should call getModelComments successfully', function(done) {
        //uncomment below and update the code to test getModelComments
        //instance.getModelComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelHolding', function() {
      it('should call getModelHolding successfully', function(done) {
        //uncomment below and update the code to test getModelHolding
        //instance.getModelHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelHoldings', function() {
      it('should call getModelHoldings successfully', function(done) {
        //uncomment below and update the code to test getModelHoldings
        //instance.getModelHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelPerformance', function() {
      it('should call getModelPerformance successfully', function(done) {
        //uncomment below and update the code to test getModelPerformance
        //instance.getModelPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelTransaction', function() {
      it('should call getModelTransaction successfully', function(done) {
        //uncomment below and update the code to test getModelTransaction
        //instance.getModelTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelTransactions', function() {
      it('should call getModelTransactions successfully', function(done) {
        //uncomment below and update the code to test getModelTransactions
        //instance.getModelTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModels', function() {
      it('should call getModels successfully', function(done) {
        //uncomment below and update the code to test getModels
        //instance.getModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNode', function() {
      it('should call getNode successfully', function(done) {
        //uncomment below and update the code to test getNode
        //instance.getNode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodeRelationship', function() {
      it('should call getNodeRelationship successfully', function(done) {
        //uncomment below and update the code to test getNodeRelationship
        //instance.getNodeRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodeRelationships', function() {
      it('should call getNodeRelationships successfully', function(done) {
        //uncomment below and update the code to test getNodeRelationships
        //instance.getNodeRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodes', function() {
      it('should call getNodes successfully', function(done) {
        //uncomment below and update the code to test getNodes
        //instance.getNodes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderRecord', function() {
      it('should call getOrderRecord successfully', function(done) {
        //uncomment below and update the code to test getOrderRecord
        //instance.getOrderRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderRecords', function() {
      it('should call getOrderRecords successfully', function(done) {
        //uncomment below and update the code to test getOrderRecords
        //instance.getOrderRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderStatus', function() {
      it('should call getOrderStatus successfully', function(done) {
        //uncomment below and update the code to test getOrderStatus
        //instance.getOrderStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderStatuses', function() {
      it('should call getOrderStatuses successfully', function(done) {
        //uncomment below and update the code to test getOrderStatuses
        //instance.getOrderStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderTrackingRecord', function() {
      it('should call getOrderTrackingRecord successfully', function(done) {
        //uncomment below and update the code to test getOrderTrackingRecord
        //instance.getOrderTrackingRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderTrackingRecords', function() {
      it('should call getOrderTrackingRecords successfully', function(done) {
        //uncomment below and update the code to test getOrderTrackingRecords
        //instance.getOrderTrackingRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolio', function() {
      it('should call getPortfolio successfully', function(done) {
        //uncomment below and update the code to test getPortfolio
        //instance.getPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioAssetSize', function() {
      it('should call getPortfolioAssetSize successfully', function(done) {
        //uncomment below and update the code to test getPortfolioAssetSize
        //instance.getPortfolioAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioAssetSizes', function() {
      it('should call getPortfolioAssetSizes successfully', function(done) {
        //uncomment below and update the code to test getPortfolioAssetSizes
        //instance.getPortfolioAssetSizes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioComment', function() {
      it('should call getPortfolioComment successfully', function(done) {
        //uncomment below and update the code to test getPortfolioComment
        //instance.getPortfolioComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioComments', function() {
      it('should call getPortfolioComments successfully', function(done) {
        //uncomment below and update the code to test getPortfolioComments
        //instance.getPortfolioComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioHolding', function() {
      it('should call getPortfolioHolding successfully', function(done) {
        //uncomment below and update the code to test getPortfolioHolding
        //instance.getPortfolioHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioHoldings', function() {
      it('should call getPortfolioHoldings successfully', function(done) {
        //uncomment below and update the code to test getPortfolioHoldings
        //instance.getPortfolioHoldings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioPerformance', function() {
      it('should call getPortfolioPerformance successfully', function(done) {
        //uncomment below and update the code to test getPortfolioPerformance
        //instance.getPortfolioPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioTransaction', function() {
      it('should call getPortfolioTransaction successfully', function(done) {
        //uncomment below and update the code to test getPortfolioTransaction
        //instance.getPortfolioTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioTransactions', function() {
      it('should call getPortfolioTransactions successfully', function(done) {
        //uncomment below and update the code to test getPortfolioTransactions
        //instance.getPortfolioTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolios', function() {
      it('should call getPortfolios successfully', function(done) {
        //uncomment below and update the code to test getPortfolios
        //instance.getPortfolios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionnaire', function() {
      it('should call getQuestionnaire successfully', function(done) {
        //uncomment below and update the code to test getQuestionnaire
        //instance.getQuestionnaire(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionnaires', function() {
      it('should call getQuestionnaires successfully', function(done) {
        //uncomment below and update the code to test getQuestionnaires
        //instance.getQuestionnaires(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScore', function() {
      it('should call getScore successfully', function(done) {
        //uncomment below and update the code to test getScore
        //instance.getScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScores', function() {
      it('should call getScores successfully', function(done) {
        //uncomment below and update the code to test getScores
        //instance.getScores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurities', function() {
      it('should call getSecurities successfully', function(done) {
        //uncomment below and update the code to test getSecurities
        //instance.getSecurities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurity', function() {
      it('should call getSecurity successfully', function(done) {
        //uncomment below and update the code to test getSecurity
        //instance.getSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityExclusion', function() {
      it('should call getSecurityExclusion successfully', function(done) {
        //uncomment below and update the code to test getSecurityExclusion
        //instance.getSecurityExclusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityExclusions', function() {
      it('should call getSecurityExclusions successfully', function(done) {
        //uncomment below and update the code to test getSecurityExclusions
        //instance.getSecurityExclusions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityPerformance', function() {
      it('should call getSecurityPerformance successfully', function(done) {
        //uncomment below and update the code to test getSecurityPerformance
        //instance.getSecurityPerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityPrice', function() {
      it('should call getSecurityPrice successfully', function(done) {
        //uncomment below and update the code to test getSecurityPrice
        //instance.getSecurityPrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityPrices', function() {
      it('should call getSecurityPrices successfully', function(done) {
        //uncomment below and update the code to test getSecurityPrices
        //instance.getSecurityPrices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCode', function() {
      it('should call getTransactionCode successfully', function(done) {
        //uncomment below and update the code to test getTransactionCode
        //instance.getTransactionCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCodes', function() {
      it('should call getTransactionCodes successfully', function(done) {
        //uncomment below and update the code to test getTransactionCodes
        //instance.getTransactionCodes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransferRequest', function() {
      it('should call getTransferRequest successfully', function(done) {
        //uncomment below and update the code to test getTransferRequest
        //instance.getTransferRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransferRequests', function() {
      it('should call getTransferRequests successfully', function(done) {
        //uncomment below and update the code to test getTransferRequests
        //instance.getTransferRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWithdrawalRequest', function() {
      it('should call getWithdrawalRequest successfully', function(done) {
        //uncomment below and update the code to test getWithdrawalRequest
        //instance.getWithdrawalRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWithdrawalRequests', function() {
      it('should call getWithdrawalRequests successfully', function(done) {
        //uncomment below and update the code to test getWithdrawalRequests
        //instance.getWithdrawalRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccount', function() {
      it('should call postAccount successfully', function(done) {
        //uncomment below and update the code to test postAccount
        //instance.postAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountAllocation', function() {
      it('should call postAccountAllocation successfully', function(done) {
        //uncomment below and update the code to test postAccountAllocation
        //instance.postAccountAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountBulkOrder', function() {
      it('should call postAccountBulkOrder successfully', function(done) {
        //uncomment below and update the code to test postAccountBulkOrder
        //instance.postAccountBulkOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountRebalanceBuyOnlyOrder', function() {
      it('should call postAccountRebalanceBuyOnlyOrder successfully', function(done) {
        //uncomment below and update the code to test postAccountRebalanceBuyOnlyOrder
        //instance.postAccountRebalanceBuyOnlyOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountRebalanceOrder', function() {
      it('should call postAccountRebalanceOrder successfully', function(done) {
        //uncomment below and update the code to test postAccountRebalanceOrder
        //instance.postAccountRebalanceOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountRebalanceSellOnlyOrder', function() {
      it('should call postAccountRebalanceSellOnlyOrder successfully', function(done) {
        //uncomment below and update the code to test postAccountRebalanceSellOnlyOrder
        //instance.postAccountRebalanceSellOnlyOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountSellAllOrder', function() {
      it('should call postAccountSellAllOrder successfully', function(done) {
        //uncomment below and update the code to test postAccountSellAllOrder
        //instance.postAccountSellAllOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountStage', function() {
      it('should call postAccountStage successfully', function(done) {
        //uncomment below and update the code to test postAccountStage
        //instance.postAccountStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountStatus', function() {
      it('should call postAccountStatus successfully', function(done) {
        //uncomment below and update the code to test postAccountStatus
        //instance.postAccountStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAccountType', function() {
      it('should call postAccountType successfully', function(done) {
        //uncomment below and update the code to test postAccountType
        //instance.postAccountType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAggregationAccount', function() {
      it('should call postAggregationAccount successfully', function(done) {
        //uncomment below and update the code to test postAggregationAccount
        //instance.postAggregationAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAggregationAccountBalance', function() {
      it('should call postAggregationAccountBalance successfully', function(done) {
        //uncomment below and update the code to test postAggregationAccountBalance
        //instance.postAggregationAccountBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAllocation', function() {
      it('should call postAllocation successfully', function(done) {
        //uncomment below and update the code to test postAllocation
        //instance.postAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAllocationComposition', function() {
      it('should call postAllocationComposition successfully', function(done) {
        //uncomment below and update the code to test postAllocationComposition
        //instance.postAllocationComposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBankLink', function() {
      it('should call postBankLink successfully', function(done) {
        //uncomment below and update the code to test postBankLink
        //instance.postBankLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBenchmark', function() {
      it('should call postBenchmark successfully', function(done) {
        //uncomment below and update the code to test postBenchmark
        //instance.postBenchmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBulkOrder', function() {
      it('should call postBulkOrder successfully', function(done) {
        //uncomment below and update the code to test postBulkOrder
        //instance.postBulkOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postClient', function() {
      it('should call postClient successfully', function(done) {
        //uncomment below and update the code to test postClient
        //instance.postClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postClientBulkOrder', function() {
      it('should call postClientBulkOrder successfully', function(done) {
        //uncomment below and update the code to test postClientBulkOrder
        //instance.postClientBulkOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postClientHydro', function() {
      it('should call postClientHydro successfully', function(done) {
        //uncomment below and update the code to test postClientHydro
        //instance.postClientHydro(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postClientResponse', function() {
      it('should call postClientResponse successfully', function(done) {
        //uncomment below and update the code to test postClientResponse
        //instance.postClientResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postDecisionTree', function() {
      it('should call postDecisionTree successfully', function(done) {
        //uncomment below and update the code to test postDecisionTree
        //instance.postDecisionTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postDepositRequest', function() {
      it('should call postDepositRequest successfully', function(done) {
        //uncomment below and update the code to test postDepositRequest
        //instance.postDepositRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postFundingRequest', function() {
      it('should call postFundingRequest successfully', function(done) {
        //uncomment below and update the code to test postFundingRequest
        //instance.postFundingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGoal', function() {
      it('should call postGoal successfully', function(done) {
        //uncomment below and update the code to test postGoal
        //instance.postGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGoalTrackRecord', function() {
      it('should call postGoalTrackRecord successfully', function(done) {
        //uncomment below and update the code to test postGoalTrackRecord
        //instance.postGoalTrackRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postModel', function() {
      it('should call postModel successfully', function(done) {
        //uncomment below and update the code to test postModel
        //instance.postModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postModelAssetSize', function() {
      it('should call postModelAssetSize successfully', function(done) {
        //uncomment below and update the code to test postModelAssetSize
        //instance.postModelAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postModelComment', function() {
      it('should call postModelComment successfully', function(done) {
        //uncomment below and update the code to test postModelComment
        //instance.postModelComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postModelHolding', function() {
      it('should call postModelHolding successfully', function(done) {
        //uncomment below and update the code to test postModelHolding
        //instance.postModelHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postModelTransaction', function() {
      it('should call postModelTransaction successfully', function(done) {
        //uncomment below and update the code to test postModelTransaction
        //instance.postModelTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNode', function() {
      it('should call postNode successfully', function(done) {
        //uncomment below and update the code to test postNode
        //instance.postNode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNodeRelationship', function() {
      it('should call postNodeRelationship successfully', function(done) {
        //uncomment below and update the code to test postNodeRelationship
        //instance.postNodeRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrderRecord', function() {
      it('should call postOrderRecord successfully', function(done) {
        //uncomment below and update the code to test postOrderRecord
        //instance.postOrderRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrderStatus', function() {
      it('should call postOrderStatus successfully', function(done) {
        //uncomment below and update the code to test postOrderStatus
        //instance.postOrderStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrderTrackingRecord', function() {
      it('should call postOrderTrackingRecord successfully', function(done) {
        //uncomment below and update the code to test postOrderTrackingRecord
        //instance.postOrderTrackingRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolio', function() {
      it('should call postPortfolio successfully', function(done) {
        //uncomment below and update the code to test postPortfolio
        //instance.postPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioAssetSize', function() {
      it('should call postPortfolioAssetSize successfully', function(done) {
        //uncomment below and update the code to test postPortfolioAssetSize
        //instance.postPortfolioAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioComment', function() {
      it('should call postPortfolioComment successfully', function(done) {
        //uncomment below and update the code to test postPortfolioComment
        //instance.postPortfolioComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioHolding', function() {
      it('should call postPortfolioHolding successfully', function(done) {
        //uncomment below and update the code to test postPortfolioHolding
        //instance.postPortfolioHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioRebalanceBuyOnlyOrder', function() {
      it('should call postPortfolioRebalanceBuyOnlyOrder successfully', function(done) {
        //uncomment below and update the code to test postPortfolioRebalanceBuyOnlyOrder
        //instance.postPortfolioRebalanceBuyOnlyOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioRebalanceOrder', function() {
      it('should call postPortfolioRebalanceOrder successfully', function(done) {
        //uncomment below and update the code to test postPortfolioRebalanceOrder
        //instance.postPortfolioRebalanceOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioRebalanceSellOnlyOrder', function() {
      it('should call postPortfolioRebalanceSellOnlyOrder successfully', function(done) {
        //uncomment below and update the code to test postPortfolioRebalanceSellOnlyOrder
        //instance.postPortfolioRebalanceSellOnlyOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioSellAllOrder', function() {
      it('should call postPortfolioSellAllOrder successfully', function(done) {
        //uncomment below and update the code to test postPortfolioSellAllOrder
        //instance.postPortfolioSellAllOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPortfolioTransaction', function() {
      it('should call postPortfolioTransaction successfully', function(done) {
        //uncomment below and update the code to test postPortfolioTransaction
        //instance.postPortfolioTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postQuestionnaire', function() {
      it('should call postQuestionnaire successfully', function(done) {
        //uncomment below and update the code to test postQuestionnaire
        //instance.postQuestionnaire(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postScore', function() {
      it('should call postScore successfully', function(done) {
        //uncomment below and update the code to test postScore
        //instance.postScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postSecurity', function() {
      it('should call postSecurity successfully', function(done) {
        //uncomment below and update the code to test postSecurity
        //instance.postSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postSecurityExclusion', function() {
      it('should call postSecurityExclusion successfully', function(done) {
        //uncomment below and update the code to test postSecurityExclusion
        //instance.postSecurityExclusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postSecurityPrice', function() {
      it('should call postSecurityPrice successfully', function(done) {
        //uncomment below and update the code to test postSecurityPrice
        //instance.postSecurityPrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTransactionCode', function() {
      it('should call postTransactionCode successfully', function(done) {
        //uncomment below and update the code to test postTransactionCode
        //instance.postTransactionCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTransferRequest', function() {
      it('should call postTransferRequest successfully', function(done) {
        //uncomment below and update the code to test postTransferRequest
        //instance.postTransferRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postWithdrawalRequest', function() {
      it('should call postWithdrawalRequest successfully', function(done) {
        //uncomment below and update the code to test postWithdrawalRequest
        //instance.postWithdrawalRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribeAccount', function() {
      it('should call subscribeAccount successfully', function(done) {
        //uncomment below and update the code to test subscribeAccount
        //instance.subscribeAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccount', function() {
      it('should call updateAccount successfully', function(done) {
        //uncomment below and update the code to test updateAccount
        //instance.updateAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountAllocation', function() {
      it('should call updateAccountAllocation successfully', function(done) {
        //uncomment below and update the code to test updateAccountAllocation
        //instance.updateAccountAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountPermission', function() {
      it('should call updateAccountPermission successfully', function(done) {
        //uncomment below and update the code to test updateAccountPermission
        //instance.updateAccountPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountStage', function() {
      it('should call updateAccountStage successfully', function(done) {
        //uncomment below and update the code to test updateAccountStage
        //instance.updateAccountStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountStatus', function() {
      it('should call updateAccountStatus successfully', function(done) {
        //uncomment below and update the code to test updateAccountStatus
        //instance.updateAccountStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountType', function() {
      it('should call updateAccountType successfully', function(done) {
        //uncomment below and update the code to test updateAccountType
        //instance.updateAccountType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAggregationAccount', function() {
      it('should call updateAggregationAccount successfully', function(done) {
        //uncomment below and update the code to test updateAggregationAccount
        //instance.updateAggregationAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAggregationAccountBalance', function() {
      it('should call updateAggregationAccountBalance successfully', function(done) {
        //uncomment below and update the code to test updateAggregationAccountBalance
        //instance.updateAggregationAccountBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAllocation', function() {
      it('should call updateAllocation successfully', function(done) {
        //uncomment below and update the code to test updateAllocation
        //instance.updateAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAllocationComposition', function() {
      it('should call updateAllocationComposition successfully', function(done) {
        //uncomment below and update the code to test updateAllocationComposition
        //instance.updateAllocationComposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBankLink', function() {
      it('should call updateBankLink successfully', function(done) {
        //uncomment below and update the code to test updateBankLink
        //instance.updateBankLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBenchmark', function() {
      it('should call updateBenchmark successfully', function(done) {
        //uncomment below and update the code to test updateBenchmark
        //instance.updateBenchmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClient', function() {
      it('should call updateClient successfully', function(done) {
        //uncomment below and update the code to test updateClient
        //instance.updateClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClientHydro', function() {
      it('should call updateClientHydro successfully', function(done) {
        //uncomment below and update the code to test updateClientHydro
        //instance.updateClientHydro(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClientResponse', function() {
      it('should call updateClientResponse successfully', function(done) {
        //uncomment below and update the code to test updateClientResponse
        //instance.updateClientResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDecisionTree', function() {
      it('should call updateDecisionTree successfully', function(done) {
        //uncomment below and update the code to test updateDecisionTree
        //instance.updateDecisionTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDepositRequest', function() {
      it('should call updateDepositRequest successfully', function(done) {
        //uncomment below and update the code to test updateDepositRequest
        //instance.updateDepositRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFundingRequest', function() {
      it('should call updateFundingRequest successfully', function(done) {
        //uncomment below and update the code to test updateFundingRequest
        //instance.updateFundingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGoal', function() {
      it('should call updateGoal successfully', function(done) {
        //uncomment below and update the code to test updateGoal
        //instance.updateGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGoalTrackRecord', function() {
      it('should call updateGoalTrackRecord successfully', function(done) {
        //uncomment below and update the code to test updateGoalTrackRecord
        //instance.updateGoalTrackRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModel', function() {
      it('should call updateModel successfully', function(done) {
        //uncomment below and update the code to test updateModel
        //instance.updateModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelAssetSize', function() {
      it('should call updateModelAssetSize successfully', function(done) {
        //uncomment below and update the code to test updateModelAssetSize
        //instance.updateModelAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelComment', function() {
      it('should call updateModelComment successfully', function(done) {
        //uncomment below and update the code to test updateModelComment
        //instance.updateModelComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelComposition', function() {
      it('should call updateModelComposition successfully', function(done) {
        //uncomment below and update the code to test updateModelComposition
        //instance.updateModelComposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelHolding', function() {
      it('should call updateModelHolding successfully', function(done) {
        //uncomment below and update the code to test updateModelHolding
        //instance.updateModelHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelTransaction', function() {
      it('should call updateModelTransaction successfully', function(done) {
        //uncomment below and update the code to test updateModelTransaction
        //instance.updateModelTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNode', function() {
      it('should call updateNode successfully', function(done) {
        //uncomment below and update the code to test updateNode
        //instance.updateNode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNodeRelationship', function() {
      it('should call updateNodeRelationship successfully', function(done) {
        //uncomment below and update the code to test updateNodeRelationship
        //instance.updateNodeRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderRecord', function() {
      it('should call updateOrderRecord successfully', function(done) {
        //uncomment below and update the code to test updateOrderRecord
        //instance.updateOrderRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderStatus', function() {
      it('should call updateOrderStatus successfully', function(done) {
        //uncomment below and update the code to test updateOrderStatus
        //instance.updateOrderStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderTrackingRecord', function() {
      it('should call updateOrderTrackingRecord successfully', function(done) {
        //uncomment below and update the code to test updateOrderTrackingRecord
        //instance.updateOrderTrackingRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolio', function() {
      it('should call updatePortfolio successfully', function(done) {
        //uncomment below and update the code to test updatePortfolio
        //instance.updatePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioAssetSize', function() {
      it('should call updatePortfolioAssetSize successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioAssetSize
        //instance.updatePortfolioAssetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioComment', function() {
      it('should call updatePortfolioComment successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioComment
        //instance.updatePortfolioComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioHolding', function() {
      it('should call updatePortfolioHolding successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioHolding
        //instance.updatePortfolioHolding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioTransaction', function() {
      it('should call updatePortfolioTransaction successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioTransaction
        //instance.updatePortfolioTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuestionnaire', function() {
      it('should call updateQuestionnaire successfully', function(done) {
        //uncomment below and update the code to test updateQuestionnaire
        //instance.updateQuestionnaire(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateScore', function() {
      it('should call updateScore successfully', function(done) {
        //uncomment below and update the code to test updateScore
        //instance.updateScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSecurity', function() {
      it('should call updateSecurity successfully', function(done) {
        //uncomment below and update the code to test updateSecurity
        //instance.updateSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSecurityExclusion', function() {
      it('should call updateSecurityExclusion successfully', function(done) {
        //uncomment below and update the code to test updateSecurityExclusion
        //instance.updateSecurityExclusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSecurityPrice', function() {
      it('should call updateSecurityPrice successfully', function(done) {
        //uncomment below and update the code to test updateSecurityPrice
        //instance.updateSecurityPrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransactionCode', function() {
      it('should call updateTransactionCode successfully', function(done) {
        //uncomment below and update the code to test updateTransactionCode
        //instance.updateTransactionCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransferRequest', function() {
      it('should call updateTransferRequest successfully', function(done) {
        //uncomment below and update the code to test updateTransferRequest
        //instance.updateTransferRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWithdrawalRequest', function() {
      it('should call updateWithdrawalRequest successfully', function(done) {
        //uncomment below and update the code to test updateWithdrawalRequest
        //instance.updateWithdrawalRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
