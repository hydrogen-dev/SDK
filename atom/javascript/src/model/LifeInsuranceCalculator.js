/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeneficiaryBequestConfig', 'model/ChildrenEducationConfig', 'model/IncomeConfig'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeneficiaryBequestConfig'), require('./ChildrenEducationConfig'), require('./IncomeConfig'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.LifeInsuranceCalculator = factory(root.atom_api.ApiClient, root.atom_api.BeneficiaryBequestConfig, root.atom_api.ChildrenEducationConfig, root.atom_api.IncomeConfig);
  }
}(this, function(ApiClient, BeneficiaryBequestConfig, ChildrenEducationConfig, IncomeConfig) {
  'use strict';




  /**
   * The LifeInsuranceCalculator model module.
   * @module model/LifeInsuranceCalculator
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>LifeInsuranceCalculator</code>.
   * @alias module:model/LifeInsuranceCalculator
   * @class
   * @param mortgageBalance {Number} The outstanding mortgage balance
   * @param otherDebt {Number} Other outstanding debt
   * @param interestRate {Number} The interest rate earned once the benefit amount is received
   */
  var exports = function(mortgageBalance, otherDebt, interestRate) {
    var _this = this;

    _this['mortgage_balance'] = mortgageBalance;
    _this['other_debt'] = otherDebt;
    _this['interest_rate'] = interestRate;











  };

  /**
   * Constructs a <code>LifeInsuranceCalculator</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LifeInsuranceCalculator} obj Optional instance to populate.
   * @return {module:model/LifeInsuranceCalculator} The populated <code>LifeInsuranceCalculator</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('mortgage_balance')) {
        obj['mortgage_balance'] = ApiClient.convertToType(data['mortgage_balance'], 'Number');
      }
      if (data.hasOwnProperty('other_debt')) {
        obj['other_debt'] = ApiClient.convertToType(data['other_debt'], 'Number');
      }
      if (data.hasOwnProperty('interest_rate')) {
        obj['interest_rate'] = ApiClient.convertToType(data['interest_rate'], 'Number');
      }
      if (data.hasOwnProperty('end_of_life_expenses')) {
        obj['end_of_life_expenses'] = ApiClient.convertToType(data['end_of_life_expenses'], 'Number');
      }
      if (data.hasOwnProperty('existing_life_insurance')) {
        obj['existing_life_insurance'] = ApiClient.convertToType(data['existing_life_insurance'], 'Number');
      }
      if (data.hasOwnProperty('liquid_assets')) {
        obj['liquid_assets'] = ApiClient.convertToType(data['liquid_assets'], 'Number');
      }
      if (data.hasOwnProperty('general_inflation_rate')) {
        obj['general_inflation_rate'] = ApiClient.convertToType(data['general_inflation_rate'], 'Number');
      }
      if (data.hasOwnProperty('education_inflation_rate')) {
        obj['education_inflation_rate'] = ApiClient.convertToType(data['education_inflation_rate'], 'Number');
      }
      if (data.hasOwnProperty('tax_rate')) {
        obj['tax_rate'] = ApiClient.convertToType(data['tax_rate'], 'Number');
      }
      if (data.hasOwnProperty('benefit_amount_rounding')) {
        obj['benefit_amount_rounding'] = ApiClient.convertToType(data['benefit_amount_rounding'], 'Number');
      }
      if (data.hasOwnProperty('margin_of_error')) {
        obj['margin_of_error'] = ApiClient.convertToType(data['margin_of_error'], 'Number');
      }
      if (data.hasOwnProperty('children_education_config')) {
        obj['children_education_config'] = ApiClient.convertToType(data['children_education_config'], [ChildrenEducationConfig]);
      }
      if (data.hasOwnProperty('income_config')) {
        obj['income_config'] = ApiClient.convertToType(data['income_config'], [IncomeConfig]);
      }
      if (data.hasOwnProperty('beneficiary_bequest_config')) {
        obj['beneficiary_bequest_config'] = ApiClient.convertToType(data['beneficiary_bequest_config'], [BeneficiaryBequestConfig]);
      }
    }
    return obj;
  }

  /**
   * The outstanding mortgage balance
   * @member {Number} mortgage_balance
   */
  exports.prototype['mortgage_balance'] = undefined;
  /**
   * Other outstanding debt
   * @member {Number} other_debt
   */
  exports.prototype['other_debt'] = undefined;
  /**
   * The interest rate earned once the benefit amount is received
   * @member {Number} interest_rate
   */
  exports.prototype['interest_rate'] = undefined;
  /**
   * End-of-life expenses
   * @member {Number} end_of_life_expenses
   */
  exports.prototype['end_of_life_expenses'] = undefined;
  /**
   * Life insurance already held
   * @member {Number} existing_life_insurance
   */
  exports.prototype['existing_life_insurance'] = undefined;
  /**
   * Liquid assets held
   * @member {Number} liquid_assets
   */
  exports.prototype['liquid_assets'] = undefined;
  /**
   * The general inflation rate
   * @member {Number} general_inflation_rate
   */
  exports.prototype['general_inflation_rate'] = undefined;
  /**
   * The inflation rate for education
   * @member {Number} education_inflation_rate
   */
  exports.prototype['education_inflation_rate'] = undefined;
  /**
   * The tax rate applied to earnings from the interest rate
   * @member {Number} tax_rate
   */
  exports.prototype['tax_rate'] = undefined;
  /**
   * A parameter to round the benefit amount up to a configurable number of digits
   * @member {Number} benefit_amount_rounding
   */
  exports.prototype['benefit_amount_rounding'] = undefined;
  /**
   * The margin of error to apply to the life insurance needed, before rounding
   * @member {Number} margin_of_error
   */
  exports.prototype['margin_of_error'] = undefined;
  /**
   * Benefit information to provide for childrens' primary, secondary, and tertiary schooling
   * @member {Array.<module:model/ChildrenEducationConfig>} children_education_config
   */
  exports.prototype['children_education_config'] = undefined;
  /**
   * Information on replacement income for beneficiaries
   * @member {Array.<module:model/IncomeConfig>} income_config
   */
  exports.prototype['income_config'] = undefined;
  /**
   * Information on bequests for beneficiaries
   * @member {Array.<module:model/BeneficiaryBequestConfig>} beneficiary_bequest_config
   */
  exports.prototype['beneficiary_bequest_config'] = undefined;



  return exports;
}));


