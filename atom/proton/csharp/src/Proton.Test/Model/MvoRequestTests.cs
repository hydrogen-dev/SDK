/* 
 * Hydrogen Proton API
 *
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Proton.Api;
using Proton.ModelEntity;
using Proton.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Proton.Test
{
    /// <summary>
    ///  Class for testing MvoRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class MvoRequestTests
    {
        // TODO uncomment below to declare an instance variable for MvoRequest
        //private MvoRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of MvoRequest
            //instance = new MvoRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MvoRequest
        /// </summary>
        [Test]
        public void MvoRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" MvoRequest
            //Assert.IsInstanceOfType<MvoRequest> (instance, "variable 'instance' is a MvoRequest");
        }


        /// <summary>
        /// Test the property 'Tickers'
        /// </summary>
        [Test]
        public void TickersTest()
        {
            // TODO unit test for the property 'Tickers'
        }
        /// <summary>
        /// Test the property 'WConfig'
        /// </summary>
        [Test]
        public void WConfigTest()
        {
            // TODO unit test for the property 'WConfig'
        }
        /// <summary>
        /// Test the property 'MinAssets'
        /// </summary>
        [Test]
        public void MinAssetsTest()
        {
            // TODO unit test for the property 'MinAssets'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Test]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }
        /// <summary>
        /// Test the property 'MarketDataSource'
        /// </summary>
        [Test]
        public void MarketDataSourceTest()
        {
            // TODO unit test for the property 'MarketDataSource'
        }
        /// <summary>
        /// Test the property 'WAssetConfig'
        /// </summary>
        [Test]
        public void WAssetConfigTest()
        {
            // TODO unit test for the property 'WAssetConfig'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'TgtType'
        /// </summary>
        [Test]
        public void TgtTypeTest()
        {
            // TODO unit test for the property 'TgtType'
        }
        /// <summary>
        /// Test the property 'UseProxyData'
        /// </summary>
        [Test]
        public void UseProxyDataTest()
        {
            // TODO unit test for the property 'UseProxyData'
        }
        /// <summary>
        /// Test the property 'TgtVal'
        /// </summary>
        [Test]
        public void TgtValTest()
        {
            // TODO unit test for the property 'TgtVal'
        }
        /// <summary>
        /// Test the property 'SecTypes'
        /// </summary>
        [Test]
        public void SecTypesTest()
        {
            // TODO unit test for the property 'SecTypes'
        }

    }

}
