=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.9.5
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.20

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::DecisionTreeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DecisionTreeApi' do
  before do
    # run before each test
    @instance = NucleusApi::DecisionTreeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DecisionTreeApi' do
    it 'should create an instance of DecisionTreeApi' do
      expect(@instance).to be_instance_of(NucleusApi::DecisionTreeApi)
    end
  end

  # unit tests for create_decision_tree_result_using_post
  # Decision tree result
  # Decision tree result. 
  # @param decision_tree_co decisionTreeCO
  # @param [Hash] opts the optional parameters
  # @return [DecisionTreeResultVO]
  describe 'create_decision_tree_result_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_decision_tree_using_post
  # Create a decision tree
  # Create a new decision tree for your firm.
  # @param decision_tree decisionTree
  # @param [Hash] opts the optional parameters
  # @return [DecisionTree]
  describe 'create_decision_tree_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_node_relationship_using_post
  # Create a node relationship
  # Create a new node relationship for your firm.
  # @param node node
  # @param [Hash] opts the optional parameters
  # @return [NodeRelationship]
  describe 'create_node_relationship_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_node_using_post
  # Create a node
  # Create a new node for your firm that can be used in a decision tree and mapped to other nodes.
  # @param node node
  # @param [Hash] opts the optional parameters
  # @return [Node]
  describe 'create_node_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_decision_tree_using_delete
  # Delete a decision tree
  # Permanently delete a decision tree.
  # @param decision_tree_id UUID decision_tree_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_decision_tree_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_node_relationship_using_delete
  # Delete a node relationship
  # Permanently delete a node relationship.
  # @param node_relationship_id UUID node_relationship_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_node_relationship_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_node_using_delete
  # Delete a node
  # Permanently delete a node.
  # @param node_id UUID node_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_node_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_decision_tree_all_using_get
  # List all decision tree
  # Get the information for all decision trees defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageDecisionTree]
  describe 'get_decision_tree_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_decision_tree_using_get
  # Retrieve a decision tree
  # Retrieve the information for a decision tree.
  # @param decision_tree_id UUID decision_tree_id
  # @param [Hash] opts the optional parameters
  # @return [DecisionTree]
  describe 'get_decision_tree_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_all_using_get
  # List all nodes
  # List all nodes that are defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageNode]
  describe 'get_node_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_relationship_all_using_get
  # List all node relationships
  # Get the information for all the node relationships defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageNodeRelationship]
  describe 'get_node_relationship_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_relationship_using_get
  # Retrieve a node relationship
  # Retrieve the information for a node relationship.
  # @param node_relationship_id UUID node_relationship_id
  # @param [Hash] opts the optional parameters
  # @return [NodeRelationship]
  describe 'get_node_relationship_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_using_get
  # Retrieve a node
  # Retrieve the information for a node.
  # @param node_id UUID node_id
  # @param [Hash] opts the optional parameters
  # @return [Node]
  describe 'get_node_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_decision_tree_using_put
  # Update a decision tree
  # Updated the information for a decision tree.
  # @param decision_tree decision_tree
  # @param decision_tree_id UUID decision_tree_id
  # @param [Hash] opts the optional parameters
  # @return [DecisionTree]
  describe 'update_decision_tree_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_node_relationship_using_put
  # Update a node relationship
  # Update the information for a node relationship.
  # @param json_node jsonNode
  # @param node_relationship_id UUID node_relationship_id
  # @param [Hash] opts the optional parameters
  # @return [NodeRelationship]
  describe 'update_node_relationship_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_node_using_put
  # Update a node
  # Updated the information for a node.
  # @param json_node jsonNode
  # @param node_id UUID node_id
  # @param [Hash] opts the optional parameters
  # @return [Node]
  describe 'update_node_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
