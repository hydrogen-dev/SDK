/* 
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Nucleus.Client;
using Nucleus.Api;
using Nucleus.ModelEntity;

namespace Nucleus.Test
{
    /// <summary>
    ///  Class for testing HouseholdApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class HouseholdApiTests
    {
        private HouseholdApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new HouseholdApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HouseholdApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' HouseholdApi
            //Assert.IsInstanceOfType(typeof(HouseholdApi), instance, "instance is a HouseholdApi");
        }

        
        /// <summary>
        /// Test CreateHouseholdUsingPost
        /// </summary>
        [Test]
        public void CreateHouseholdUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Household household = null;
            //var response = instance.CreateHouseholdUsingPost(household);
            //Assert.IsInstanceOf<Household> (response, "response is Household");
        }
        
        /// <summary>
        /// Test DeleteHouseholdUsingDelete
        /// </summary>
        [Test]
        public void DeleteHouseholdUsingDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? householdId = null;
            //instance.DeleteHouseholdUsingDelete(householdId);
            
        }
        
        /// <summary>
        /// Test GetHouseholdAllUsingGet
        /// </summary>
        [Test]
        public void GetHouseholdAllUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? ascending = null;
            //string filter = null;
            //string orderBy = null;
            //int? page = null;
            //int? size = null;
            //var response = instance.GetHouseholdAllUsingGet(ascending, filter, orderBy, page, size);
            //Assert.IsInstanceOf<PageHousehold> (response, "response is PageHousehold");
        }
        
        /// <summary>
        /// Test GetHouseholdClientAssetSizeUsingGet
        /// </summary>
        [Test]
        public void GetHouseholdClientAssetSizeUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? householdId = null;
            //string currencyConversion = null;
            //DateTime? endDate = null;
            //bool? excludeSubledger = null;
            //bool? getLatest = null;
            //string sortType = null;
            //DateTime? startDate = null;
            //var response = instance.GetHouseholdClientAssetSizeUsingGet(householdId, currencyConversion, endDate, excludeSubledger, getLatest, sortType, startDate);
            //Assert.IsInstanceOf<List<AvailableDateDoubleVO>> (response, "response is List<AvailableDateDoubleVO>");
        }
        
        /// <summary>
        /// Test GetHouseholdClientHoldingUsingGet
        /// </summary>
        [Test]
        public void GetHouseholdClientHoldingUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? householdId = null;
            //bool? ascending = null;
            //string currencyConversion = null;
            //DateTime? endDate = null;
            //string filter = null;
            //bool? getLatest = null;
            //string orderBy = null;
            //int? page = null;
            //int? size = null;
            //DateTime? startDate = null;
            //var response = instance.GetHouseholdClientHoldingUsingGet(householdId, ascending, currencyConversion, endDate, filter, getLatest, orderBy, page, size, startDate);
            //Assert.IsInstanceOf<PagePortfolioHoldingAgg> (response, "response is PagePortfolioHoldingAgg");
        }
        
        /// <summary>
        /// Test GetHouseholdClientTransactionUsingGet
        /// </summary>
        [Test]
        public void GetHouseholdClientTransactionUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? householdId = null;
            //bool? ascending = null;
            //string currencyConversion = null;
            //DateTime? endDate = null;
            //string filter = null;
            //string orderBy = null;
            //int? page = null;
            //int? size = null;
            //DateTime? startDate = null;
            //var response = instance.GetHouseholdClientTransactionUsingGet(householdId, ascending, currencyConversion, endDate, filter, orderBy, page, size, startDate);
            //Assert.IsInstanceOf<PagePortfolioTransaction> (response, "response is PagePortfolioTransaction");
        }
        
        /// <summary>
        /// Test GetHouseholdUsingGet
        /// </summary>
        [Test]
        public void GetHouseholdUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? householdId = null;
            //var response = instance.GetHouseholdUsingGet(householdId);
            //Assert.IsInstanceOf<Household> (response, "response is Household");
        }
        
        /// <summary>
        /// Test UpdateHouseholdUsingPut
        /// </summary>
        [Test]
        public void UpdateHouseholdUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object household = null;
            //Guid? householdId = null;
            //var response = instance.UpdateHouseholdUsingPut(household, householdId);
            //Assert.IsInstanceOf<Household> (response, "response is Household");
        }
        
    }

}
