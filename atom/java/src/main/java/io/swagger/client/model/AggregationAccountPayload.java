/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * AggregationAccountPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-13T18:14:40.362-04:00")
public class AggregationAccountPayload {
  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("account_name")
  private String accountName = null;

  @SerializedName("institution_name")
  private String institutionName = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("subcategory")
  private String subcategory = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("mask")
  private String mask = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("is_active")
  private Boolean isActive = true;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  public AggregationAccountPayload clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The ID of a client to which the aggregation account belongs
   * @return clientId
  **/
  @ApiModelProperty(required = true, value = "The ID of a client to which the aggregation account belongs")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public AggregationAccountPayload accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * The name of the held-away account for this aggregation account record
   * @return accountName
  **/
  @ApiModelProperty(required = true, value = "The name of the held-away account for this aggregation account record")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public AggregationAccountPayload institutionName(String institutionName) {
    this.institutionName = institutionName;
    return this;
  }

   /**
   * The name of the institution holding the held-away account for this aggregation account record
   * @return institutionName
  **/
  @ApiModelProperty(required = true, value = "The name of the institution holding the held-away account for this aggregation account record")
  public String getInstitutionName() {
    return institutionName;
  }

  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }

  public AggregationAccountPayload category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Category for the held-away account such as “Bank Account”
   * @return category
  **/
  @ApiModelProperty(value = "Category for the held-away account such as “Bank Account”")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AggregationAccountPayload subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * Subcategory for the held-away account such as “Checking Account”
   * @return subcategory
  **/
  @ApiModelProperty(value = "Subcategory for the held-away account such as “Checking Account”")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }

  public AggregationAccountPayload accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * The account number of the held-away account for this aggregation account record
   * @return accountNumber
  **/
  @ApiModelProperty(value = "The account number of the held-away account for this aggregation account record")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public AggregationAccountPayload mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * The masked version of the account number of the held-away account for this aggregation account record
   * @return mask
  **/
  @ApiModelProperty(value = "The masked version of the account number of the held-away account for this aggregation account record")
  public String getMask() {
    return mask;
  }

  public void setMask(String mask) {
    this.mask = mask;
  }

  public AggregationAccountPayload currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Alphabetic currency code for the base currency of the account linked, limited to 3 characters
   * @return currencyCode
  **/
  @ApiModelProperty(value = "Alphabetic currency code for the base currency of the account linked, limited to 3 characters")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public AggregationAccountPayload isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Indicates if the aggregation account record is active. Defaults to true which indicates it is active
   * @return isActive
  **/
  @ApiModelProperty(value = "Indicates if the aggregation account record is active. Defaults to true which indicates it is active")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public AggregationAccountPayload metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Custom information associated with the aggregation account in the format key:value
   * @return metadata
  **/
  @ApiModelProperty(value = "Custom information associated with the aggregation account in the format key:value")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public AggregationAccountPayload secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationAccountPayload aggregationAccountPayload = (AggregationAccountPayload) o;
    return Objects.equals(this.clientId, aggregationAccountPayload.clientId) &&
        Objects.equals(this.accountName, aggregationAccountPayload.accountName) &&
        Objects.equals(this.institutionName, aggregationAccountPayload.institutionName) &&
        Objects.equals(this.category, aggregationAccountPayload.category) &&
        Objects.equals(this.subcategory, aggregationAccountPayload.subcategory) &&
        Objects.equals(this.accountNumber, aggregationAccountPayload.accountNumber) &&
        Objects.equals(this.mask, aggregationAccountPayload.mask) &&
        Objects.equals(this.currencyCode, aggregationAccountPayload.currencyCode) &&
        Objects.equals(this.isActive, aggregationAccountPayload.isActive) &&
        Objects.equals(this.metadata, aggregationAccountPayload.metadata) &&
        Objects.equals(this.secondaryId, aggregationAccountPayload.secondaryId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, accountName, institutionName, category, subcategory, accountNumber, mask, currencyCode, isActive, metadata, secondaryId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationAccountPayload {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

