/**
 * Hydrogen Molecule API
 * The Hydrogen Molecule API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SecondaryId', 'model/WalletCreateClient', 'model/WalletCreateWhitelist'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SecondaryId'), require('./WalletCreateClient'), require('./WalletCreateWhitelist'));
  } else {
    // Browser globals (root is window)
    if (!root.molecule_api) {
      root.molecule_api = {};
    }
    root.molecule_api.WalletCreatePayload = factory(root.molecule_api.ApiClient, root.molecule_api.SecondaryId, root.molecule_api.WalletCreateClient, root.molecule_api.WalletCreateWhitelist);
  }
}(this, function(ApiClient, SecondaryId, WalletCreateClient, WalletCreateWhitelist) {
  'use strict';




  /**
   * The WalletCreatePayload model module.
   * @module model/WalletCreatePayload
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>WalletCreatePayload</code>.
   * @alias module:model/WalletCreatePayload
   * @class
   * @param name {String} Name of the wallet
   * @param type {String} Type of the wallet. Can be individual, business, trust, or contract
   */
  var exports = function(name, type) {
    var _this = this;

    _this['name'] = name;
    _this['type'] = type;





  };

  /**
   * Constructs a <code>WalletCreatePayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WalletCreatePayload} obj Optional instance to populate.
   * @return {module:model/WalletCreatePayload} The populated <code>WalletCreatePayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('clients')) {
        obj['clients'] = ApiClient.convertToType(data['clients'], [WalletCreateClient]);
      }
      if (data.hasOwnProperty('token_whitelists')) {
        obj['token_whitelists'] = ApiClient.convertToType(data['token_whitelists'], [WalletCreateWhitelist]);
      }
      if (data.hasOwnProperty('is_active')) {
        obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
      if (data.hasOwnProperty('secondary_id')) {
        obj['secondary_id'] = SecondaryId.constructFromObject(data['secondary_id']);
      }
    }
    return obj;
  }

  /**
   * Name of the wallet
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Type of the wallet. Can be individual, business, trust, or contract
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * List of nucleus clients associated with the wallet and their association type
   * @member {Array.<module:model/WalletCreateClient>} clients
   */
  exports.prototype['clients'] = undefined;
  /**
   * List of tokens where the wallet is whitelisted
   * @member {Array.<module:model/WalletCreateWhitelist>} token_whitelists
   */
  exports.prototype['token_whitelists'] = undefined;
  /**
   * Indicates if the wallet is active. Defaults to true which indicates it is active and available to be used
   * @member {Boolean} is_active
   * @default true
   */
  exports.prototype['is_active'] = true;
  /**
   * Custom information associated with the account in the format key:value
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * @member {module:model/SecondaryId} secondary_id
   */
  exports.prototype['secondary_id'] = undefined;



  return exports;
}));


