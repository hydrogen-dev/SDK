/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Transaction information if from an investment account
 */
@ApiModel(description = "Transaction information if from an investment account")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-12T10:03:00.746-04:00")
public class AggregationAccountTransactionPayloadInvestment {
  @SerializedName("trade_signal")
  private String tradeSignal = null;

  @SerializedName("ticker")
  private String ticker = null;

  @SerializedName("ticker_name")
  private String tickerName = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("quantity")
  private Double quantity = null;

  @SerializedName("fee")
  private Double fee = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("settle_date")
  private String settleDate = null;

  public AggregationAccountTransactionPayloadInvestment tradeSignal(String tradeSignal) {
    this.tradeSignal = tradeSignal;
    return this;
  }

   /**
   * Trade signal for an investment transaction
   * @return tradeSignal
  **/
  @ApiModelProperty(required = true, value = "Trade signal for an investment transaction")
  public String getTradeSignal() {
    return tradeSignal;
  }

  public void setTradeSignal(String tradeSignal) {
    this.tradeSignal = tradeSignal;
  }

  public AggregationAccountTransactionPayloadInvestment ticker(String ticker) {
    this.ticker = ticker;
    return this;
  }

   /**
   * Ticker of the security for an investment transaction
   * @return ticker
  **/
  @ApiModelProperty(required = true, value = "Ticker of the security for an investment transaction")
  public String getTicker() {
    return ticker;
  }

  public void setTicker(String ticker) {
    this.ticker = ticker;
  }

  public AggregationAccountTransactionPayloadInvestment tickerName(String tickerName) {
    this.tickerName = tickerName;
    return this;
  }

   /**
   * Ticker name of the security for an investment transaction
   * @return tickerName
  **/
  @ApiModelProperty(value = "Ticker name of the security for an investment transaction")
  public String getTickerName() {
    return tickerName;
  }

  public void setTickerName(String tickerName) {
    this.tickerName = tickerName;
  }

  public AggregationAccountTransactionPayloadInvestment price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price of the security for an investment transaction
   * @return price
  **/
  @ApiModelProperty(required = true, value = "Price of the security for an investment transaction")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public AggregationAccountTransactionPayloadInvestment quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The number of units involved in this transaction, as reported by the financial institution
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "The number of units involved in this transaction, as reported by the financial institution")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public AggregationAccountTransactionPayloadInvestment fee(Double fee) {
    this.fee = fee;
    return this;
  }

   /**
   * Fee that is part of the transaction
   * @return fee
  **/
  @ApiModelProperty(value = "Fee that is part of the transaction")
  public Double getFee() {
    return fee;
  }

  public void setFee(Double fee) {
    this.fee = fee;
  }

  public AggregationAccountTransactionPayloadInvestment status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The position of an investment transaction within its lifecycle such as “Pending” or “Posted”
   * @return status
  **/
  @ApiModelProperty(value = "The position of an investment transaction within its lifecycle such as “Pending” or “Posted”")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public AggregationAccountTransactionPayloadInvestment settleDate(String settleDate) {
    this.settleDate = settleDate;
    return this;
  }

   /**
   * Date on which this transaction was finalized
   * @return settleDate
  **/
  @ApiModelProperty(value = "Date on which this transaction was finalized")
  public String getSettleDate() {
    return settleDate;
  }

  public void setSettleDate(String settleDate) {
    this.settleDate = settleDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationAccountTransactionPayloadInvestment aggregationAccountTransactionPayloadInvestment = (AggregationAccountTransactionPayloadInvestment) o;
    return Objects.equals(this.tradeSignal, aggregationAccountTransactionPayloadInvestment.tradeSignal) &&
        Objects.equals(this.ticker, aggregationAccountTransactionPayloadInvestment.ticker) &&
        Objects.equals(this.tickerName, aggregationAccountTransactionPayloadInvestment.tickerName) &&
        Objects.equals(this.price, aggregationAccountTransactionPayloadInvestment.price) &&
        Objects.equals(this.quantity, aggregationAccountTransactionPayloadInvestment.quantity) &&
        Objects.equals(this.fee, aggregationAccountTransactionPayloadInvestment.fee) &&
        Objects.equals(this.status, aggregationAccountTransactionPayloadInvestment.status) &&
        Objects.equals(this.settleDate, aggregationAccountTransactionPayloadInvestment.settleDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tradeSignal, ticker, tickerName, price, quantity, fee, status, settleDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationAccountTransactionPayloadInvestment {\n");
    
    sb.append("    tradeSignal: ").append(toIndentedString(tradeSignal)).append("\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    tickerName: ").append(toIndentedString(tickerName)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    settleDate: ").append(toIndentedString(settleDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

