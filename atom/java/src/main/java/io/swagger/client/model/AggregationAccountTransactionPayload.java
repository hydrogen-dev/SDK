/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AggregationAccountTransactionPayloadBankCredit;
import io.swagger.client.model.AggregationAccountTransactionPayloadInvestment;
import java.io.IOException;
import java.util.UUID;

/**
 * AggregationAccountTransactionPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class AggregationAccountTransactionPayload {
  @SerializedName("aggregation_account_id")
  private UUID aggregationAccountId = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("transaction_date")
  private String transactionDate = null;

  @SerializedName("bank_credit")
  private AggregationAccountTransactionPayloadBankCredit bankCredit = null;

  @SerializedName("investment")
  private AggregationAccountTransactionPayloadInvestment investment = null;

  @SerializedName("is_excluded_analysis")
  private Boolean isExcludedAnalysis = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("metadata")
  private Object metadata = null;

  public AggregationAccountTransactionPayload aggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
    return this;
  }

   /**
   * The ID of the aggregation account to which the transaction record belongs
   * @return aggregationAccountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the aggregation account to which the transaction record belongs")
  public UUID getAggregationAccountId() {
    return aggregationAccountId;
  }

  public void setAggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
  }

  public AggregationAccountTransactionPayload currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Alphabetic currency code for the currency of the transaction, limited to 3 characters
   * @return currencyCode
  **/
  @ApiModelProperty(required = true, value = "Alphabetic currency code for the currency of the transaction, limited to 3 characters")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public AggregationAccountTransactionPayload transactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * The date the transaction took place
   * @return transactionDate
  **/
  @ApiModelProperty(required = true, value = "The date the transaction took place")
  public String getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
  }

  public AggregationAccountTransactionPayload bankCredit(AggregationAccountTransactionPayloadBankCredit bankCredit) {
    this.bankCredit = bankCredit;
    return this;
  }

   /**
   * Get bankCredit
   * @return bankCredit
  **/
  @ApiModelProperty(value = "")
  public AggregationAccountTransactionPayloadBankCredit getBankCredit() {
    return bankCredit;
  }

  public void setBankCredit(AggregationAccountTransactionPayloadBankCredit bankCredit) {
    this.bankCredit = bankCredit;
  }

  public AggregationAccountTransactionPayload investment(AggregationAccountTransactionPayloadInvestment investment) {
    this.investment = investment;
    return this;
  }

   /**
   * Get investment
   * @return investment
  **/
  @ApiModelProperty(value = "")
  public AggregationAccountTransactionPayloadInvestment getInvestment() {
    return investment;
  }

  public void setInvestment(AggregationAccountTransactionPayloadInvestment investment) {
    this.investment = investment;
  }

  public AggregationAccountTransactionPayload isExcludedAnalysis(Boolean isExcludedAnalysis) {
    this.isExcludedAnalysis = isExcludedAnalysis;
    return this;
  }

   /**
   * Indicates if this transaction will be excluded from any spending or income analysis done in Proton tools. Defaults to “false” which indicates it will not be excluded from Proton analyses
   * @return isExcludedAnalysis
  **/
  @ApiModelProperty(value = "Indicates if this transaction will be excluded from any spending or income analysis done in Proton tools. Defaults to “false” which indicates it will not be excluded from Proton analyses")
  public Boolean isIsExcludedAnalysis() {
    return isExcludedAnalysis;
  }

  public void setIsExcludedAnalysis(Boolean isExcludedAnalysis) {
    this.isExcludedAnalysis = isExcludedAnalysis;
  }

  public AggregationAccountTransactionPayload secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public AggregationAccountTransactionPayload metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Custom information associated with the aggregation account transaction in the format key:value
   * @return metadata
  **/
  @ApiModelProperty(value = "Custom information associated with the aggregation account transaction in the format key:value")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationAccountTransactionPayload aggregationAccountTransactionPayload = (AggregationAccountTransactionPayload) o;
    return Objects.equals(this.aggregationAccountId, aggregationAccountTransactionPayload.aggregationAccountId) &&
        Objects.equals(this.currencyCode, aggregationAccountTransactionPayload.currencyCode) &&
        Objects.equals(this.transactionDate, aggregationAccountTransactionPayload.transactionDate) &&
        Objects.equals(this.bankCredit, aggregationAccountTransactionPayload.bankCredit) &&
        Objects.equals(this.investment, aggregationAccountTransactionPayload.investment) &&
        Objects.equals(this.isExcludedAnalysis, aggregationAccountTransactionPayload.isExcludedAnalysis) &&
        Objects.equals(this.secondaryId, aggregationAccountTransactionPayload.secondaryId) &&
        Objects.equals(this.metadata, aggregationAccountTransactionPayload.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationAccountId, currencyCode, transactionDate, bankCredit, investment, isExcludedAnalysis, secondaryId, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationAccountTransactionPayload {\n");
    
    sb.append("    aggregationAccountId: ").append(toIndentedString(aggregationAccountId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    bankCredit: ").append(toIndentedString(bankCredit)).append("\n");
    sb.append("    investment: ").append(toIndentedString(investment)).append("\n");
    sb.append("    isExcludedAnalysis: ").append(toIndentedString(isExcludedAnalysis)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

