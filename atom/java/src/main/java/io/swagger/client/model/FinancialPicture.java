/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * FinancialPicture
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class FinancialPicture {
  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("show_change")
  private Boolean showChange = false;

  @SerializedName("show_history")
  private Boolean showHistory = false;

  public FinancialPicture clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The ID of a client&#39;s financial picture
   * @return clientId
  **/
  @ApiModelProperty(required = true, value = "The ID of a client's financial picture")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public FinancialPicture startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date of the financial picture analysis. Defaults to earliest date there is data.
   * @return startDate
  **/
  @ApiModelProperty(value = "Start date of the financial picture analysis. Defaults to earliest date there is data.")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public FinancialPicture endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End date of the financial picture analysis. Defaults to latest date there is data.
   * @return endDate
  **/
  @ApiModelProperty(value = "End date of the financial picture analysis. Defaults to latest date there is data.")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public FinancialPicture showChange(Boolean showChange) {
    this.showChange = showChange;
    return this;
  }

   /**
   * Indicates whether to return cumulative changes in the user’s total assets, total liabilities, and net worth over time, within the specified date range. Defaults to FALSE which indicates it will not return these changes.
   * @return showChange
  **/
  @ApiModelProperty(value = "Indicates whether to return cumulative changes in the user’s total assets, total liabilities, and net worth over time, within the specified date range. Defaults to FALSE which indicates it will not return these changes.")
  public Boolean isShowChange() {
    return showChange;
  }

  public void setShowChange(Boolean showChange) {
    this.showChange = showChange;
  }

  public FinancialPicture showHistory(Boolean showHistory) {
    this.showHistory = showHistory;
    return this;
  }

   /**
   * Indicates whether to return a daily history of the user’s financial picture within the specified date range. Defaults to FALSE which indicates it will not return daily historical records.
   * @return showHistory
  **/
  @ApiModelProperty(value = "Indicates whether to return a daily history of the user’s financial picture within the specified date range. Defaults to FALSE which indicates it will not return daily historical records.")
  public Boolean isShowHistory() {
    return showHistory;
  }

  public void setShowHistory(Boolean showHistory) {
    this.showHistory = showHistory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialPicture financialPicture = (FinancialPicture) o;
    return Objects.equals(this.clientId, financialPicture.clientId) &&
        Objects.equals(this.startDate, financialPicture.startDate) &&
        Objects.equals(this.endDate, financialPicture.endDate) &&
        Objects.equals(this.showChange, financialPicture.showChange) &&
        Objects.equals(this.showHistory, financialPicture.showHistory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, startDate, endDate, showChange, showHistory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialPicture {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    showChange: ").append(toIndentedString(showChange)).append("\n");
    sb.append("    showHistory: ").append(toIndentedString(showHistory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

