/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * CustomerAnalysisRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-28T09:20:08.129Z")
public class CustomerAnalysisRequest {
  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("response_limit")
  private Integer responseLimit = 10;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("benchmark_end_date")
  private LocalDate benchmarkEndDate = null;

  @SerializedName("currency_conversion")
  private String currencyConversion = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("customer_ids")
  private List<UUID> customerIds = null;

  @SerializedName("business_id")
  private UUID businessId = null;

  @SerializedName("benchmark_start_date")
  private LocalDate benchmarkStartDate = null;

  @SerializedName("only_active_customers")
  private Boolean onlyActiveCustomers = false;

  public CustomerAnalysisRequest currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public CustomerAnalysisRequest clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public CustomerAnalysisRequest responseLimit(Integer responseLimit) {
    this.responseLimit = responseLimit;
    return this;
  }

   /**
   * Get responseLimit
   * minimum: 1
   * @return responseLimit
  **/
  @ApiModelProperty(value = "")
  public Integer getResponseLimit() {
    return responseLimit;
  }

  public void setResponseLimit(Integer responseLimit) {
    this.responseLimit = responseLimit;
  }

  public CustomerAnalysisRequest endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public CustomerAnalysisRequest benchmarkEndDate(LocalDate benchmarkEndDate) {
    this.benchmarkEndDate = benchmarkEndDate;
    return this;
  }

   /**
   * Get benchmarkEndDate
   * @return benchmarkEndDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getBenchmarkEndDate() {
    return benchmarkEndDate;
  }

  public void setBenchmarkEndDate(LocalDate benchmarkEndDate) {
    this.benchmarkEndDate = benchmarkEndDate;
  }

  public CustomerAnalysisRequest currencyConversion(String currencyConversion) {
    this.currencyConversion = currencyConversion;
    return this;
  }

   /**
   * Get currencyConversion
   * @return currencyConversion
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyConversion() {
    return currencyConversion;
  }

  public void setCurrencyConversion(String currencyConversion) {
    this.currencyConversion = currencyConversion;
  }

  public CustomerAnalysisRequest startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public CustomerAnalysisRequest customerIds(List<UUID> customerIds) {
    this.customerIds = customerIds;
    return this;
  }

  public CustomerAnalysisRequest addCustomerIdsItem(UUID customerIdsItem) {
    if (this.customerIds == null) {
      this.customerIds = new ArrayList<UUID>();
    }
    this.customerIds.add(customerIdsItem);
    return this;
  }

   /**
   * Get customerIds
   * @return customerIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getCustomerIds() {
    return customerIds;
  }

  public void setCustomerIds(List<UUID> customerIds) {
    this.customerIds = customerIds;
  }

  public CustomerAnalysisRequest businessId(UUID businessId) {
    this.businessId = businessId;
    return this;
  }

   /**
   * Get businessId
   * @return businessId
  **/
  @ApiModelProperty(value = "")
  public UUID getBusinessId() {
    return businessId;
  }

  public void setBusinessId(UUID businessId) {
    this.businessId = businessId;
  }

  public CustomerAnalysisRequest benchmarkStartDate(LocalDate benchmarkStartDate) {
    this.benchmarkStartDate = benchmarkStartDate;
    return this;
  }

   /**
   * Get benchmarkStartDate
   * @return benchmarkStartDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getBenchmarkStartDate() {
    return benchmarkStartDate;
  }

  public void setBenchmarkStartDate(LocalDate benchmarkStartDate) {
    this.benchmarkStartDate = benchmarkStartDate;
  }

  public CustomerAnalysisRequest onlyActiveCustomers(Boolean onlyActiveCustomers) {
    this.onlyActiveCustomers = onlyActiveCustomers;
    return this;
  }

   /**
   * Get onlyActiveCustomers
   * @return onlyActiveCustomers
  **/
  @ApiModelProperty(value = "")
  public Boolean isOnlyActiveCustomers() {
    return onlyActiveCustomers;
  }

  public void setOnlyActiveCustomers(Boolean onlyActiveCustomers) {
    this.onlyActiveCustomers = onlyActiveCustomers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAnalysisRequest customerAnalysisRequest = (CustomerAnalysisRequest) o;
    return Objects.equals(this.currencyCode, customerAnalysisRequest.currencyCode) &&
        Objects.equals(this.clientId, customerAnalysisRequest.clientId) &&
        Objects.equals(this.responseLimit, customerAnalysisRequest.responseLimit) &&
        Objects.equals(this.endDate, customerAnalysisRequest.endDate) &&
        Objects.equals(this.benchmarkEndDate, customerAnalysisRequest.benchmarkEndDate) &&
        Objects.equals(this.currencyConversion, customerAnalysisRequest.currencyConversion) &&
        Objects.equals(this.startDate, customerAnalysisRequest.startDate) &&
        Objects.equals(this.customerIds, customerAnalysisRequest.customerIds) &&
        Objects.equals(this.businessId, customerAnalysisRequest.businessId) &&
        Objects.equals(this.benchmarkStartDate, customerAnalysisRequest.benchmarkStartDate) &&
        Objects.equals(this.onlyActiveCustomers, customerAnalysisRequest.onlyActiveCustomers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, clientId, responseLimit, endDate, benchmarkEndDate, currencyConversion, startDate, customerIds, businessId, benchmarkStartDate, onlyActiveCustomers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAnalysisRequest {\n");
    
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    responseLimit: ").append(toIndentedString(responseLimit)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    benchmarkEndDate: ").append(toIndentedString(benchmarkEndDate)).append("\n");
    sb.append("    currencyConversion: ").append(toIndentedString(currencyConversion)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    customerIds: ").append(toIndentedString(customerIds)).append("\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    benchmarkStartDate: ").append(toIndentedString(benchmarkStartDate)).append("\n");
    sb.append("    onlyActiveCustomers: ").append(toIndentedString(onlyActiveCustomers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

