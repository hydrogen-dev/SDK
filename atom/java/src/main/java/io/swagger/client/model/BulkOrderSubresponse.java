/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BulkOrderFirmPayload;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * BulkOrderSubresponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-13T18:14:40.362-04:00")
public class BulkOrderSubresponse {
  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("buy_transaction_code_id")
  private UUID buyTransactionCodeId = null;

  @SerializedName("sell_transaction_code_id")
  private UUID sellTransactionCodeId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("create_date")
  private String createDate = null;

  @SerializedName("update_date")
  private String updateDate = null;

  public BulkOrderSubresponse date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date for all the orders that should be aggregated together in the bulk order record
   * @return date
  **/
  @ApiModelProperty(required = true, value = "Date for all the orders that should be aggregated together in the bulk order record")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public BulkOrderSubresponse buyTransactionCodeId(UUID buyTransactionCodeId) {
    this.buyTransactionCodeId = buyTransactionCodeId;
    return this;
  }

   /**
   * The ID of the transaction code that will ultimately be used to denote the buy transactions
   * @return buyTransactionCodeId
  **/
  @ApiModelProperty(required = true, value = "The ID of the transaction code that will ultimately be used to denote the buy transactions")
  public UUID getBuyTransactionCodeId() {
    return buyTransactionCodeId;
  }

  public void setBuyTransactionCodeId(UUID buyTransactionCodeId) {
    this.buyTransactionCodeId = buyTransactionCodeId;
  }

  public BulkOrderSubresponse sellTransactionCodeId(UUID sellTransactionCodeId) {
    this.sellTransactionCodeId = sellTransactionCodeId;
    return this;
  }

   /**
   * The ID of the transaction code that will ultimately be used to denote the sell transactions
   * @return sellTransactionCodeId
  **/
  @ApiModelProperty(required = true, value = "The ID of the transaction code that will ultimately be used to denote the sell transactions")
  public UUID getSellTransactionCodeId() {
    return sellTransactionCodeId;
  }

  public void setSellTransactionCodeId(UUID sellTransactionCodeId) {
    this.sellTransactionCodeId = sellTransactionCodeId;
  }

  public BulkOrderSubresponse id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the bulk order
   * @return id
  **/
  @ApiModelProperty(value = "ID of the bulk order")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public BulkOrderSubresponse createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Datetime the bulk order was created
   * @return createDate
  **/
  @ApiModelProperty(value = "Datetime the bulk order was created")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public BulkOrderSubresponse updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Datetime the bulk order was created
   * @return updateDate
  **/
  @ApiModelProperty(value = "Datetime the bulk order was created")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkOrderSubresponse bulkOrderSubresponse = (BulkOrderSubresponse) o;
    return Objects.equals(this.date, bulkOrderSubresponse.date) &&
        Objects.equals(this.buyTransactionCodeId, bulkOrderSubresponse.buyTransactionCodeId) &&
        Objects.equals(this.sellTransactionCodeId, bulkOrderSubresponse.sellTransactionCodeId) &&
        Objects.equals(this.id, bulkOrderSubresponse.id) &&
        Objects.equals(this.createDate, bulkOrderSubresponse.createDate) &&
        Objects.equals(this.updateDate, bulkOrderSubresponse.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, buyTransactionCodeId, sellTransactionCodeId, id, createDate, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkOrderSubresponse {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    buyTransactionCodeId: ").append(toIndentedString(buyTransactionCodeId)).append("\n");
    sb.append("    sellTransactionCodeId: ").append(toIndentedString(sellTransactionCodeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

