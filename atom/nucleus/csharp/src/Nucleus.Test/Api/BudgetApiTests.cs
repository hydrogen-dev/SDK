/* 
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Nucleus.Client;
using Nucleus.Api;
using Nucleus.ModelEntity;

namespace Nucleus.Test
{
    /// <summary>
    ///  Class for testing BudgetApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BudgetApiTests
    {
        private BudgetApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BudgetApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BudgetApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BudgetApi
            //Assert.IsInstanceOfType(typeof(BudgetApi), instance, "instance is a BudgetApi");
        }

        
        /// <summary>
        /// Test CreateBudgetUsingPost
        /// </summary>
        [Test]
        public void CreateBudgetUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Budget budgetRequest = null;
            //var response = instance.CreateBudgetUsingPost(budgetRequest);
            //Assert.IsInstanceOf<Budget> (response, "response is Budget");
        }
        
        /// <summary>
        /// Test DeleteBudgetUsingDelete
        /// </summary>
        [Test]
        public void DeleteBudgetUsingDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? budgetId = null;
            //instance.DeleteBudgetUsingDelete(budgetId);
            
        }
        
        /// <summary>
        /// Test GetBudgetAllUsingGet
        /// </summary>
        [Test]
        public void GetBudgetAllUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? ascending = null;
            //string currencyConversion = null;
            //string filter = null;
            //string orderBy = null;
            //int? page = null;
            //int? size = null;
            //var response = instance.GetBudgetAllUsingGet(ascending, currencyConversion, filter, orderBy, page, size);
            //Assert.IsInstanceOf<PageBudget> (response, "response is PageBudget");
        }
        
        /// <summary>
        /// Test GetBudgetUsingGet
        /// </summary>
        [Test]
        public void GetBudgetUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? budgetId = null;
            //string currencyConversion = null;
            //var response = instance.GetBudgetUsingGet(budgetId, currencyConversion);
            //Assert.IsInstanceOf<Budget> (response, "response is Budget");
        }
        
        /// <summary>
        /// Test UpdateBudgetUsingPut
        /// </summary>
        [Test]
        public void UpdateBudgetUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object budget = null;
            //Guid? budgetId = null;
            //var response = instance.UpdateBudgetUsingPut(budget, budgetId);
            //Assert.IsInstanceOf<Budget> (response, "response is Budget");
        }
        
    }

}
