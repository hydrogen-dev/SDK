/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AnnuityDepositSchedule;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * AnnuityCalculatorInitialBalance
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-14T14:44:02.139-04:00")
public class AnnuityCalculatorInitialBalance {
  @SerializedName("portfolio_return")
  private BigDecimal portfolioReturn = null;

  @SerializedName("accumulation_horizon")
  private Integer accumulationHorizon = null;

  @SerializedName("decumulation_horizon")
  private Integer decumulationHorizon = null;

  @SerializedName("annuity_amount")
  private BigDecimal annuityAmount = null;

  /**
   * The frequency interval of the annuity
   */
  @JsonAdapter(AnnuityFrequencyIntervalEnum.Adapter.class)
  public enum AnnuityFrequencyIntervalEnum {
    YEAR("year"),
    
    QUARTER("quarter"),
    
    MONTH("month"),
    
    WEEK("week");

    private String value;

    AnnuityFrequencyIntervalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AnnuityFrequencyIntervalEnum fromValue(String text) {
      for (AnnuityFrequencyIntervalEnum b : AnnuityFrequencyIntervalEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AnnuityFrequencyIntervalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AnnuityFrequencyIntervalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AnnuityFrequencyIntervalEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AnnuityFrequencyIntervalEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("annuity_frequency_interval")
  private AnnuityFrequencyIntervalEnum annuityFrequencyInterval = AnnuityFrequencyIntervalEnum.YEAR;

  @SerializedName("inflation_rate")
  private BigDecimal inflationRate = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("deposit_schedule")
  private AnnuityDepositSchedule depositSchedule = null;

  public AnnuityCalculatorInitialBalance portfolioReturn(BigDecimal portfolioReturn) {
    this.portfolioReturn = portfolioReturn;
    return this;
  }

   /**
   * The annualized portfolio return
   * minimum: -1
   * @return portfolioReturn
  **/
  @ApiModelProperty(required = true, value = "The annualized portfolio return")
  public BigDecimal getPortfolioReturn() {
    return portfolioReturn;
  }

  public void setPortfolioReturn(BigDecimal portfolioReturn) {
    this.portfolioReturn = portfolioReturn;
  }

  public AnnuityCalculatorInitialBalance accumulationHorizon(Integer accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
    return this;
  }

   /**
   * The number of years in the accumulation period
   * minimum: 0
   * @return accumulationHorizon
  **/
  @ApiModelProperty(required = true, value = "The number of years in the accumulation period")
  public Integer getAccumulationHorizon() {
    return accumulationHorizon;
  }

  public void setAccumulationHorizon(Integer accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
  }

  public AnnuityCalculatorInitialBalance decumulationHorizon(Integer decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
    return this;
  }

   /**
   * The number of years in the accumulation period
   * minimum: 0
   * @return decumulationHorizon
  **/
  @ApiModelProperty(required = true, value = "The number of years in the accumulation period")
  public Integer getDecumulationHorizon() {
    return decumulationHorizon;
  }

  public void setDecumulationHorizon(Integer decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
  }

  public AnnuityCalculatorInitialBalance annuityAmount(BigDecimal annuityAmount) {
    this.annuityAmount = annuityAmount;
    return this;
  }

   /**
   * The amount of the annuity payments
   * minimum: 0
   * @return annuityAmount
  **/
  @ApiModelProperty(required = true, value = "The amount of the annuity payments")
  public BigDecimal getAnnuityAmount() {
    return annuityAmount;
  }

  public void setAnnuityAmount(BigDecimal annuityAmount) {
    this.annuityAmount = annuityAmount;
  }

  public AnnuityCalculatorInitialBalance annuityFrequencyInterval(AnnuityFrequencyIntervalEnum annuityFrequencyInterval) {
    this.annuityFrequencyInterval = annuityFrequencyInterval;
    return this;
  }

   /**
   * The frequency interval of the annuity
   * @return annuityFrequencyInterval
  **/
  @ApiModelProperty(value = "The frequency interval of the annuity")
  public AnnuityFrequencyIntervalEnum getAnnuityFrequencyInterval() {
    return annuityFrequencyInterval;
  }

  public void setAnnuityFrequencyInterval(AnnuityFrequencyIntervalEnum annuityFrequencyInterval) {
    this.annuityFrequencyInterval = annuityFrequencyInterval;
  }

  public AnnuityCalculatorInitialBalance inflationRate(BigDecimal inflationRate) {
    this.inflationRate = inflationRate;
    return this;
  }

   /**
   * The annualized inflation rate
   * minimum: -1
   * maximum: 20
   * @return inflationRate
  **/
  @ApiModelProperty(value = "The annualized inflation rate")
  public BigDecimal getInflationRate() {
    return inflationRate;
  }

  public void setInflationRate(BigDecimal inflationRate) {
    this.inflationRate = inflationRate;
  }

  public AnnuityCalculatorInitialBalance taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * The tax rate on withdrawals
   * minimum: 0
   * maximum: 1
   * @return taxRate
  **/
  @ApiModelProperty(value = "The tax rate on withdrawals")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public AnnuityCalculatorInitialBalance depositSchedule(AnnuityDepositSchedule depositSchedule) {
    this.depositSchedule = depositSchedule;
    return this;
  }

   /**
   * Get depositSchedule
   * @return depositSchedule
  **/
  @ApiModelProperty(value = "")
  public AnnuityDepositSchedule getDepositSchedule() {
    return depositSchedule;
  }

  public void setDepositSchedule(AnnuityDepositSchedule depositSchedule) {
    this.depositSchedule = depositSchedule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnuityCalculatorInitialBalance annuityCalculatorInitialBalance = (AnnuityCalculatorInitialBalance) o;
    return Objects.equals(this.portfolioReturn, annuityCalculatorInitialBalance.portfolioReturn) &&
        Objects.equals(this.accumulationHorizon, annuityCalculatorInitialBalance.accumulationHorizon) &&
        Objects.equals(this.decumulationHorizon, annuityCalculatorInitialBalance.decumulationHorizon) &&
        Objects.equals(this.annuityAmount, annuityCalculatorInitialBalance.annuityAmount) &&
        Objects.equals(this.annuityFrequencyInterval, annuityCalculatorInitialBalance.annuityFrequencyInterval) &&
        Objects.equals(this.inflationRate, annuityCalculatorInitialBalance.inflationRate) &&
        Objects.equals(this.taxRate, annuityCalculatorInitialBalance.taxRate) &&
        Objects.equals(this.depositSchedule, annuityCalculatorInitialBalance.depositSchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioReturn, accumulationHorizon, decumulationHorizon, annuityAmount, annuityFrequencyInterval, inflationRate, taxRate, depositSchedule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnuityCalculatorInitialBalance {\n");
    
    sb.append("    portfolioReturn: ").append(toIndentedString(portfolioReturn)).append("\n");
    sb.append("    accumulationHorizon: ").append(toIndentedString(accumulationHorizon)).append("\n");
    sb.append("    decumulationHorizon: ").append(toIndentedString(decumulationHorizon)).append("\n");
    sb.append("    annuityAmount: ").append(toIndentedString(annuityAmount)).append("\n");
    sb.append("    annuityFrequencyInterval: ").append(toIndentedString(annuityFrequencyInterval)).append("\n");
    sb.append("    inflationRate: ").append(toIndentedString(inflationRate)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    depositSchedule: ").append(toIndentedString(depositSchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

