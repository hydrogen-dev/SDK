/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.hydrogen.nucleus.model.VAccountVO;
import com.hydrogen.nucleus.model.VPortfolioVO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * ClientViewGoalData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class ClientViewGoalData {
  @SerializedName("accounts")
  private List<VAccountVO> accounts = null;

  @SerializedName("accumulation_horizon")
  private Double accumulationHorizon = null;

  @SerializedName("decumulation_horizon")
  private Double decumulationHorizon = null;

  @SerializedName("goal_amount")
  private Double goalAmount = null;

  @SerializedName("goal_asset_size_by_goal")
  private Double goalAssetSizeByGoal = null;

  @SerializedName("goal_asset_size_by_goal_date")
  private LocalDate goalAssetSizeByGoalDate = null;

  @SerializedName("goal_category")
  private String goalCategory = null;

  @SerializedName("goal_create_date")
  private OffsetDateTime goalCreateDate = null;

  @SerializedName("goal_id")
  private UUID goalId = null;

  @SerializedName("goal_name")
  private String goalName = null;

  @SerializedName("goal_type")
  private String goalType = null;

  @SerializedName("goal_update_date")
  private OffsetDateTime goalUpdateDate = null;

  @SerializedName("is_decumulation")
  private Boolean isDecumulation = null;

  @SerializedName("portfolios")
  private List<VPortfolioVO> portfolios = null;

  public ClientViewGoalData accounts(List<VAccountVO> accounts) {
    this.accounts = accounts;
    return this;
  }

  public ClientViewGoalData addAccountsItem(VAccountVO accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<VAccountVO>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * Get accounts
   * @return accounts
  **/
  @ApiModelProperty(value = "")
  public List<VAccountVO> getAccounts() {
    return accounts;
  }

  public void setAccounts(List<VAccountVO> accounts) {
    this.accounts = accounts;
  }

  public ClientViewGoalData accumulationHorizon(Double accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
    return this;
  }

   /**
   * Get accumulationHorizon
   * @return accumulationHorizon
  **/
  @ApiModelProperty(value = "")
  public Double getAccumulationHorizon() {
    return accumulationHorizon;
  }

  public void setAccumulationHorizon(Double accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
  }

  public ClientViewGoalData decumulationHorizon(Double decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
    return this;
  }

   /**
   * Get decumulationHorizon
   * @return decumulationHorizon
  **/
  @ApiModelProperty(value = "")
  public Double getDecumulationHorizon() {
    return decumulationHorizon;
  }

  public void setDecumulationHorizon(Double decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
  }

  public ClientViewGoalData goalAmount(Double goalAmount) {
    this.goalAmount = goalAmount;
    return this;
  }

   /**
   * Get goalAmount
   * @return goalAmount
  **/
  @ApiModelProperty(value = "")
  public Double getGoalAmount() {
    return goalAmount;
  }

  public void setGoalAmount(Double goalAmount) {
    this.goalAmount = goalAmount;
  }

  public ClientViewGoalData goalAssetSizeByGoal(Double goalAssetSizeByGoal) {
    this.goalAssetSizeByGoal = goalAssetSizeByGoal;
    return this;
  }

   /**
   * Get goalAssetSizeByGoal
   * @return goalAssetSizeByGoal
  **/
  @ApiModelProperty(value = "")
  public Double getGoalAssetSizeByGoal() {
    return goalAssetSizeByGoal;
  }

  public void setGoalAssetSizeByGoal(Double goalAssetSizeByGoal) {
    this.goalAssetSizeByGoal = goalAssetSizeByGoal;
  }

  public ClientViewGoalData goalAssetSizeByGoalDate(LocalDate goalAssetSizeByGoalDate) {
    this.goalAssetSizeByGoalDate = goalAssetSizeByGoalDate;
    return this;
  }

   /**
   * Get goalAssetSizeByGoalDate
   * @return goalAssetSizeByGoalDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getGoalAssetSizeByGoalDate() {
    return goalAssetSizeByGoalDate;
  }

  public void setGoalAssetSizeByGoalDate(LocalDate goalAssetSizeByGoalDate) {
    this.goalAssetSizeByGoalDate = goalAssetSizeByGoalDate;
  }

  public ClientViewGoalData goalCategory(String goalCategory) {
    this.goalCategory = goalCategory;
    return this;
  }

   /**
   * Get goalCategory
   * @return goalCategory
  **/
  @ApiModelProperty(value = "")
  public String getGoalCategory() {
    return goalCategory;
  }

  public void setGoalCategory(String goalCategory) {
    this.goalCategory = goalCategory;
  }

  public ClientViewGoalData goalCreateDate(OffsetDateTime goalCreateDate) {
    this.goalCreateDate = goalCreateDate;
    return this;
  }

   /**
   * Get goalCreateDate
   * @return goalCreateDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getGoalCreateDate() {
    return goalCreateDate;
  }

  public void setGoalCreateDate(OffsetDateTime goalCreateDate) {
    this.goalCreateDate = goalCreateDate;
  }

  public ClientViewGoalData goalId(UUID goalId) {
    this.goalId = goalId;
    return this;
  }

   /**
   * Get goalId
   * @return goalId
  **/
  @ApiModelProperty(value = "")
  public UUID getGoalId() {
    return goalId;
  }

  public void setGoalId(UUID goalId) {
    this.goalId = goalId;
  }

  public ClientViewGoalData goalName(String goalName) {
    this.goalName = goalName;
    return this;
  }

   /**
   * Get goalName
   * @return goalName
  **/
  @ApiModelProperty(value = "")
  public String getGoalName() {
    return goalName;
  }

  public void setGoalName(String goalName) {
    this.goalName = goalName;
  }

  public ClientViewGoalData goalType(String goalType) {
    this.goalType = goalType;
    return this;
  }

   /**
   * Get goalType
   * @return goalType
  **/
  @ApiModelProperty(value = "")
  public String getGoalType() {
    return goalType;
  }

  public void setGoalType(String goalType) {
    this.goalType = goalType;
  }

  public ClientViewGoalData goalUpdateDate(OffsetDateTime goalUpdateDate) {
    this.goalUpdateDate = goalUpdateDate;
    return this;
  }

   /**
   * Get goalUpdateDate
   * @return goalUpdateDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getGoalUpdateDate() {
    return goalUpdateDate;
  }

  public void setGoalUpdateDate(OffsetDateTime goalUpdateDate) {
    this.goalUpdateDate = goalUpdateDate;
  }

  public ClientViewGoalData isDecumulation(Boolean isDecumulation) {
    this.isDecumulation = isDecumulation;
    return this;
  }

   /**
   * Get isDecumulation
   * @return isDecumulation
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDecumulation() {
    return isDecumulation;
  }

  public void setIsDecumulation(Boolean isDecumulation) {
    this.isDecumulation = isDecumulation;
  }

  public ClientViewGoalData portfolios(List<VPortfolioVO> portfolios) {
    this.portfolios = portfolios;
    return this;
  }

  public ClientViewGoalData addPortfoliosItem(VPortfolioVO portfoliosItem) {
    if (this.portfolios == null) {
      this.portfolios = new ArrayList<VPortfolioVO>();
    }
    this.portfolios.add(portfoliosItem);
    return this;
  }

   /**
   * Get portfolios
   * @return portfolios
  **/
  @ApiModelProperty(value = "")
  public List<VPortfolioVO> getPortfolios() {
    return portfolios;
  }

  public void setPortfolios(List<VPortfolioVO> portfolios) {
    this.portfolios = portfolios;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientViewGoalData clientViewGoalData = (ClientViewGoalData) o;
    return Objects.equals(this.accounts, clientViewGoalData.accounts) &&
        Objects.equals(this.accumulationHorizon, clientViewGoalData.accumulationHorizon) &&
        Objects.equals(this.decumulationHorizon, clientViewGoalData.decumulationHorizon) &&
        Objects.equals(this.goalAmount, clientViewGoalData.goalAmount) &&
        Objects.equals(this.goalAssetSizeByGoal, clientViewGoalData.goalAssetSizeByGoal) &&
        Objects.equals(this.goalAssetSizeByGoalDate, clientViewGoalData.goalAssetSizeByGoalDate) &&
        Objects.equals(this.goalCategory, clientViewGoalData.goalCategory) &&
        Objects.equals(this.goalCreateDate, clientViewGoalData.goalCreateDate) &&
        Objects.equals(this.goalId, clientViewGoalData.goalId) &&
        Objects.equals(this.goalName, clientViewGoalData.goalName) &&
        Objects.equals(this.goalType, clientViewGoalData.goalType) &&
        Objects.equals(this.goalUpdateDate, clientViewGoalData.goalUpdateDate) &&
        Objects.equals(this.isDecumulation, clientViewGoalData.isDecumulation) &&
        Objects.equals(this.portfolios, clientViewGoalData.portfolios);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, accumulationHorizon, decumulationHorizon, goalAmount, goalAssetSizeByGoal, goalAssetSizeByGoalDate, goalCategory, goalCreateDate, goalId, goalName, goalType, goalUpdateDate, isDecumulation, portfolios);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientViewGoalData {\n");
    
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    accumulationHorizon: ").append(toIndentedString(accumulationHorizon)).append("\n");
    sb.append("    decumulationHorizon: ").append(toIndentedString(decumulationHorizon)).append("\n");
    sb.append("    goalAmount: ").append(toIndentedString(goalAmount)).append("\n");
    sb.append("    goalAssetSizeByGoal: ").append(toIndentedString(goalAssetSizeByGoal)).append("\n");
    sb.append("    goalAssetSizeByGoalDate: ").append(toIndentedString(goalAssetSizeByGoalDate)).append("\n");
    sb.append("    goalCategory: ").append(toIndentedString(goalCategory)).append("\n");
    sb.append("    goalCreateDate: ").append(toIndentedString(goalCreateDate)).append("\n");
    sb.append("    goalId: ").append(toIndentedString(goalId)).append("\n");
    sb.append("    goalName: ").append(toIndentedString(goalName)).append("\n");
    sb.append("    goalType: ").append(toIndentedString(goalType)).append("\n");
    sb.append("    goalUpdateDate: ").append(toIndentedString(goalUpdateDate)).append("\n");
    sb.append("    isDecumulation: ").append(toIndentedString(isDecumulation)).append("\n");
    sb.append("    portfolios: ").append(toIndentedString(portfolios)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

