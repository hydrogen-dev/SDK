/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OptConfig;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * OptimizationScore
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T14:10:50.140-04:00")
public class OptimizationScore {
  @SerializedName("portfolio_tickers")
  private List<String> portfolioTickers = new ArrayList<String>();

  @SerializedName("portfolio_weights")
  private List<BigDecimal> portfolioWeights = new ArrayList<BigDecimal>();

  @SerializedName("opt_config")
  private OptConfig optConfig = null;

  @SerializedName("use_proxy_data")
  private Boolean useProxyData = false;

  public OptimizationScore portfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
    return this;
  }

  public OptimizationScore addPortfolioTickersItem(String portfolioTickersItem) {
    this.portfolioTickers.add(portfolioTickersItem);
    return this;
  }

   /**
   * List of tickers
   * @return portfolioTickers
  **/
  @ApiModelProperty(required = true, value = "List of tickers")
  public List<String> getPortfolioTickers() {
    return portfolioTickers;
  }

  public void setPortfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
  }

  public OptimizationScore portfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
    return this;
  }

  public OptimizationScore addPortfolioWeightsItem(BigDecimal portfolioWeightsItem) {
    this.portfolioWeights.add(portfolioWeightsItem);
    return this;
  }

   /**
   * List of weights
   * @return portfolioWeights
  **/
  @ApiModelProperty(required = true, value = "List of weights")
  public List<BigDecimal> getPortfolioWeights() {
    return portfolioWeights;
  }

  public void setPortfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
  }

  public OptimizationScore optConfig(OptConfig optConfig) {
    this.optConfig = optConfig;
    return this;
  }

   /**
   * Get optConfig
   * @return optConfig
  **/
  @ApiModelProperty(value = "")
  public OptConfig getOptConfig() {
    return optConfig;
  }

  public void setOptConfig(OptConfig optConfig) {
    this.optConfig = optConfig;
  }

  public OptimizationScore useProxyData(Boolean useProxyData) {
    this.useProxyData = useProxyData;
    return this;
  }

   /**
   * If true, incorporate proxy price data as defined at the Security level in the Nucleus API. Proxy data is merged with base security data to form a continuous price history. Defaults to false.
   * @return useProxyData
  **/
  @ApiModelProperty(value = "If true, incorporate proxy price data as defined at the Security level in the Nucleus API. Proxy data is merged with base security data to form a continuous price history. Defaults to false.")
  public Boolean isUseProxyData() {
    return useProxyData;
  }

  public void setUseProxyData(Boolean useProxyData) {
    this.useProxyData = useProxyData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizationScore optimizationScore = (OptimizationScore) o;
    return Objects.equals(this.portfolioTickers, optimizationScore.portfolioTickers) &&
        Objects.equals(this.portfolioWeights, optimizationScore.portfolioWeights) &&
        Objects.equals(this.optConfig, optimizationScore.optConfig) &&
        Objects.equals(this.useProxyData, optimizationScore.useProxyData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioTickers, portfolioWeights, optConfig, useProxyData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizationScore {\n");
    
    sb.append("    portfolioTickers: ").append(toIndentedString(portfolioTickers)).append("\n");
    sb.append("    portfolioWeights: ").append(toIndentedString(portfolioWeights)).append("\n");
    sb.append("    optConfig: ").append(toIndentedString(optConfig)).append("\n");
    sb.append("    useProxyData: ").append(toIndentedString(useProxyData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

