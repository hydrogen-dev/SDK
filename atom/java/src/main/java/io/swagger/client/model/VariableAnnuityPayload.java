/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AnnuityDepositSchedule;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * VariableAnnuityPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-13T18:14:40.362-04:00")
public class VariableAnnuityPayload {
  @SerializedName("portfolio_tickers")
  private List<String> portfolioTickers = new ArrayList<String>();

  @SerializedName("portfolio_weights")
  private List<BigDecimal> portfolioWeights = new ArrayList<BigDecimal>();

  @SerializedName("accumulation_horizon")
  private Integer accumulationHorizon = null;

  @SerializedName("decumulation_horizon")
  private Integer decumulationHorizon = null;

  @SerializedName("initial_balance")
  private BigDecimal initialBalance = null;

  @SerializedName("frequency_interval")
  private String frequencyInterval = null;

  @SerializedName("deposit_schedule")
  private AnnuityDepositSchedule depositSchedule = null;

  public VariableAnnuityPayload portfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
    return this;
  }

  public VariableAnnuityPayload addPortfolioTickersItem(String portfolioTickersItem) {
    this.portfolioTickers.add(portfolioTickersItem);
    return this;
  }

   /**
   * Portfolio tickers, referencing securities defined in the Nucleus API.
   * @return portfolioTickers
  **/
  @ApiModelProperty(required = true, value = "Portfolio tickers, referencing securities defined in the Nucleus API.")
  public List<String> getPortfolioTickers() {
    return portfolioTickers;
  }

  public void setPortfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
  }

  public VariableAnnuityPayload portfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
    return this;
  }

  public VariableAnnuityPayload addPortfolioWeightsItem(BigDecimal portfolioWeightsItem) {
    this.portfolioWeights.add(portfolioWeightsItem);
    return this;
  }

   /**
   * Portfolio weights, corresponding to portfolio_tickers. Must sum to 1.0.
   * @return portfolioWeights
  **/
  @ApiModelProperty(required = true, value = "Portfolio weights, corresponding to portfolio_tickers. Must sum to 1.0.")
  public List<BigDecimal> getPortfolioWeights() {
    return portfolioWeights;
  }

  public void setPortfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
  }

  public VariableAnnuityPayload accumulationHorizon(Integer accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
    return this;
  }

   /**
   * The number of years until the payout phase begins.
   * @return accumulationHorizon
  **/
  @ApiModelProperty(required = true, value = "The number of years until the payout phase begins.")
  public Integer getAccumulationHorizon() {
    return accumulationHorizon;
  }

  public void setAccumulationHorizon(Integer accumulationHorizon) {
    this.accumulationHorizon = accumulationHorizon;
  }

  public VariableAnnuityPayload decumulationHorizon(Integer decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
    return this;
  }

   /**
   * The number of years in the payout or decumulation phase.
   * @return decumulationHorizon
  **/
  @ApiModelProperty(required = true, value = "The number of years in the payout or decumulation phase.")
  public Integer getDecumulationHorizon() {
    return decumulationHorizon;
  }

  public void setDecumulationHorizon(Integer decumulationHorizon) {
    this.decumulationHorizon = decumulationHorizon;
  }

  public VariableAnnuityPayload initialBalance(BigDecimal initialBalance) {
    this.initialBalance = initialBalance;
    return this;
  }

   /**
   * The starting balance in the annuity plan, prior to any ongoing contributions. Must be greater than or equal to 0.
   * minimum: 0
   * @return initialBalance
  **/
  @ApiModelProperty(required = true, value = "The starting balance in the annuity plan, prior to any ongoing contributions. Must be greater than or equal to 0.")
  public BigDecimal getInitialBalance() {
    return initialBalance;
  }

  public void setInitialBalance(BigDecimal initialBalance) {
    this.initialBalance = initialBalance;
  }

  public VariableAnnuityPayload frequencyInterval(String frequencyInterval) {
    this.frequencyInterval = frequencyInterval;
    return this;
  }

   /**
   * Unit of time associated with accumulation_horizon, decumulation_horizon, start, end, and annuity payments.
   * @return frequencyInterval
  **/
  @ApiModelProperty(value = "Unit of time associated with accumulation_horizon, decumulation_horizon, start, end, and annuity payments.")
  public String getFrequencyInterval() {
    return frequencyInterval;
  }

  public void setFrequencyInterval(String frequencyInterval) {
    this.frequencyInterval = frequencyInterval;
  }

  public VariableAnnuityPayload depositSchedule(AnnuityDepositSchedule depositSchedule) {
    this.depositSchedule = depositSchedule;
    return this;
  }

   /**
   * Get depositSchedule
   * @return depositSchedule
  **/
  @ApiModelProperty(value = "")
  public AnnuityDepositSchedule getDepositSchedule() {
    return depositSchedule;
  }

  public void setDepositSchedule(AnnuityDepositSchedule depositSchedule) {
    this.depositSchedule = depositSchedule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VariableAnnuityPayload variableAnnuityPayload = (VariableAnnuityPayload) o;
    return Objects.equals(this.portfolioTickers, variableAnnuityPayload.portfolioTickers) &&
        Objects.equals(this.portfolioWeights, variableAnnuityPayload.portfolioWeights) &&
        Objects.equals(this.accumulationHorizon, variableAnnuityPayload.accumulationHorizon) &&
        Objects.equals(this.decumulationHorizon, variableAnnuityPayload.decumulationHorizon) &&
        Objects.equals(this.initialBalance, variableAnnuityPayload.initialBalance) &&
        Objects.equals(this.frequencyInterval, variableAnnuityPayload.frequencyInterval) &&
        Objects.equals(this.depositSchedule, variableAnnuityPayload.depositSchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioTickers, portfolioWeights, accumulationHorizon, decumulationHorizon, initialBalance, frequencyInterval, depositSchedule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VariableAnnuityPayload {\n");
    
    sb.append("    portfolioTickers: ").append(toIndentedString(portfolioTickers)).append("\n");
    sb.append("    portfolioWeights: ").append(toIndentedString(portfolioWeights)).append("\n");
    sb.append("    accumulationHorizon: ").append(toIndentedString(accumulationHorizon)).append("\n");
    sb.append("    decumulationHorizon: ").append(toIndentedString(decumulationHorizon)).append("\n");
    sb.append("    initialBalance: ").append(toIndentedString(initialBalance)).append("\n");
    sb.append("    frequencyInterval: ").append(toIndentedString(frequencyInterval)).append("\n");
    sb.append("    depositSchedule: ").append(toIndentedString(depositSchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

