/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BenchmarkPayloadComposition', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BenchmarkPayloadComposition'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.BenchmarkPayload = factory(root.atom_api.ApiClient, root.atom_api.BenchmarkPayloadComposition, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, BenchmarkPayloadComposition, SecondaryId) {
  'use strict';




  /**
   * The BenchmarkPayload model module.
   * @module model/BenchmarkPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>BenchmarkPayload</code>.
   * @alias module:model/BenchmarkPayload
   * @class
   * @param name {String} Name of the benchmark
   */
  var exports = function(name) {
    var _this = this;

    _this['name'] = name;





  };

  /**
   * Constructs a <code>BenchmarkPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BenchmarkPayload} obj Optional instance to populate.
   * @return {module:model/BenchmarkPayload} The populated <code>BenchmarkPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('composition')) {
        obj['composition'] = ApiClient.convertToType(data['composition'], [BenchmarkPayloadComposition]);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('client_id')) {
        obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
      }
      if (data.hasOwnProperty('is_active')) {
        obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
      }
      if (data.hasOwnProperty('secondary_id')) {
        obj['secondary_id'] = SecondaryId.constructFromObject(data['secondary_id']);
      }
    }
    return obj;
  }

  /**
   * Name of the benchmark
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Array.<module:model/BenchmarkPayloadComposition>} composition
   */
  exports.prototype['composition'] = undefined;
  /**
   * Description of the benchmark such as the market segment that it represents
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The ID of the client to which the benchmark belongs, if any
   * @member {String} client_id
   */
  exports.prototype['client_id'] = undefined;
  /**
   * Indicates if the benchmark is active. Defaults to true which means it is active
   * @member {Boolean} is_active
   * @default true
   */
  exports.prototype['is_active'] = true;
  /**
   * @member {module:model/SecondaryId} secondary_id
   */
  exports.prototype['secondary_id'] = undefined;



  return exports;
}));


