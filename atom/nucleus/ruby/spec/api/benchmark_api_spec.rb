=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.9.5
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.20

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::BenchmarkApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BenchmarkApi' do
  before do
    # run before each test
    @instance = NucleusApi::BenchmarkApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BenchmarkApi' do
    it 'should create an instance of BenchmarkApi' do
      expect(@instance).to be_instance_of(NucleusApi::BenchmarkApi)
    end
  end

  # unit tests for create_benchmark_using_post
  # Create a benchmark
  # Create a new benchmark for your firm.
  # @param benchmark benchmark
  # @param [Hash] opts the optional parameters
  # @return [Benchmark]
  describe 'create_benchmark_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_benchmark_using_delete
  # Delete a benchmark
  # Permanently delete a benchmark.
  # @param benchmark_id UUID benchmark_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_benchmark_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_benchmark_all_using_get
  # List all benchmarks
  # Get details for all benchmarks defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageBenchmark]
  describe 'get_benchmark_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_benchmark_asset_size_all_using_get
  # List all benchmark asset sizes
  # Get a list of asset sizes by date for a benchmark.
  # @param benchmark_id UUID benchmark_id
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :end_date end date
  # @option opts [String] :sort_type sort_type
  # @option opts [Date] :start_date start date
  # @return [Array<DateDoubleVO>]
  describe 'get_benchmark_asset_size_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_benchmark_using_get
  # Retrieve a benchmark
  # Retrieve the information for a benchmark.
  # @param benchmark_id UUID benchmark_id
  # @param [Hash] opts the optional parameters
  # @return [Benchmark]
  describe 'get_benchmark_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_benchmark_using_put
  # Update a benchmark
  # Updated the information for a benchmark.
  # @param benchmark benchmark
  # @param benchmark_id UUID benchmark_id
  # @param [Hash] opts the optional parameters
  # @return [Benchmark]
  describe 'update_benchmark_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
