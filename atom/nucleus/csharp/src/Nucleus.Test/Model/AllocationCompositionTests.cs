/* 
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Nucleus.Api;
using Nucleus.ModelEntity;
using Nucleus.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Nucleus.Test
{
    /// <summary>
    ///  Class for testing AllocationComposition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class AllocationCompositionTests
    {
        // TODO uncomment below to declare an instance variable for AllocationComposition
        //private AllocationComposition instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of AllocationComposition
            //instance = new AllocationComposition();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AllocationComposition
        /// </summary>
        [Test]
        public void AllocationCompositionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" AllocationComposition
            //Assert.IsInstanceOfType<AllocationComposition> (instance, "variable 'instance' is a AllocationComposition");
        }


        /// <summary>
        /// Test the property 'AllocationId'
        /// </summary>
        [Test]
        public void AllocationIdTest()
        {
            // TODO unit test for the property 'AllocationId'
        }
        /// <summary>
        /// Test the property 'Core'
        /// </summary>
        [Test]
        public void CoreTest()
        {
            // TODO unit test for the property 'Core'
        }
        /// <summary>
        /// Test the property 'CreateDate'
        /// </summary>
        [Test]
        public void CreateDateTest()
        {
            // TODO unit test for the property 'CreateDate'
        }
        /// <summary>
        /// Test the property 'CurrentWeight'
        /// </summary>
        [Test]
        public void CurrentWeightTest()
        {
            // TODO unit test for the property 'CurrentWeight'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Test]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Test]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'ModelId'
        /// </summary>
        [Test]
        public void ModelIdTest()
        {
            // TODO unit test for the property 'ModelId'
        }
        /// <summary>
        /// Test the property 'SecondaryId'
        /// </summary>
        [Test]
        public void SecondaryIdTest()
        {
            // TODO unit test for the property 'SecondaryId'
        }
        /// <summary>
        /// Test the property 'StrategicWeight'
        /// </summary>
        [Test]
        public void StrategicWeightTest()
        {
            // TODO unit test for the property 'StrategicWeight'
        }
        /// <summary>
        /// Test the property 'UpdateDate'
        /// </summary>
        [Test]
        public void UpdateDateTest()
        {
            // TODO unit test for the property 'UpdateDate'
        }

    }

}
