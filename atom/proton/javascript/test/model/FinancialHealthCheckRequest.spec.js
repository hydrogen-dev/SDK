/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenProtonApi);
  }
}(this, function(expect, HydrogenProtonApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('FinancialHealthCheckRequest', function() {
      beforeEach(function() {
        instance = new HydrogenProtonApi.FinancialHealthCheckRequest();
      });

      it('should create an instance of FinancialHealthCheckRequest', function() {
        // TODO: update the code to test FinancialHealthCheckRequest
        expect(instance).to.be.a(HydrogenProtonApi.FinancialHealthCheckRequest);
      });

      it('should have the property clientId (base name: "client_id")', function() {
        // TODO: update the code to test the property clientId
        expect(instance).to.have.property('clientId');
        // expect(instance.clientId).to.be(expectedValueLiteral);
      });

      it('should have the property ratioTargets (base name: "ratio_targets")', function() {
        // TODO: update the code to test the property ratioTargets
        expect(instance).to.have.property('ratioTargets');
        // expect(instance.ratioTargets).to.be(expectedValueLiteral);
      });

      it('should have the property liquidAssets (base name: "liquid_assets")', function() {
        // TODO: update the code to test the property liquidAssets
        expect(instance).to.have.property('liquidAssets');
        // expect(instance.liquidAssets).to.be(expectedValueLiteral);
      });

      it('should have the property totalLiabilities (base name: "total_liabilities")', function() {
        // TODO: update the code to test the property totalLiabilities
        expect(instance).to.have.property('totalLiabilities');
        // expect(instance.totalLiabilities).to.be(expectedValueLiteral);
      });

      it('should have the property grossAnnualIncome (base name: "gross_annual_income")', function() {
        // TODO: update the code to test the property grossAnnualIncome
        expect(instance).to.have.property('grossAnnualIncome');
        // expect(instance.grossAnnualIncome).to.be(expectedValueLiteral);
      });

      it('should have the property shortTermLiabilities (base name: "short_term_liabilities")', function() {
        // TODO: update the code to test the property shortTermLiabilities
        expect(instance).to.have.property('shortTermLiabilities');
        // expect(instance.shortTermLiabilities).to.be(expectedValueLiteral);
      });

      it('should have the property lookbackPeriods (base name: "lookback_periods")', function() {
        // TODO: update the code to test the property lookbackPeriods
        expect(instance).to.have.property('lookbackPeriods');
        // expect(instance.lookbackPeriods).to.be(expectedValueLiteral);
      });

      it('should have the property nonLiquidAssets (base name: "non_liquid_assets")', function() {
        // TODO: update the code to test the property nonLiquidAssets
        expect(instance).to.have.property('nonLiquidAssets');
        // expect(instance.nonLiquidAssets).to.be(expectedValueLiteral);
      });

      it('should have the property monthlyExpenses (base name: "monthly_expenses")', function() {
        // TODO: update the code to test the property monthlyExpenses
        expect(instance).to.have.property('monthlyExpenses');
        // expect(instance.monthlyExpenses).to.be(expectedValueLiteral);
      });

      it('should have the property netMonthlyIncome (base name: "net_monthly_income")', function() {
        // TODO: update the code to test the property netMonthlyIncome
        expect(instance).to.have.property('netMonthlyIncome');
        // expect(instance.netMonthlyIncome).to.be(expectedValueLiteral);
      });

    });
  });

}));
