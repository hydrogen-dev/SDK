/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.api;

import com.hydrogen.proton.model.CardTransactionAuthorizationRequest;
import com.hydrogen.proton.ApiException;
import com.hydrogen.proton.model.CardAnalysisRequest;
import com.hydrogen.proton.model.CardLimitCheckRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.Map;

/**
 * API tests for CardsApi
 */
@Ignore
public class CardsApiTest {

    private final CardsApi api = new CardsApi();

    
    /**
     * Card Analysis
     *
     * Analyze cardholder activity over time
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardAnalysisTest() throws ApiException {
        CardAnalysisRequest cardAnalysisRequest = null;
        Map<String, Object> response = api.cardAnalysis(cardAnalysisRequest);

        // TODO: test validations
    }
    
    /**
     * Card Limit Check
     *
     * Evaluate card transaction history against spending controls
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardLimitCheckTest() throws ApiException {
        CardLimitCheckRequest cardLimitCheckRequest = null;
        Map<String, Object> response = api.cardLimitCheck(cardLimitCheckRequest);

        // TODO: test validations
    }
    
    /**
     * Card Transaction Authorization
     *
     * Approve or reject a card transaction based on applicable conditions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cardTransactionAuthorizationTest() throws ApiException {
        CardTransactionAuthorizationRequest cardTransactionAuthorizationRequest = null;
        Map<String, Object> response = api.cardTransactionAuthorization(cardTransactionAuthorizationRequest);

        // TODO: test validations
    }
    
}
