=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.9.5
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module NucleusApi
  class BulkApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a bulk data
    # Create a new bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [BulkTransaction]
    def create_bulk_using_post(data, entity_uri, opts = {})
      data, _status_code, _headers = create_bulk_using_post_with_http_info(data, entity_uri, opts)
      data
    end

    # Create a bulk data
    # Create a new bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [Array<(BulkTransaction, Fixnum, Hash)>] BulkTransaction data, response status code and response headers
    def create_bulk_using_post_with_http_info(data, entity_uri, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BulkApi.create_bulk_using_post ...'
      end
      # verify the required parameter 'data' is set
      if @api_client.config.client_side_validation && data.nil?
        fail ArgumentError, "Missing the required parameter 'data' when calling BulkApi.create_bulk_using_post"
      end
      # verify the required parameter 'entity_uri' is set
      if @api_client.config.client_side_validation && entity_uri.nil?
        fail ArgumentError, "Missing the required parameter 'entity_uri' when calling BulkApi.create_bulk_using_post"
      end
      # resource path
      local_var_path = '/nucleus/v1/bulk/{entity_uri}'.sub('{' + 'entity_uri' + '}', entity_uri.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(data)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BulkTransaction')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BulkApi#create_bulk_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a bulk data
    # Delete a bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [BulkTransaction]
    def delete_bulk_using_delete(data, entity_uri, opts = {})
      data, _status_code, _headers = delete_bulk_using_delete_with_http_info(data, entity_uri, opts)
      data
    end

    # Delete a bulk data
    # Delete a bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [Array<(BulkTransaction, Fixnum, Hash)>] BulkTransaction data, response status code and response headers
    def delete_bulk_using_delete_with_http_info(data, entity_uri, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BulkApi.delete_bulk_using_delete ...'
      end
      # verify the required parameter 'data' is set
      if @api_client.config.client_side_validation && data.nil?
        fail ArgumentError, "Missing the required parameter 'data' when calling BulkApi.delete_bulk_using_delete"
      end
      # verify the required parameter 'entity_uri' is set
      if @api_client.config.client_side_validation && entity_uri.nil?
        fail ArgumentError, "Missing the required parameter 'entity_uri' when calling BulkApi.delete_bulk_using_delete"
      end
      # resource path
      local_var_path = '/nucleus/v1/bulk/{entity_uri}'.sub('{' + 'entity_uri' + '}', entity_uri.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(data)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BulkTransaction')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BulkApi#delete_bulk_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Status of bulk transaction
    # Get the status of bulk transaction.
    # @param id UUID Bulk Transaction Id
    # @param [Hash] opts the optional parameters
    # @return [BulkTransactionVO]
    def get_bulk_status_using_get(id, opts = {})
      data, _status_code, _headers = get_bulk_status_using_get_with_http_info(id, opts)
      data
    end

    # Status of bulk transaction
    # Get the status of bulk transaction.
    # @param id UUID Bulk Transaction Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(BulkTransactionVO, Fixnum, Hash)>] BulkTransactionVO data, response status code and response headers
    def get_bulk_status_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BulkApi.get_bulk_status_using_get ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling BulkApi.get_bulk_status_using_get"
      end
      # resource path
      local_var_path = '/nucleus/v1/bulk/status/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BulkTransactionVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BulkApi#get_bulk_status_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a bulk data
    # Update a bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [BulkTransaction]
    def update_bulk_using_put(data, entity_uri, opts = {})
      data, _status_code, _headers = update_bulk_using_put_with_http_info(data, entity_uri, opts)
      data
    end

    # Update a bulk data
    # Update a bulk data for your firm.
    # @param data data
    # @param entity_uri UUID entity_uri
    # @param [Hash] opts the optional parameters
    # @return [Array<(BulkTransaction, Fixnum, Hash)>] BulkTransaction data, response status code and response headers
    def update_bulk_using_put_with_http_info(data, entity_uri, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BulkApi.update_bulk_using_put ...'
      end
      # verify the required parameter 'data' is set
      if @api_client.config.client_side_validation && data.nil?
        fail ArgumentError, "Missing the required parameter 'data' when calling BulkApi.update_bulk_using_put"
      end
      # verify the required parameter 'entity_uri' is set
      if @api_client.config.client_side_validation && entity_uri.nil?
        fail ArgumentError, "Missing the required parameter 'entity_uri' when calling BulkApi.update_bulk_using_put"
      end
      # resource path
      local_var_path = '/nucleus/v1/bulk/{entity_uri}'.sub('{' + 'entity_uri' + '}', entity_uri.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(data)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BulkTransaction')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BulkApi#update_bulk_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
