/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ClientHydroPayload', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ClientHydroPayload'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.CreateClientHydroResponse = factory(root.atom_api.ApiClient, root.atom_api.ClientHydroPayload, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, ClientHydroPayload, SecondaryId) {
  'use strict';




  /**
   * The CreateClientHydroResponse model module.
   * @module model/CreateClientHydroResponse
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>CreateClientHydroResponse</code>.
   * @alias module:model/CreateClientHydroResponse
   * @class
   * @implements module:model/ClientHydroPayload
   * @param clientId {String} The ID of the client to whom the Hydro ID belongs
   * @param hydroId {String} The hydro ID for the client. Also found under the client object
   */
  var exports = function(clientId, hydroId) {
    var _this = this;

    ClientHydroPayload.call(_this, clientId, hydroId);


  };

  /**
   * Constructs a <code>CreateClientHydroResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateClientHydroResponse} obj Optional instance to populate.
   * @return {module:model/CreateClientHydroResponse} The populated <code>CreateClientHydroResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      ClientHydroPayload.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('create_date')) {
        obj['create_date'] = ApiClient.convertToType(data['create_date'], 'String');
      }
    }
    return obj;
  }

  /**
   * ID of the client-hydro relationship
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Datetime when the client-hydro relationship was created
   * @member {String} create_date
   */
  exports.prototype['create_date'] = undefined;

  // Implement ClientHydroPayload interface:
  /**
   * The ID of the client to whom the Hydro ID belongs
   * @member {String} client_id
   */
exports.prototype['client_id'] = undefined;

  /**
   * The hydro ID for the client. Also found under the client object
   * @member {String} hydro_id
   */
exports.prototype['hydro_id'] = undefined;

  /**
   * Indicator if the client has verified ownership of the Hydro ID provided. Defaults to false which means ownership has not been verified
   * @member {Boolean} is_hydro_id_verified
   * @default false
   */
exports.prototype['is_hydro_id_verified'] = false;

  /**
   * Indicator for whether or not the client has successfully linked their Hydro ID to your Client-side Raindrop application. Defaults to false which indicates it has not been linked
   * @member {Boolean} is_client_raindrop_linked
   * @default false
   */
exports.prototype['is_client_raindrop_linked'] = false;

  /**
   * Indicator for whether or not the client has chosen to enable the Hydro Client-side Raindrop service on your application. Defaults to false which indicates the service is not enabled
   * @member {Boolean} is_client_raindrop_enabled
   * @default false
   */
exports.prototype['is_client_raindrop_enabled'] = false;

  /**
   * Custom information associated with the client-hydro relationship in the format key:value
   * @member {Object} metadata
   */
exports.prototype['metadata'] = undefined;

  /**
   * @member {module:model/SecondaryId} secondary_id
   */
exports.prototype['secondary_id'] = undefined;



  return exports;
}));


