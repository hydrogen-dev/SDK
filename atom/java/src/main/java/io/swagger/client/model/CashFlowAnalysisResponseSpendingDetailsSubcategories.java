/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CashFlowAnalysisResponseSpendingDetailsChange1;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CashFlowAnalysisResponseSpendingDetailsSubcategories
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-12T10:03:00.746-04:00")
public class CashFlowAnalysisResponseSpendingDetailsSubcategories {
  @SerializedName("subcategory")
  private String subcategory = null;

  @SerializedName("value")
  private BigDecimal value = null;

  @SerializedName("benchmark_value")
  private BigDecimal benchmarkValue = null;

  @SerializedName("change")
  private CashFlowAnalysisResponseSpendingDetailsChange1 change = null;

  @SerializedName("weight")
  private BigDecimal weight = null;

  @SerializedName("benchmark_weight")
  private BigDecimal benchmarkWeight = null;

  public CashFlowAnalysisResponseSpendingDetailsSubcategories subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * Spending subcategory as defined in the Nucleus transactions
   * @return subcategory
  **/
  @ApiModelProperty(value = "Spending subcategory as defined in the Nucleus transactions")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }

  public CashFlowAnalysisResponseSpendingDetailsSubcategories value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Sum of all transactions over the period for the given subcategory
   * @return value
  **/
  @ApiModelProperty(value = "Sum of all transactions over the period for the given subcategory")
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }

  public CashFlowAnalysisResponseSpendingDetailsSubcategories benchmarkValue(BigDecimal benchmarkValue) {
    this.benchmarkValue = benchmarkValue;
    return this;
  }

   /**
   * The proportion of all spending over the benchmark period related to this subcategory
   * @return benchmarkValue
  **/
  @ApiModelProperty(value = "The proportion of all spending over the benchmark period related to this subcategory")
  public BigDecimal getBenchmarkValue() {
    return benchmarkValue;
  }

  public void setBenchmarkValue(BigDecimal benchmarkValue) {
    this.benchmarkValue = benchmarkValue;
  }

  public CashFlowAnalysisResponseSpendingDetailsSubcategories change(CashFlowAnalysisResponseSpendingDetailsChange1 change) {
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @ApiModelProperty(value = "")
  public CashFlowAnalysisResponseSpendingDetailsChange1 getChange() {
    return change;
  }

  public void setChange(CashFlowAnalysisResponseSpendingDetailsChange1 change) {
    this.change = change;
  }

  public CashFlowAnalysisResponseSpendingDetailsSubcategories weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

   /**
   * The proportion of all spending over the period related to this subcategory
   * @return weight
  **/
  @ApiModelProperty(value = "The proportion of all spending over the period related to this subcategory")
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }

  public CashFlowAnalysisResponseSpendingDetailsSubcategories benchmarkWeight(BigDecimal benchmarkWeight) {
    this.benchmarkWeight = benchmarkWeight;
    return this;
  }

   /**
   * The proportion of all spending over the benchmark period related to this subcategory
   * @return benchmarkWeight
  **/
  @ApiModelProperty(value = "The proportion of all spending over the benchmark period related to this subcategory")
  public BigDecimal getBenchmarkWeight() {
    return benchmarkWeight;
  }

  public void setBenchmarkWeight(BigDecimal benchmarkWeight) {
    this.benchmarkWeight = benchmarkWeight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowAnalysisResponseSpendingDetailsSubcategories cashFlowAnalysisResponseSpendingDetailsSubcategories = (CashFlowAnalysisResponseSpendingDetailsSubcategories) o;
    return Objects.equals(this.subcategory, cashFlowAnalysisResponseSpendingDetailsSubcategories.subcategory) &&
        Objects.equals(this.value, cashFlowAnalysisResponseSpendingDetailsSubcategories.value) &&
        Objects.equals(this.benchmarkValue, cashFlowAnalysisResponseSpendingDetailsSubcategories.benchmarkValue) &&
        Objects.equals(this.change, cashFlowAnalysisResponseSpendingDetailsSubcategories.change) &&
        Objects.equals(this.weight, cashFlowAnalysisResponseSpendingDetailsSubcategories.weight) &&
        Objects.equals(this.benchmarkWeight, cashFlowAnalysisResponseSpendingDetailsSubcategories.benchmarkWeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subcategory, value, benchmarkValue, change, weight, benchmarkWeight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowAnalysisResponseSpendingDetailsSubcategories {\n");
    
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    benchmarkValue: ").append(toIndentedString(benchmarkValue)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    benchmarkWeight: ").append(toIndentedString(benchmarkWeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

