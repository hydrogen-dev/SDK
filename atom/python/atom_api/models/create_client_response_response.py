# coding: utf-8

"""
    Hydrogen Atom API

    The Hydrogen Atom API  # noqa: E501

    OpenAPI spec version: 1.0.1
    Contact: info@hydrogenplatform.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from atom_api.models.client_response_payload import ClientResponsePayload  # noqa: F401,E501
from atom_api.models.secondary_id import SecondaryId  # noqa: F401,E501


class CreateClientResponseResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'answer_id': 'str',
        'answer_value': 'str',
        'client_id': 'str',
        'account_id': 'str',
        'secondary_id': 'SecondaryId',
        'metadata': 'object',
        'id': 'str',
        'create_date': 'str'
    }

    attribute_map = {
        'answer_id': 'answer_id',
        'answer_value': 'answer_value',
        'client_id': 'client_id',
        'account_id': 'account_id',
        'secondary_id': 'secondary_id',
        'metadata': 'metadata',
        'id': 'id',
        'create_date': 'create_date'
    }

    def __init__(self, answer_id=None, answer_value=None, client_id=None, account_id=None, secondary_id=None, metadata=None, id=None, create_date=None):  # noqa: E501
        """CreateClientResponseResponse - a model defined in Swagger"""  # noqa: E501

        self._answer_id = None
        self._answer_value = None
        self._client_id = None
        self._account_id = None
        self._secondary_id = None
        self._metadata = None
        self._id = None
        self._create_date = None
        self.discriminator = None

        self.answer_id = answer_id
        self.answer_value = answer_value
        if client_id is not None:
            self.client_id = client_id
        if account_id is not None:
            self.account_id = account_id
        if secondary_id is not None:
            self.secondary_id = secondary_id
        if metadata is not None:
            self.metadata = metadata
        if id is not None:
            self.id = id
        if create_date is not None:
            self.create_date = create_date

    @property
    def answer_id(self):
        """Gets the answer_id of this CreateClientResponseResponse.  # noqa: E501

        The ID of the answer provided to link the response to a question  # noqa: E501

        :return: The answer_id of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._answer_id

    @answer_id.setter
    def answer_id(self, answer_id):
        """Sets the answer_id of this CreateClientResponseResponse.

        The ID of the answer provided to link the response to a question  # noqa: E501

        :param answer_id: The answer_id of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """
        if answer_id is None:
            raise ValueError("Invalid value for `answer_id`, must not be `None`")  # noqa: E501

        self._answer_id = answer_id

    @property
    def answer_value(self):
        """Gets the answer_value of this CreateClientResponseResponse.  # noqa: E501

        Body of the client’s response  # noqa: E501

        :return: The answer_value of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._answer_value

    @answer_value.setter
    def answer_value(self, answer_value):
        """Sets the answer_value of this CreateClientResponseResponse.

        Body of the client’s response  # noqa: E501

        :param answer_value: The answer_value of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """
        if answer_value is None:
            raise ValueError("Invalid value for `answer_value`, must not be `None`")  # noqa: E501

        self._answer_value = answer_value

    @property
    def client_id(self):
        """Gets the client_id of this CreateClientResponseResponse.  # noqa: E501

        The ID of the client to whom the response belongs  # noqa: E501

        :return: The client_id of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this CreateClientResponseResponse.

        The ID of the client to whom the response belongs  # noqa: E501

        :param client_id: The client_id of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """

        self._client_id = client_id

    @property
    def account_id(self):
        """Gets the account_id of this CreateClientResponseResponse.  # noqa: E501

        In the case that the response applies to only one of a client’s accounts and not the client as a whole, the ID of the account to which the response belongs  # noqa: E501

        :return: The account_id of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CreateClientResponseResponse.

        In the case that the response applies to only one of a client’s accounts and not the client as a whole, the ID of the account to which the response belongs  # noqa: E501

        :param account_id: The account_id of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def secondary_id(self):
        """Gets the secondary_id of this CreateClientResponseResponse.  # noqa: E501


        :return: The secondary_id of this CreateClientResponseResponse.  # noqa: E501
        :rtype: SecondaryId
        """
        return self._secondary_id

    @secondary_id.setter
    def secondary_id(self, secondary_id):
        """Sets the secondary_id of this CreateClientResponseResponse.


        :param secondary_id: The secondary_id of this CreateClientResponseResponse.  # noqa: E501
        :type: SecondaryId
        """

        self._secondary_id = secondary_id

    @property
    def metadata(self):
        """Gets the metadata of this CreateClientResponseResponse.  # noqa: E501

        Custom information associated with the client response in the format key:value  # noqa: E501

        :return: The metadata of this CreateClientResponseResponse.  # noqa: E501
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CreateClientResponseResponse.

        Custom information associated with the client response in the format key:value  # noqa: E501

        :param metadata: The metadata of this CreateClientResponseResponse.  # noqa: E501
        :type: object
        """

        self._metadata = metadata

    @property
    def id(self):
        """Gets the id of this CreateClientResponseResponse.  # noqa: E501

        ID of the client response  # noqa: E501

        :return: The id of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateClientResponseResponse.

        ID of the client response  # noqa: E501

        :param id: The id of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def create_date(self):
        """Gets the create_date of this CreateClientResponseResponse.  # noqa: E501

        Datetime the client response was created  # noqa: E501

        :return: The create_date of this CreateClientResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this CreateClientResponseResponse.

        Datetime the client response was created  # noqa: E501

        :param create_date: The create_date of this CreateClientResponseResponse.  # noqa: E501
        :type: str
        """

        self._create_date = create_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateClientResponseResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateClientResponseResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
