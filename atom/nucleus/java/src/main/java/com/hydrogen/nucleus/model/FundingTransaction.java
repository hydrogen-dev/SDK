/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * FundingTransaction Object
 */
@ApiModel(description = "FundingTransaction Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class FundingTransaction {
  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("fees")
  private Double fees = null;

  @SerializedName("funding_id")
  private UUID fundingId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("invested_date")
  private OffsetDateTime investedDate = null;

  @SerializedName("is_deposit")
  private Boolean isDeposit = null;

  @SerializedName("last_request_date")
  private OffsetDateTime lastRequestDate = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("portfolio_id")
  private UUID portfolioId = null;

  @SerializedName("portfolio_transaction_id")
  private UUID portfolioTransactionId = null;

  @SerializedName("received_date")
  private OffsetDateTime receivedDate = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_time_stamp")
  private OffsetDateTime statusTimeStamp = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public FundingTransaction accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * accountId
   * @return accountId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", value = "accountId")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public FundingTransaction amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * amount
   * @return amount
  **/
  @ApiModelProperty(example = "1004.0", required = true, value = "amount")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public FundingTransaction comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * comments
   * @return comments
  **/
  @ApiModelProperty(example = "Funded", value = "comments")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public FundingTransaction createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public FundingTransaction currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currency_code
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", required = true, value = "currency_code")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public FundingTransaction fees(Double fees) {
    this.fees = fees;
    return this;
  }

   /**
   * fees
   * @return fees
  **/
  @ApiModelProperty(example = "0.0", value = "fees")
  public Double getFees() {
    return fees;
  }

  public void setFees(Double fees) {
    this.fees = fees;
  }

  public FundingTransaction fundingId(UUID fundingId) {
    this.fundingId = fundingId;
    return this;
  }

   /**
   * fundingId
   * @return fundingId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", required = true, value = "fundingId")
  public UUID getFundingId() {
    return fundingId;
  }

  public void setFundingId(UUID fundingId) {
    this.fundingId = fundingId;
  }

  public FundingTransaction id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public FundingTransaction investedDate(OffsetDateTime investedDate) {
    this.investedDate = investedDate;
    return this;
  }

   /**
   * investedDate
   * @return investedDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "investedDate")
  public OffsetDateTime getInvestedDate() {
    return investedDate;
  }

  public void setInvestedDate(OffsetDateTime investedDate) {
    this.investedDate = investedDate;
  }

  public FundingTransaction isDeposit(Boolean isDeposit) {
    this.isDeposit = isDeposit;
    return this;
  }

   /**
   * is deposit
   * @return isDeposit
  **/
  @ApiModelProperty(example = "false", required = true, value = "is deposit")
  public Boolean isIsDeposit() {
    return isDeposit;
  }

  public void setIsDeposit(Boolean isDeposit) {
    this.isDeposit = isDeposit;
  }

  public FundingTransaction lastRequestDate(OffsetDateTime lastRequestDate) {
    this.lastRequestDate = lastRequestDate;
    return this;
  }

   /**
   * lastRequestDate
   * @return lastRequestDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "lastRequestDate")
  public OffsetDateTime getLastRequestDate() {
    return lastRequestDate;
  }

  public void setLastRequestDate(OffsetDateTime lastRequestDate) {
    this.lastRequestDate = lastRequestDate;
  }

  public FundingTransaction metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public FundingTransaction putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public FundingTransaction portfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * portfolio_id
   * @return portfolioId
  **/
  @ApiModelProperty(example = "ea30e8b7-3946-46ed-975a-4870a57d119s", value = "portfolio_id")
  public UUID getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
  }

  public FundingTransaction portfolioTransactionId(UUID portfolioTransactionId) {
    this.portfolioTransactionId = portfolioTransactionId;
    return this;
  }

   /**
   * portfolioTransactionId
   * @return portfolioTransactionId
  **/
  @ApiModelProperty(example = "29c3f995-bd45-4346-aea2-fd4476568d4c", value = "portfolioTransactionId")
  public UUID getPortfolioTransactionId() {
    return portfolioTransactionId;
  }

  public void setPortfolioTransactionId(UUID portfolioTransactionId) {
    this.portfolioTransactionId = portfolioTransactionId;
  }

  public FundingTransaction receivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * receivedDate
   * @return receivedDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "receivedDate")
  public OffsetDateTime getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
  }

  public FundingTransaction secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public FundingTransaction status(String status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @ApiModelProperty(example = "in process", value = "status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public FundingTransaction statusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
    return this;
  }

   /**
   * statusTimeStamp
   * @return statusTimeStamp
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "statusTimeStamp")
  public OffsetDateTime getStatusTimeStamp() {
    return statusTimeStamp;
  }

  public void setStatusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
  }

  public FundingTransaction type(String type) {
    this.type = type;
    return this;
  }

   /**
   * type
   * @return type
  **/
  @ApiModelProperty(example = "one-time", value = "type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public FundingTransaction updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundingTransaction fundingTransaction = (FundingTransaction) o;
    return Objects.equals(this.accountId, fundingTransaction.accountId) &&
        Objects.equals(this.amount, fundingTransaction.amount) &&
        Objects.equals(this.comments, fundingTransaction.comments) &&
        Objects.equals(this.createDate, fundingTransaction.createDate) &&
        Objects.equals(this.currencyCode, fundingTransaction.currencyCode) &&
        Objects.equals(this.fees, fundingTransaction.fees) &&
        Objects.equals(this.fundingId, fundingTransaction.fundingId) &&
        Objects.equals(this.id, fundingTransaction.id) &&
        Objects.equals(this.investedDate, fundingTransaction.investedDate) &&
        Objects.equals(this.isDeposit, fundingTransaction.isDeposit) &&
        Objects.equals(this.lastRequestDate, fundingTransaction.lastRequestDate) &&
        Objects.equals(this.metadata, fundingTransaction.metadata) &&
        Objects.equals(this.portfolioId, fundingTransaction.portfolioId) &&
        Objects.equals(this.portfolioTransactionId, fundingTransaction.portfolioTransactionId) &&
        Objects.equals(this.receivedDate, fundingTransaction.receivedDate) &&
        Objects.equals(this.secondaryId, fundingTransaction.secondaryId) &&
        Objects.equals(this.status, fundingTransaction.status) &&
        Objects.equals(this.statusTimeStamp, fundingTransaction.statusTimeStamp) &&
        Objects.equals(this.type, fundingTransaction.type) &&
        Objects.equals(this.updateDate, fundingTransaction.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, amount, comments, createDate, currencyCode, fees, fundingId, id, investedDate, isDeposit, lastRequestDate, metadata, portfolioId, portfolioTransactionId, receivedDate, secondaryId, status, statusTimeStamp, type, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundingTransaction {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    fundingId: ").append(toIndentedString(fundingId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    investedDate: ").append(toIndentedString(investedDate)).append("\n");
    sb.append("    isDeposit: ").append(toIndentedString(isDeposit)).append("\n");
    sb.append("    lastRequestDate: ").append(toIndentedString(lastRequestDate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    portfolioTransactionId: ").append(toIndentedString(portfolioTransactionId)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusTimeStamp: ").append(toIndentedString(statusTimeStamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

