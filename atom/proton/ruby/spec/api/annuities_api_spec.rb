=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for ProtonApi::AnnuitiesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AnnuitiesApi' do
  before do
    # run before each test
    @instance = ProtonApi::AnnuitiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AnnuitiesApi' do
    it 'should create an instance of AnnuitiesApi' do
      expect(@instance).to be_instance_of(ProtonApi::AnnuitiesApi)
    end
  end

  # unit tests for annuity_calculator_accumulation_horizon
  # Annuity Calculator - Accumulation Horizon
  # Calculate the necessary fixed annuity contribution period
  # @param annuity_calculator_accumulation_horizon_request Request payload for Annuity Calculator - Accumulation Horizon
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'annuity_calculator_accumulation_horizon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for annuity_calculator_annuity_amount
  # Annuity Calculator - Annuity Amount
  # Calculate the achievable fixed annuity amount
  # @param annuity_calculator_annuity_amount_request Request payload for Annuity Calculator - Annuity Amount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'annuity_calculator_annuity_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for annuity_calculator_decumulation_horizon
  # Annuity Calculator - Decumulation Horizon
  # Calculate the achievable fixed annuity payout period
  # @param annuity_calculator_decumulation_horizon_request Request payload for Annuity Calculator - Decumulation Horizon
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'annuity_calculator_decumulation_horizon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for annuity_calculator_deposit_amount
  # Annuity Calculator - Deposit Amount
  # Calculate the necessary periodic deposit amount for a fixed annuity
  # @param annuity_calculator_deposit_amount_request Request payload for Annuity Calculator - Deposit Amount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'annuity_calculator_deposit_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for annuity_calculator_initial_balance
  # Annuity Calculator - Initial Balance
  # Calculate the necessary initial balance for a fixed annuity
  # @param annuity_calculator_initial_balance_request Request payload for Annuity Calculator - Initial Balance
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'annuity_calculator_initial_balance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for variable_annuity
  # Variable Annuity
  # Project the behavior of a variable annuity over time
  # @param variable_annuity_request Request payload for Variable Annuity
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'variable_annuity test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
