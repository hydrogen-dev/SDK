/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.CampaignManagementPayload = factory(root.atom_api.ApiClient, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, SecondaryId) {
  'use strict';




  /**
   * The CampaignManagementPayload model module.
   * @module model/CampaignManagementPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>CampaignManagementPayload</code>.
   * @alias module:model/CampaignManagementPayload
   * @class
   * @param title {String} Title of the campaign
   * @param description {String} Description of the campaign such as its purpose
   * @param startDate {Date} Date that the marketing campaign begins
   * @param endDate {Date} Date that the marketing campaign ends
   */
  var exports = function(title, description, startDate, endDate) {
    var _this = this;

    _this['title'] = title;
    _this['description'] = description;
    _this['start_date'] = startDate;
    _this['end_date'] = endDate;













  };

  /**
   * Constructs a <code>CampaignManagementPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CampaignManagementPayload} obj Optional instance to populate.
   * @return {module:model/CampaignManagementPayload} The populated <code>CampaignManagementPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('start_date')) {
        obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
      }
      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
      }
      if (data.hasOwnProperty('is_acquisition')) {
        obj['is_acquisition'] = ApiClient.convertToType(data['is_acquisition'], 'Boolean');
      }
      if (data.hasOwnProperty('campaign_category')) {
        obj['campaign_category'] = ApiClient.convertToType(data['campaign_category'], 'String');
      }
      if (data.hasOwnProperty('campaign_plan_id')) {
        obj['campaign_plan_id'] = ApiClient.convertToType(data['campaign_plan_id'], 'String');
      }
      if (data.hasOwnProperty('cookie_code')) {
        obj['cookie_code'] = ApiClient.convertToType(data['cookie_code'], 'String');
      }
      if (data.hasOwnProperty('is_active')) {
        obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
      }
      if (data.hasOwnProperty('landing_page')) {
        obj['landing_page'] = ApiClient.convertToType(data['landing_page'], 'String');
      }
      if (data.hasOwnProperty('rate')) {
        obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
      }
      if (data.hasOwnProperty('utm_campaign')) {
        obj['utm_campaign'] = ApiClient.convertToType(data['utm_campaign'], 'String');
      }
      if (data.hasOwnProperty('utm_content')) {
        obj['utm_content'] = ApiClient.convertToType(data['utm_content'], 'String');
      }
      if (data.hasOwnProperty('utm_medium')) {
        obj['utm_medium'] = ApiClient.convertToType(data['utm_medium'], 'String');
      }
      if (data.hasOwnProperty('utm_source')) {
        obj['utm_source'] = ApiClient.convertToType(data['utm_source'], 'String');
      }
      if (data.hasOwnProperty('utm_term')) {
        obj['utm_term'] = ApiClient.convertToType(data['utm_term'], 'String');
      }
      if (data.hasOwnProperty('secondary_id')) {
        obj['secondary_id'] = SecondaryId.constructFromObject(data['secondary_id']);
      }
    }
    return obj;
  }

  /**
   * Title of the campaign
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * Description of the campaign such as its purpose
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Date that the marketing campaign begins
   * @member {Date} start_date
   */
  exports.prototype['start_date'] = undefined;
  /**
   * Date that the marketing campaign ends
   * @member {Date} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * Indicates if the campaign is an acquisition campaign, such as affiliate. Defaults to false meaning it is not an acquisition campaign
   * @member {Boolean} is_acquisition
   * @default false
   */
  exports.prototype['is_acquisition'] = false;
  /**
   * The category assigned to the campaign
   * @member {String} campaign_category
   */
  exports.prototype['campaign_category'] = undefined;
  /**
   * The ID of a campaign plan associated with a campaign
   * @member {String} campaign_plan_id
   */
  exports.prototype['campaign_plan_id'] = undefined;
  /**
   * Cookie code associated with the campaign used for tracking purposes
   * @member {String} cookie_code
   */
  exports.prototype['cookie_code'] = undefined;
  /**
   * Indicates if the campaign is currently active. Defaults to true which indicates that it is active
   * @member {Boolean} is_active
   * @default true
   */
  exports.prototype['is_active'] = true;
  /**
   * Name for the landing page of the campaign
   * @member {String} landing_page
   */
  exports.prototype['landing_page'] = undefined;
  /**
   * Rate of client/user registration for the campaign
   * @member {Number} rate
   */
  exports.prototype['rate'] = undefined;
  /**
   * Name of an Urchin Tracking Module (UTM) for a marketing feature used in the campaign
   * @member {String} utm_campaign
   */
  exports.prototype['utm_campaign'] = undefined;
  /**
   * Content of an Urchin Tracking Module (UTM) for a marketing campaign feature used in the campaign. For example, content in a site banner
   * @member {String} utm_content
   */
  exports.prototype['utm_content'] = undefined;
  /**
   * Platform of an Urchin Tracking Module (UTM) for a marketing campaign feature such as Social Media
   * @member {String} utm_medium
   */
  exports.prototype['utm_medium'] = undefined;
  /**
   * Feature Urchin Tracking Module (UTM) for a marketing campaign such as a banner advertisement
   * @member {String} utm_source
   */
  exports.prototype['utm_source'] = undefined;
  /**
   * Term of an Urchin Tracking Module (UTM) for a marketing campaign
   * @member {String} utm_term
   */
  exports.prototype['utm_term'] = undefined;
  /**
   * @member {module:model/SecondaryId} secondary_id
   */
  exports.prototype['secondary_id'] = undefined;



  return exports;
}));


