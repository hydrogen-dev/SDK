/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TransferRequestPayload;
import java.io.IOException;
import java.util.UUID;

/**
 * SpecificTransferResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-12T10:03:00.746-04:00")
public class SpecificTransferResponse {
  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("account_holder")
  private String accountHolder = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("account_type_id")
  private UUID accountTypeId = null;

  @SerializedName("firm_name")
  private String firmName = null;

  @SerializedName("transfer_all_cash")
  private Boolean transferAllCash = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("dtc_number")
  private String dtcNumber = null;

  @SerializedName("roth_five_year")
  private Integer rothFiveYear = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("transfer_type")
  private String transferType = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("update_date")
  private String updateDate = null;

  public SpecificTransferResponse accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account to which the transfer belongs
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account to which the transfer belongs")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public SpecificTransferResponse accountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
    return this;
  }

   /**
   * Name of the individual that is the owner of the external account
   * @return accountHolder
  **/
  @ApiModelProperty(required = true, value = "Name of the individual that is the owner of the external account")
  public String getAccountHolder() {
    return accountHolder;
  }

  public void setAccountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
  }

  public SpecificTransferResponse accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account number for the external account that is the source of the funds
   * @return accountNumber
  **/
  @ApiModelProperty(required = true, value = "Account number for the external account that is the source of the funds")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public SpecificTransferResponse accountTypeId(UUID accountTypeId) {
    this.accountTypeId = accountTypeId;
    return this;
  }

   /**
   * The ID for the type of the account on your platform
   * @return accountTypeId
  **/
  @ApiModelProperty(required = true, value = "The ID for the type of the account on your platform")
  public UUID getAccountTypeId() {
    return accountTypeId;
  }

  public void setAccountTypeId(UUID accountTypeId) {
    this.accountTypeId = accountTypeId;
  }

  public SpecificTransferResponse firmName(String firmName) {
    this.firmName = firmName;
    return this;
  }

   /**
   * Name of the firm that previously held or holds the external account
   * @return firmName
  **/
  @ApiModelProperty(required = true, value = "Name of the firm that previously held or holds the external account")
  public String getFirmName() {
    return firmName;
  }

  public void setFirmName(String firmName) {
    this.firmName = firmName;
  }

  public SpecificTransferResponse transferAllCash(Boolean transferAllCash) {
    this.transferAllCash = transferAllCash;
    return this;
  }

   /**
   * Indicator if the external account should be entirely converted to cash to be transferred.
   * @return transferAllCash
  **/
  @ApiModelProperty(required = true, value = "Indicator if the external account should be entirely converted to cash to be transferred.")
  public Boolean isTransferAllCash() {
    return transferAllCash;
  }

  public void setTransferAllCash(Boolean transferAllCash) {
    this.transferAllCash = transferAllCash;
  }

  public SpecificTransferResponse amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount that is transferred
   * @return amount
  **/
  @ApiModelProperty(value = "Amount that is transferred")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public SpecificTransferResponse comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment for the transfer such as “Funded”
   * @return comment
  **/
  @ApiModelProperty(value = "Comment for the transfer such as “Funded”")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public SpecificTransferResponse dtcNumber(String dtcNumber) {
    this.dtcNumber = dtcNumber;
    return this;
  }

   /**
   * Number of the Deposit Trust Company (DTC)’s that held or holds the external account usually in the case of an Individual Retirement Account (IRA) in the United States
   * @return dtcNumber
  **/
  @ApiModelProperty(value = "Number of the Deposit Trust Company (DTC)’s that held or holds the external account usually in the case of an Individual Retirement Account (IRA) in the United States")
  public String getDtcNumber() {
    return dtcNumber;
  }

  public void setDtcNumber(String dtcNumber) {
    this.dtcNumber = dtcNumber;
  }

  public SpecificTransferResponse rothFiveYear(Integer rothFiveYear) {
    this.rothFiveYear = rothFiveYear;
    return this;
  }

   /**
   * In the case that the account is a United States Roth IRA account, the year it was opened (e.g. 2010)
   * @return rothFiveYear
  **/
  @ApiModelProperty(value = "In the case that the account is a United States Roth IRA account, the year it was opened (e.g. 2010)")
  public Integer getRothFiveYear() {
    return rothFiveYear;
  }

  public void setRothFiveYear(Integer rothFiveYear) {
    this.rothFiveYear = rothFiveYear;
  }

  public SpecificTransferResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the transfer such as “Pending”
   * @return status
  **/
  @ApiModelProperty(value = "Status of the transfer such as “Pending”")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public SpecificTransferResponse transferType(String transferType) {
    this.transferType = transferType;
    return this;
  }

   /**
   * Type of transaction being made such as “wire” or “check”
   * @return transferType
  **/
  @ApiModelProperty(value = "Type of transaction being made such as “wire” or “check”")
  public String getTransferType() {
    return transferType;
  }

  public void setTransferType(String transferType) {
    this.transferType = transferType;
  }

  public SpecificTransferResponse secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public SpecificTransferResponse metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Custom information associated with the transfer in the format key:value
   * @return metadata
  **/
  @ApiModelProperty(value = "Custom information associated with the transfer in the format key:value")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public SpecificTransferResponse updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Datetime the transfer request was last updated
   * @return updateDate
  **/
  @ApiModelProperty(value = "Datetime the transfer request was last updated")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecificTransferResponse specificTransferResponse = (SpecificTransferResponse) o;
    return Objects.equals(this.accountId, specificTransferResponse.accountId) &&
        Objects.equals(this.accountHolder, specificTransferResponse.accountHolder) &&
        Objects.equals(this.accountNumber, specificTransferResponse.accountNumber) &&
        Objects.equals(this.accountTypeId, specificTransferResponse.accountTypeId) &&
        Objects.equals(this.firmName, specificTransferResponse.firmName) &&
        Objects.equals(this.transferAllCash, specificTransferResponse.transferAllCash) &&
        Objects.equals(this.amount, specificTransferResponse.amount) &&
        Objects.equals(this.comment, specificTransferResponse.comment) &&
        Objects.equals(this.dtcNumber, specificTransferResponse.dtcNumber) &&
        Objects.equals(this.rothFiveYear, specificTransferResponse.rothFiveYear) &&
        Objects.equals(this.status, specificTransferResponse.status) &&
        Objects.equals(this.transferType, specificTransferResponse.transferType) &&
        Objects.equals(this.secondaryId, specificTransferResponse.secondaryId) &&
        Objects.equals(this.metadata, specificTransferResponse.metadata) &&
        Objects.equals(this.updateDate, specificTransferResponse.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountHolder, accountNumber, accountTypeId, firmName, transferAllCash, amount, comment, dtcNumber, rothFiveYear, status, transferType, secondaryId, metadata, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecificTransferResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountTypeId: ").append(toIndentedString(accountTypeId)).append("\n");
    sb.append("    firmName: ").append(toIndentedString(firmName)).append("\n");
    sb.append("    transferAllCash: ").append(toIndentedString(transferAllCash)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    dtcNumber: ").append(toIndentedString(dtcNumber)).append("\n");
    sb.append("    rothFiveYear: ").append(toIndentedString(rothFiveYear)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transferType: ").append(toIndentedString(transferType)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

