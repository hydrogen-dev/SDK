/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.api;

import com.hydrogen.nucleus.ApiException;
import com.hydrogen.nucleus.model.PageScore;
import com.hydrogen.nucleus.model.Score;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScoreApi
 */
@Ignore
public class ScoreApiTest {

    private final ScoreApi api = new ScoreApi();

    
    /**
     * Create a score
     *
     * Create a score for a client, account, goal, portfolio, allocation, model, benchmark or security.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createScoreUsingPostTest() throws ApiException {
        Score score = null;
        Score response = api.createScoreUsingPost(score);

        // TODO: test validations
    }
    
    /**
     * Delete a score
     *
     * Permanently delete a score
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteScoreUsingDeleteTest() throws ApiException {
        UUID scoreId = null;
        api.deleteScoreUsingDelete(scoreId);

        // TODO: test validations
    }
    
    /**
     * List all scores
     *
     * Get information for all scores stored for your firm.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScoreAllUsingGetTest() throws ApiException {
        Boolean ascending = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        PageScore response = api.getScoreAllUsingGet(ascending, filter, orderBy, page, size);

        // TODO: test validations
    }
    
    /**
     * Retrieve a score
     *
     * Retrieve the information for a specific score associated with a client, account, goal, portfolio, allocation, model, benchmark or security.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScoreUsingGetTest() throws ApiException {
        UUID scoreId = null;
        Score response = api.getScoreUsingGet(scoreId);

        // TODO: test validations
    }
    
    /**
     * Update a score
     *
     * Update the information for a score.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateScoreUsingPutTest() throws ApiException {
        Object score = null;
        UUID scoreId = null;
        Score response = api.updateScoreUsingPut(score, scoreId);

        // TODO: test validations
    }
    
}
