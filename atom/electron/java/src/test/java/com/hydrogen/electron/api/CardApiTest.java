/*
 * Hydrogen Electron API
 * The Hydrogen Electron API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.electron.api;

import com.hydrogen.electron.model.BaseResponseVO;
import com.hydrogen.electron.model.CardBaseRequestCO;
import com.hydrogen.electron.model.CardClientRequestCO;
import com.hydrogen.electron.model.CardLoadRequestCO;
import com.hydrogen.electron.model.CardLoadUnloadResponseVO;
import com.hydrogen.electron.model.CardReplaceResponseVO;
import com.hydrogen.electron.model.CardReserveAccountResponseVO;
import com.hydrogen.electron.model.CardSpendingControlRequestCO;
import com.hydrogen.electron.model.CardSpendingControlResponseVO;
import com.hydrogen.electron.model.CardUnloadRequestCO;
import com.hydrogen.electron.model.CreateCardClientResponseVO;
import java.util.UUID;
import com.hydrogen.electron.model.UpdateCardClientResponseVO;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for CardApi
 */
@Ignore
public class CardApiTest {

    private final CardApi api = new CardApi();

    
    /**
     * close a card
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardCloseUsingPostTest() throws Exception {
        CardBaseRequestCO closeRequest = null;
        BaseResponseVO response = api.createCardCloseUsingPost(closeRequest);

        // TODO: test validations
    }
    
    /**
     * issue a card
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardIssueUsingPostTest() throws Exception {
        CardBaseRequestCO issueRequest = null;
        BaseResponseVO response = api.createCardIssueUsingPost(issueRequest);

        // TODO: test validations
    }
    
    /**
     * Create a card load
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardLoadUsingPostTest() throws Exception {
        CardLoadRequestCO loadRequest = null;
        CardLoadUnloadResponseVO response = api.createCardLoadUsingPost(loadRequest);

        // TODO: test validations
    }
    
    /**
     * reactivate card
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardReactivateUsingPostTest() throws Exception {
        CardBaseRequestCO reactivateRequest = null;
        BaseResponseVO response = api.createCardReactivateUsingPost(reactivateRequest);

        // TODO: test validations
    }
    
    /**
     * Create card replace
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardReplaceUsingPostTest() throws Exception {
        CardBaseRequestCO request = null;
        CardReplaceResponseVO response = api.createCardReplaceUsingPost(request);

        // TODO: test validations
    }
    
    /**
     * Create card spending control
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardSpendingControlUsingPostTest() throws Exception {
        CardSpendingControlRequestCO request = null;
        CardSpendingControlResponseVO response = api.createCardSpendingControlUsingPost(request);

        // TODO: test validations
    }
    
    /**
     * suspend card
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardSuspendUsingPostTest() throws Exception {
        CardBaseRequestCO suspendRequest = null;
        BaseResponseVO response = api.createCardSuspendUsingPost(suspendRequest);

        // TODO: test validations
    }
    
    /**
     * Create a card upload
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCardUnloadUsingPostTest() throws Exception {
        CardUnloadRequestCO reloadRequest = null;
        CardLoadUnloadResponseVO response = api.createCardUnloadUsingPost(reloadRequest);

        // TODO: test validations
    }
    
    /**
     * Create a card client
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createClientCardUsingPostTest() throws Exception {
        CardClientRequestCO cardClientRequestCO = null;
        CreateCardClientResponseVO response = api.createClientCardUsingPost(cardClientRequestCO);

        // TODO: test validations
    }
    
    /**
     * Card reserve account
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCardReserveAccountDetailsUsingGetTest() throws Exception {
        CardReserveAccountResponseVO response = api.getCardReserveAccountDetailsUsingGet();

        // TODO: test validations
    }
    
    /**
     * Update a card spending control
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateCardSpendingControlUsingPutTest() throws Exception {
        UUID nucleusSpendingControlId = null;
        CardSpendingControlResponseVO response = api.updateCardSpendingControlUsingPut(nucleusSpendingControlId);

        // TODO: test validations
    }
    
    /**
     * Update a card client
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateClientCardUsingPutTest() throws Exception {
        UUID nucleusClientId = null;
        UpdateCardClientResponseVO response = api.updateClientCardUsingPut(nucleusClientId);

        // TODO: test validations
    }
    
}
