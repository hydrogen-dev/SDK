/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.QuestionnairePayloadAnswers = factory(root.atom_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The QuestionnairePayloadAnswers model module.
   * @module model/QuestionnairePayloadAnswers
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>QuestionnairePayloadAnswers</code>.
   * @alias module:model/QuestionnairePayloadAnswers
   * @class
   * @param value {String} Value for the answer option
   */
  var exports = function(value) {
    var _this = this;

    _this['value'] = value;





  };

  /**
   * Constructs a <code>QuestionnairePayloadAnswers</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuestionnairePayloadAnswers} obj Optional instance to populate.
   * @return {module:model/QuestionnairePayloadAnswers} The populated <code>QuestionnairePayloadAnswers</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('value')) {
        obj['value'] = ApiClient.convertToType(data['value'], 'String');
      }
      if (data.hasOwnProperty('order_index')) {
        obj['order_index'] = ApiClient.convertToType(data['order_index'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ApiClient.convertToType(data['image'], 'String');
      }
      if (data.hasOwnProperty('weight')) {
        obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
    }
    return obj;
  }

  /**
   * Value for the answer option
   * @member {String} value
   */
  exports.prototype['value'] = undefined;
  /**
   * The order of the answer option within the question or category such as “1”, “2”, “3”
   * @member {String} order_index
   */
  exports.prototype['order_index'] = undefined;
  /**
   * A label to be assigned to the answer option for data labeling purposes
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * A reference link to an image associated with the answer option
   * @member {String} image
   */
  exports.prototype['image'] = undefined;
  /**
   * The weight of the answer option as a percentage of the total questionnaire score if each answer does not contribute equally when calculating the final “score”; ex. 20 representing 20%. Weights of all the answers for a question must add up to 100
   * @member {Number} weight
   */
  exports.prototype['weight'] = undefined;
  /**
   * Custom information associated with the answer option in the format key:value
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;



  return exports;
}));


