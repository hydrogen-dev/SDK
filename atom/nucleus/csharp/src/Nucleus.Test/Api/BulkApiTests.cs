/* 
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Nucleus.Client;
using Nucleus.Api;
using Nucleus.ModelEntity;

namespace Nucleus.Test
{
    /// <summary>
    ///  Class for testing BulkApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BulkApiTests
    {
        private BulkApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BulkApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BulkApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BulkApi
            //Assert.IsInstanceOfType(typeof(BulkApi), instance, "instance is a BulkApi");
        }

        
        /// <summary>
        /// Test CreateBulkUsingPost
        /// </summary>
        [Test]
        public void CreateBulkUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JsonNode data = null;
            //string entityUri = null;
            //var response = instance.CreateBulkUsingPost(data, entityUri);
            //Assert.IsInstanceOf<BulkTransaction> (response, "response is BulkTransaction");
        }
        
        /// <summary>
        /// Test DeleteBulkUsingDelete
        /// </summary>
        [Test]
        public void DeleteBulkUsingDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JsonNode data = null;
            //string entityUri = null;
            //var response = instance.DeleteBulkUsingDelete(data, entityUri);
            //Assert.IsInstanceOf<BulkTransaction> (response, "response is BulkTransaction");
        }
        
        /// <summary>
        /// Test GetBulkStatusUsingGet
        /// </summary>
        [Test]
        public void GetBulkStatusUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.GetBulkStatusUsingGet(id);
            //Assert.IsInstanceOf<BulkTransactionVO> (response, "response is BulkTransactionVO");
        }
        
        /// <summary>
        /// Test UpdateBulkUsingPut
        /// </summary>
        [Test]
        public void UpdateBulkUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object data = null;
            //string entityUri = null;
            //var response = instance.UpdateBulkUsingPut(data, entityUri);
            //Assert.IsInstanceOf<BulkTransaction> (response, "response is BulkTransaction");
        }
        
    }

}
