/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * SpendingAnalysisResponseSpendingHistory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class SpendingAnalysisResponseSpendingHistory {
  @SerializedName("period_income")
  private BigDecimal periodIncome = null;

  @SerializedName("period_spending")
  private BigDecimal periodSpending = null;

  @SerializedName("period_net")
  private BigDecimal periodNet = null;

  @SerializedName("cumulative_income")
  private BigDecimal cumulativeIncome = null;

  @SerializedName("cumulative_spending")
  private BigDecimal cumulativeSpending = null;

  @SerializedName("cumulative_net")
  private BigDecimal cumulativeNet = null;

  public SpendingAnalysisResponseSpendingHistory periodIncome(BigDecimal periodIncome) {
    this.periodIncome = periodIncome;
    return this;
  }

   /**
   * Cash inflows during the period
   * @return periodIncome
  **/
  @ApiModelProperty(value = "Cash inflows during the period")
  public BigDecimal getPeriodIncome() {
    return periodIncome;
  }

  public void setPeriodIncome(BigDecimal periodIncome) {
    this.periodIncome = periodIncome;
  }

  public SpendingAnalysisResponseSpendingHistory periodSpending(BigDecimal periodSpending) {
    this.periodSpending = periodSpending;
    return this;
  }

   /**
   * Cash outflows during the period
   * @return periodSpending
  **/
  @ApiModelProperty(value = "Cash outflows during the period")
  public BigDecimal getPeriodSpending() {
    return periodSpending;
  }

  public void setPeriodSpending(BigDecimal periodSpending) {
    this.periodSpending = periodSpending;
  }

  public SpendingAnalysisResponseSpendingHistory periodNet(BigDecimal periodNet) {
    this.periodNet = periodNet;
    return this;
  }

   /**
   * Net cash inflows (outflows) during the period
   * @return periodNet
  **/
  @ApiModelProperty(value = "Net cash inflows (outflows) during the period")
  public BigDecimal getPeriodNet() {
    return periodNet;
  }

  public void setPeriodNet(BigDecimal periodNet) {
    this.periodNet = periodNet;
  }

  public SpendingAnalysisResponseSpendingHistory cumulativeIncome(BigDecimal cumulativeIncome) {
    this.cumulativeIncome = cumulativeIncome;
    return this;
  }

   /**
   * Cumulative cash inflows up to and including this period
   * @return cumulativeIncome
  **/
  @ApiModelProperty(value = "Cumulative cash inflows up to and including this period")
  public BigDecimal getCumulativeIncome() {
    return cumulativeIncome;
  }

  public void setCumulativeIncome(BigDecimal cumulativeIncome) {
    this.cumulativeIncome = cumulativeIncome;
  }

  public SpendingAnalysisResponseSpendingHistory cumulativeSpending(BigDecimal cumulativeSpending) {
    this.cumulativeSpending = cumulativeSpending;
    return this;
  }

   /**
   * Cumulative cash outflows up to and including this period
   * @return cumulativeSpending
  **/
  @ApiModelProperty(value = "Cumulative cash outflows up to and including this period")
  public BigDecimal getCumulativeSpending() {
    return cumulativeSpending;
  }

  public void setCumulativeSpending(BigDecimal cumulativeSpending) {
    this.cumulativeSpending = cumulativeSpending;
  }

  public SpendingAnalysisResponseSpendingHistory cumulativeNet(BigDecimal cumulativeNet) {
    this.cumulativeNet = cumulativeNet;
    return this;
  }

   /**
   * Cumulative net cash inflows (outflows) up to and including this period
   * @return cumulativeNet
  **/
  @ApiModelProperty(value = "Cumulative net cash inflows (outflows) up to and including this period")
  public BigDecimal getCumulativeNet() {
    return cumulativeNet;
  }

  public void setCumulativeNet(BigDecimal cumulativeNet) {
    this.cumulativeNet = cumulativeNet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpendingAnalysisResponseSpendingHistory spendingAnalysisResponseSpendingHistory = (SpendingAnalysisResponseSpendingHistory) o;
    return Objects.equals(this.periodIncome, spendingAnalysisResponseSpendingHistory.periodIncome) &&
        Objects.equals(this.periodSpending, spendingAnalysisResponseSpendingHistory.periodSpending) &&
        Objects.equals(this.periodNet, spendingAnalysisResponseSpendingHistory.periodNet) &&
        Objects.equals(this.cumulativeIncome, spendingAnalysisResponseSpendingHistory.cumulativeIncome) &&
        Objects.equals(this.cumulativeSpending, spendingAnalysisResponseSpendingHistory.cumulativeSpending) &&
        Objects.equals(this.cumulativeNet, spendingAnalysisResponseSpendingHistory.cumulativeNet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(periodIncome, periodSpending, periodNet, cumulativeIncome, cumulativeSpending, cumulativeNet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpendingAnalysisResponseSpendingHistory {\n");
    
    sb.append("    periodIncome: ").append(toIndentedString(periodIncome)).append("\n");
    sb.append("    periodSpending: ").append(toIndentedString(periodSpending)).append("\n");
    sb.append("    periodNet: ").append(toIndentedString(periodNet)).append("\n");
    sb.append("    cumulativeIncome: ").append(toIndentedString(cumulativeIncome)).append("\n");
    sb.append("    cumulativeSpending: ").append(toIndentedString(cumulativeSpending)).append("\n");
    sb.append("    cumulativeNet: ").append(toIndentedString(cumulativeNet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

