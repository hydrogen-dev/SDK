/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/WConfig'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./WConfig'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.MvoRequest = factory(root.HydrogenProtonApi.ApiClient, root.HydrogenProtonApi.WConfig);
  }
}(this, function(ApiClient, WConfig) {
  'use strict';

  /**
   * The MvoRequest model module.
   * @module model/MvoRequest
   * @version 1.9.2
   */

  /**
   * Constructs a new <code>MvoRequest</code>.
   * @alias module:model/MvoRequest
   * @class
   * @param tickers {Array.<String>} 
   * @param wConfig {module:model/WConfig} 
   * @param minAssets {Number} 
   * @param secTypes {Array.<module:model/MvoRequest.SecTypesEnum>} 
   */
  var exports = function(tickers, wConfig, minAssets, secTypes) {
    this.tickers = tickers;
    this.wConfig = wConfig;
    this.minAssets = minAssets;
    this.secTypes = secTypes;
  };

  /**
   * Constructs a <code>MvoRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MvoRequest} obj Optional instance to populate.
   * @return {module:model/MvoRequest} The populated <code>MvoRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('tickers'))
        obj.tickers = ApiClient.convertToType(data['tickers'], ['String']);
      if (data.hasOwnProperty('w_config'))
        obj.wConfig = WConfig.constructFromObject(data['w_config']);
      if (data.hasOwnProperty('min_assets'))
        obj.minAssets = ApiClient.convertToType(data['min_assets'], 'Number');
      if (data.hasOwnProperty('end_date'))
        obj.endDate = ApiClient.convertToType(data['end_date'], 'Date');
      if (data.hasOwnProperty('market_data_source'))
        obj.marketDataSource = ApiClient.convertToType(data['market_data_source'], 'String');
      if (data.hasOwnProperty('w_asset_config'))
        obj.wAssetConfig = ApiClient.convertToType(data['w_asset_config'], Object);
      if (data.hasOwnProperty('start_date'))
        obj.startDate = ApiClient.convertToType(data['start_date'], 'Date');
      if (data.hasOwnProperty('tgt_type'))
        obj.tgtType = ApiClient.convertToType(data['tgt_type'], 'String');
      if (data.hasOwnProperty('use_proxy_data'))
        obj.useProxyData = ApiClient.convertToType(data['use_proxy_data'], 'Boolean');
      if (data.hasOwnProperty('tgt_val'))
        obj.tgtVal = ApiClient.convertToType(data['tgt_val'], 'Number');
      if (data.hasOwnProperty('sec_types'))
        obj.secTypes = ApiClient.convertToType(data['sec_types'], ['String']);
    }
    return obj;
  }

  /**
   * @member {Array.<String>} tickers
   */
  exports.prototype.tickers = undefined;

  /**
   * @member {module:model/WConfig} wConfig
   */
  exports.prototype.wConfig = undefined;

  /**
   * @member {Number} minAssets
   */
  exports.prototype.minAssets = undefined;

  /**
   * @member {Date} endDate
   */
  exports.prototype.endDate = undefined;

  /**
   * @member {module:model/MvoRequest.MarketDataSourceEnum} marketDataSource
   * @default 'nucleus'
   */
  exports.prototype.marketDataSource = 'nucleus';

  /**
   * @member {Object} wAssetConfig
   */
  exports.prototype.wAssetConfig = undefined;

  /**
   * @member {Date} startDate
   */
  exports.prototype.startDate = undefined;

  /**
   * @member {module:model/MvoRequest.TgtTypeEnum} tgtType
   */
  exports.prototype.tgtType = undefined;

  /**
   * @member {Boolean} useProxyData
   * @default false
   */
  exports.prototype.useProxyData = false;

  /**
   * @member {Number} tgtVal
   * @default 0.0
   */
  exports.prototype.tgtVal = 0.0;

  /**
   * @member {Array.<module:model/MvoRequest.SecTypesEnum>} secTypes
   */
  exports.prototype.secTypes = undefined;



  /**
   * Allowed values for the <code>marketDataSource</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MarketDataSourceEnum = {
    /**
     * value: "nucleus"
     * @const
     */
    nucleus: "nucleus",

    /**
     * value: "integration"
     * @const
     */
    integration: "integration"
  };


  /**
   * Allowed values for the <code>tgtType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TgtTypeEnum = {
    /**
     * value: "risk"
     * @const
     */
    risk: "risk",

    /**
     * value: "return"
     * @const
     */
    _return: "return"
  };


  /**
   * Allowed values for the <code>secTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SecTypesEnum = {
    /**
     * value: "major"
     * @const
     */
    major: "major",

    /**
     * value: "minor"
     * @const
     */
    minor: "minor",

    /**
     * value: "cash"
     * @const
     */
    cash: "cash"
  };

  return exports;

}));
