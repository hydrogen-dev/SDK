/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.RatioTargets = factory(root.HydrogenProtonApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The RatioTargets model module.
   * @module model/RatioTargets
   * @version 1.9.2
   */

  /**
   * Constructs a new <code>RatioTargets</code>.
   * @alias module:model/RatioTargets
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RatioTargets</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RatioTargets} obj Optional instance to populate.
   * @return {module:model/RatioTargets} The populated <code>RatioTargets</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('liquidity_ratio_liabilities'))
        obj.liquidityRatioLiabilities = ApiClient.convertToType(data['liquidity_ratio_liabilities'], 'Number');
      if (data.hasOwnProperty('current_ratio'))
        obj.currentRatio = ApiClient.convertToType(data['current_ratio'], 'Number');
      if (data.hasOwnProperty('asset_allocation_ratio'))
        obj.assetAllocationRatio = ApiClient.convertToType(data['asset_allocation_ratio'], 'Number');
      if (data.hasOwnProperty('savings_ratio_net'))
        obj.savingsRatioNet = ApiClient.convertToType(data['savings_ratio_net'], 'Number');
      if (data.hasOwnProperty('savings_ratio_gross'))
        obj.savingsRatioGross = ApiClient.convertToType(data['savings_ratio_gross'], 'Number');
      if (data.hasOwnProperty('liquidity_ratio_expenses'))
        obj.liquidityRatioExpenses = ApiClient.convertToType(data['liquidity_ratio_expenses'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} liquidityRatioLiabilities
   * @default 0.1
   */
  exports.prototype.liquidityRatioLiabilities = 0.1;

  /**
   * @member {Number} currentRatio
   * @default 0.5
   */
  exports.prototype.currentRatio = 0.5;

  /**
   * @member {Number} assetAllocationRatio
   * @default 1.5
   */
  exports.prototype.assetAllocationRatio = 1.5;

  /**
   * @member {Number} savingsRatioNet
   * @default 0.1
   */
  exports.prototype.savingsRatioNet = 0.1;

  /**
   * @member {Number} savingsRatioGross
   * @default 0.1
   */
  exports.prototype.savingsRatioGross = 0.1;

  /**
   * @member {Number} liquidityRatioExpenses
   * @default 2.5
   */
  exports.prototype.liquidityRatioExpenses = 2.5;


  return exports;

}));
