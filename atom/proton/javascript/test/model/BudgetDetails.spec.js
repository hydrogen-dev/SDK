/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenProtonApi);
  }
}(this, function(expect, HydrogenProtonApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('BudgetDetails', function() {
      beforeEach(function() {
        instance = new HydrogenProtonApi.BudgetDetails();
      });

      it('should create an instance of BudgetDetails', function() {
        // TODO: update the code to test BudgetDetails
        expect(instance).to.be.a(HydrogenProtonApi.BudgetDetails);
      });

      it('should have the property currencyCode (base name: "currency_code")', function() {
        // TODO: update the code to test the property currencyCode
        expect(instance).to.have.property('currencyCode');
        // expect(instance.currencyCode).to.be(expectedValueLiteral);
      });

      it('should have the property clientId (base name: "client_id")', function() {
        // TODO: update the code to test the property clientId
        expect(instance).to.have.property('clientId');
        // expect(instance.clientId).to.be(expectedValueLiteral);
      });

      it('should have the property frequency (base name: "frequency")', function() {
        // TODO: update the code to test the property frequency
        expect(instance).to.have.property('frequency');
        // expect(instance.frequency).to.be(expectedValueLiteral);
      });

      it('should have the property endDate (base name: "end_date")', function() {
        // TODO: update the code to test the property endDate
        expect(instance).to.have.property('endDate');
        // expect(instance.endDate).to.be(expectedValueLiteral);
      });

      it('should have the property totalValue (base name: "total_value")', function() {
        // TODO: update the code to test the property totalValue
        expect(instance).to.have.property('totalValue');
        // expect(instance.totalValue).to.be(expectedValueLiteral);
      });

      it('should have the property budget (base name: "budget")', function() {
        // TODO: update the code to test the property budget
        expect(instance).to.have.property('budget');
        // expect(instance.budget).to.be(expectedValueLiteral);
      });

      it('should have the property accountId (base name: "account_id")', function() {
        // TODO: update the code to test the property accountId
        expect(instance).to.have.property('accountId');
        // expect(instance.accountId).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "start_date")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property aggregationAccounts (base name: "aggregation_accounts")', function() {
        // TODO: update the code to test the property aggregationAccounts
        expect(instance).to.have.property('aggregationAccounts');
        // expect(instance.aggregationAccounts).to.be(expectedValueLiteral);
      });

      it('should have the property frequencyUnit (base name: "frequency_unit")', function() {
        // TODO: update the code to test the property frequencyUnit
        expect(instance).to.have.property('frequencyUnit');
        // expect(instance.frequencyUnit).to.be(expectedValueLiteral);
      });

    });
  });

}));
