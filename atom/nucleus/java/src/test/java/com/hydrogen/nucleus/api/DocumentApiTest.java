/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.api;

import com.hydrogen.nucleus.ApiException;
import com.hydrogen.nucleus.model.Document;
import com.hydrogen.nucleus.model.PageDocument;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentApi
 */
@Ignore
public class DocumentApiTest {

    private final DocumentApi api = new DocumentApi();

    
    /**
     * Create a Document
     *
     * Create a new Document for your firm.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDocumentUsingPostTest() throws ApiException {
        Document documentRequest = null;
        Document response = api.createDocumentUsingPost(documentRequest);

        // TODO: test validations
    }
    
    /**
     * Delete a tenant document by Id
     *
     * Permanently delete a tenant document by Id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDocumentUsingDeleteTest() throws ApiException {
        UUID documentId = null;
        api.deleteDocumentUsingDelete(documentId);

        // TODO: test validations
    }
    
    /**
     * List all Documents
     *
     * Get the information for all Documents 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDocumentAllUsingGetTest() throws ApiException {
        Boolean ascending = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        PageDocument response = api.getDocumentAllUsingGet(ascending, filter, orderBy, page, size);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Tenant Document by Document Id
     *
     * Retrieve the information for a Tenant Document by Document Id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDocumentUsingGetTest() throws ApiException {
        UUID documentId = null;
        Document response = api.getDocumentUsingGet(documentId);

        // TODO: test validations
    }
    
    /**
     * Update a Tenant Document
     *
     * Updated the information for a Tenant Documents
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDocumentUsingPutTest() throws ApiException {
        Object document = null;
        UUID documentId = null;
        Document response = api.updateDocumentUsingPut(document, documentId);

        // TODO: test validations
    }
    
}
