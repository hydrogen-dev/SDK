/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.SpendingAnalysisResponseOutlierTransactions = factory(root.atom_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SpendingAnalysisResponseOutlierTransactions model module.
   * @module model/SpendingAnalysisResponseOutlierTransactions
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>SpendingAnalysisResponseOutlierTransactions</code>.
   * @alias module:model/SpendingAnalysisResponseOutlierTransactions
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>SpendingAnalysisResponseOutlierTransactions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SpendingAnalysisResponseOutlierTransactions} obj Optional instance to populate.
   * @return {module:model/SpendingAnalysisResponseOutlierTransactions} The populated <code>SpendingAnalysisResponseOutlierTransactions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('transaction_date')) {
        obj['transaction_date'] = ApiClient.convertToType(data['transaction_date'], 'String');
      }
      if (data.hasOwnProperty('transaction_type')) {
        obj['transaction_type'] = ApiClient.convertToType(data['transaction_type'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('merchant')) {
        obj['merchant'] = ApiClient.convertToType(data['merchant'], 'String');
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = ApiClient.convertToType(data['category'], 'String');
      }
      if (data.hasOwnProperty('subcategory')) {
        obj['subcategory'] = ApiClient.convertToType(data['subcategory'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('memo')) {
        obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
      }
    }
    return obj;
  }

  /**
   * The id for the aggregation account transaction record
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The date the transaction took place
   * @member {String} transaction_date
   */
  exports.prototype['transaction_date'] = undefined;
  /**
   * Type of the transaction. Value may be Debit or Credit.
   * @member {module:model/SpendingAnalysisResponseOutlierTransactions.TransactionTypeEnum} transaction_type
   */
  exports.prototype['transaction_type'] = undefined;
  /**
   * Amount of the transaction
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * The merchant for the transaction such as the merchant posted for a credit card charge
   * @member {String} merchant
   */
  exports.prototype['merchant'] = undefined;
  /**
   * Category of the transaction
   * @member {String} category
   */
  exports.prototype['category'] = undefined;
  /**
   * Subcategory of the transaction
   * @member {String} subcategory
   */
  exports.prototype['subcategory'] = undefined;
  /**
   * Description of the transaction
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Memo attached to the transaction
   * @member {String} memo
   */
  exports.prototype['memo'] = undefined;


  /**
   * Allowed values for the <code>transaction_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TransactionTypeEnum = {
    /**
     * value: "Debit"
     * @const
     */
    "Debit": "Debit",
    /**
     * value: "Credit"
     * @const
     */
    "Credit": "Credit"  };


  return exports;
}));


