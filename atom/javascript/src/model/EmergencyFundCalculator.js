/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.EmergencyFundCalculator = factory(root.atom_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The EmergencyFundCalculator model module.
   * @module model/EmergencyFundCalculator
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>EmergencyFundCalculator</code>.
   * @alias module:model/EmergencyFundCalculator
   * @class
   * @param emergencyFundDuration {Number} Number of periods the fund will last
   */
  var exports = function(emergencyFundDuration) {
    var _this = this;

    _this['emergency_fund_duration'] = emergencyFundDuration;












  };

  /**
   * Constructs a <code>EmergencyFundCalculator</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EmergencyFundCalculator} obj Optional instance to populate.
   * @return {module:model/EmergencyFundCalculator} The populated <code>EmergencyFundCalculator</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('emergency_fund_duration')) {
        obj['emergency_fund_duration'] = ApiClient.convertToType(data['emergency_fund_duration'], 'Number');
      }
      if (data.hasOwnProperty('housing_cost')) {
        obj['housing_cost'] = ApiClient.convertToType(data['housing_cost'], 'Number');
      }
      if (data.hasOwnProperty('utility_payments')) {
        obj['utility_payments'] = ApiClient.convertToType(data['utility_payments'], 'Number');
      }
      if (data.hasOwnProperty('telecom_payments')) {
        obj['telecom_payments'] = ApiClient.convertToType(data['telecom_payments'], 'Number');
      }
      if (data.hasOwnProperty('insurance_payments')) {
        obj['insurance_payments'] = ApiClient.convertToType(data['insurance_payments'], 'Number');
      }
      if (data.hasOwnProperty('debt_payments')) {
        obj['debt_payments'] = ApiClient.convertToType(data['debt_payments'], 'Number');
      }
      if (data.hasOwnProperty('transportation_costs')) {
        obj['transportation_costs'] = ApiClient.convertToType(data['transportation_costs'], 'Number');
      }
      if (data.hasOwnProperty('food_costs')) {
        obj['food_costs'] = ApiClient.convertToType(data['food_costs'], 'Number');
      }
      if (data.hasOwnProperty('other_expenses')) {
        obj['other_expenses'] = ApiClient.convertToType(data['other_expenses'], {'String': 'Number'});
      }
      if (data.hasOwnProperty('current_emergency_fund_balance')) {
        obj['current_emergency_fund_balance'] = ApiClient.convertToType(data['current_emergency_fund_balance'], 'Number');
      }
      if (data.hasOwnProperty('interest_rate')) {
        obj['interest_rate'] = ApiClient.convertToType(data['interest_rate'], 'Number');
      }
      if (data.hasOwnProperty('savings_horizon')) {
        obj['savings_horizon'] = ApiClient.convertToType(data['savings_horizon'], ['Number']);
      }
      if (data.hasOwnProperty('frequency_unit')) {
        obj['frequency_unit'] = ApiClient.convertToType(data['frequency_unit'], 'String');
      }
    }
    return obj;
  }

  /**
   * Number of periods the fund will last
   * @member {Number} emergency_fund_duration
   */
  exports.prototype['emergency_fund_duration'] = undefined;
  /**
   * The user's housing costs, such as rent or mortgage payments
   * @member {Number} housing_cost
   */
  exports.prototype['housing_cost'] = undefined;
  /**
   * Utility payments such as electricity or water
   * @member {Number} utility_payments
   */
  exports.prototype['utility_payments'] = undefined;
  /**
   * Telecom payments such as internet or cell phone payments
   * @member {Number} telecom_payments
   */
  exports.prototype['telecom_payments'] = undefined;
  /**
   * Insurance payments such as auto or home insurance
   * @member {Number} insurance_payments
   */
  exports.prototype['insurance_payments'] = undefined;
  /**
   * Debt payments such as credit cards or loans
   * @member {Number} debt_payments
   */
  exports.prototype['debt_payments'] = undefined;
  /**
   * Transportation costs such as gasoline or car payments
   * @member {Number} transportation_costs
   */
  exports.prototype['transportation_costs'] = undefined;
  /**
   * Food costs such as groceries or restaurants
   * @member {Number} food_costs
   */
  exports.prototype['food_costs'] = undefined;
  /**
   * Other expenses to cover in the emergency fund
   * @member {Object.<String, Number>} other_expenses
   */
  exports.prototype['other_expenses'] = undefined;
  /**
   * The user's current emergency fund balance
   * @member {Number} current_emergency_fund_balance
   */
  exports.prototype['current_emergency_fund_balance'] = undefined;
  /**
   * Annualized interest rate earned on the current fund balance
   * @member {Number} interest_rate
   */
  exports.prototype['interest_rate'] = undefined;
  /**
   * Periods in the savings horizon to be used in the recommendation schedule
   * @member {Array.<Number>} savings_horizon
   */
  exports.prototype['savings_horizon'] = undefined;
  /**
   * Frequency unit used for all time intervals
   * @member {module:model/EmergencyFundCalculator.FrequencyUnitEnum} frequency_unit
   * @default 'month'
   */
  exports.prototype['frequency_unit'] = 'month';


  /**
   * Allowed values for the <code>frequency_unit</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FrequencyUnitEnum = {
    /**
     * value: "year"
     * @const
     */
    "year": "year",
    /**
     * value: "six_months"
     * @const
     */
    "six_months": "six_months",
    /**
     * value: "quarter"
     * @const
     */
    "quarter": "quarter",
    /**
     * value: "month"
     * @const
     */
    "month": "month",
    /**
     * value: "two_weeks"
     * @const
     */
    "two_weeks": "two_weeks",
    /**
     * value: "week"
     * @const
     */
    "week": "week"  };


  return exports;
}));


