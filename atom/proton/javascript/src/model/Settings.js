/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.Settings = factory(root.HydrogenProtonApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Settings model module.
   * @module model/Settings
   * @version 1.9.2
   */

  /**
   * Constructs a new <code>Settings</code>.
   * @alias module:model/Settings
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Settings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Settings} obj Optional instance to populate.
   * @return {module:model/Settings} The populated <code>Settings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('default_drift_factor'))
        obj.defaultDriftFactor = ApiClient.convertToType(data['default_drift_factor'], 'Number');
      if (data.hasOwnProperty('drift_rebal'))
        obj.driftRebal = ApiClient.convertToType(data['drift_rebal'], 'Boolean');
      if (data.hasOwnProperty('downside'))
        obj.downside = ApiClient.convertToType(data['downside'], 'Boolean');
      if (data.hasOwnProperty('tax_efficiency_id'))
        obj.taxEfficiencyId = ApiClient.convertToType(data['tax_efficiency_id'], 'Number');
      if (data.hasOwnProperty('period_rebal'))
        obj.periodRebal = ApiClient.convertToType(data['period_rebal'], 'Boolean');
      if (data.hasOwnProperty('rebalance_period'))
        obj.rebalancePeriod = ApiClient.convertToType(data['rebalance_period'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} defaultDriftFactor
   */
  exports.prototype.defaultDriftFactor = undefined;

  /**
   * @member {Boolean} driftRebal
   */
  exports.prototype.driftRebal = undefined;

  /**
   * @member {Boolean} downside
   */
  exports.prototype.downside = undefined;

  /**
   * @member {module:model/Settings.TaxEfficiencyIdEnum} taxEfficiencyId
   */
  exports.prototype.taxEfficiencyId = undefined;

  /**
   * @member {Boolean} periodRebal
   */
  exports.prototype.periodRebal = undefined;

  /**
   * @member {module:model/Settings.RebalancePeriodEnum} rebalancePeriod
   */
  exports.prototype.rebalancePeriod = undefined;



  /**
   * Allowed values for the <code>taxEfficiencyId</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.TaxEfficiencyIdEnum = {
    /**
     * value: 0
     * @const
     */
    _0: 0,

    /**
     * value: 1
     * @const
     */
    _1: 1,

    /**
     * value: 2
     * @const
     */
    _2: 2,

    /**
     * value: 3
     * @const
     */
    _3: 3,

    /**
     * value: 4
     * @const
     */
    _4: 4
  };


  /**
   * Allowed values for the <code>rebalancePeriod</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.RebalancePeriodEnum = {
    /**
     * value: 0
     * @const
     */
    _0: 0,

    /**
     * value: 1
     * @const
     */
    _1: 1,

    /**
     * value: 2
     * @const
     */
    _2: 2,

    /**
     * value: 3
     * @const
     */
    _3: 3,

    /**
     * value: 4
     * @const
     */
    _4: 4
  };

  return exports;

}));
