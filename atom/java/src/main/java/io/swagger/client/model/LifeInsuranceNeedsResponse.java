/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LifeInsuranceNeedsBreakdown;
import io.swagger.client.model.LifeInsuranceReturnDetail;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * LifeInsuranceNeedsResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-14T14:44:02.139-04:00")
public class LifeInsuranceNeedsResponse {
  @SerializedName("life_insurance_needed")
  private BigDecimal lifeInsuranceNeeded = null;

  @SerializedName("total_life_insurance_needed")
  private BigDecimal totalLifeInsuranceNeeded = null;

  @SerializedName("life_insurance_needs_breakdown")
  private LifeInsuranceNeedsBreakdown lifeInsuranceNeedsBreakdown = null;

  @SerializedName("return_details")
  private Map<String, LifeInsuranceReturnDetail> returnDetails = new HashMap<String, LifeInsuranceReturnDetail>();

  public LifeInsuranceNeedsResponse lifeInsuranceNeeded(BigDecimal lifeInsuranceNeeded) {
    this.lifeInsuranceNeeded = lifeInsuranceNeeded;
    return this;
  }

   /**
   * The supplemental life insurance needed by the user.
   * minimum: 0
   * @return lifeInsuranceNeeded
  **/
  @ApiModelProperty(required = true, value = "The supplemental life insurance needed by the user.")
  public BigDecimal getLifeInsuranceNeeded() {
    return lifeInsuranceNeeded;
  }

  public void setLifeInsuranceNeeded(BigDecimal lifeInsuranceNeeded) {
    this.lifeInsuranceNeeded = lifeInsuranceNeeded;
  }

  public LifeInsuranceNeedsResponse totalLifeInsuranceNeeded(BigDecimal totalLifeInsuranceNeeded) {
    this.totalLifeInsuranceNeeded = totalLifeInsuranceNeeded;
    return this;
  }

   /**
   * The total life insurance needed by the user, including the current life insurance.
   * minimum: 0
   * @return totalLifeInsuranceNeeded
  **/
  @ApiModelProperty(required = true, value = "The total life insurance needed by the user, including the current life insurance.")
  public BigDecimal getTotalLifeInsuranceNeeded() {
    return totalLifeInsuranceNeeded;
  }

  public void setTotalLifeInsuranceNeeded(BigDecimal totalLifeInsuranceNeeded) {
    this.totalLifeInsuranceNeeded = totalLifeInsuranceNeeded;
  }

  public LifeInsuranceNeedsResponse lifeInsuranceNeedsBreakdown(LifeInsuranceNeedsBreakdown lifeInsuranceNeedsBreakdown) {
    this.lifeInsuranceNeedsBreakdown = lifeInsuranceNeedsBreakdown;
    return this;
  }

   /**
   * Get lifeInsuranceNeedsBreakdown
   * @return lifeInsuranceNeedsBreakdown
  **/
  @ApiModelProperty(required = true, value = "")
  public LifeInsuranceNeedsBreakdown getLifeInsuranceNeedsBreakdown() {
    return lifeInsuranceNeedsBreakdown;
  }

  public void setLifeInsuranceNeedsBreakdown(LifeInsuranceNeedsBreakdown lifeInsuranceNeedsBreakdown) {
    this.lifeInsuranceNeedsBreakdown = lifeInsuranceNeedsBreakdown;
  }

  public LifeInsuranceNeedsResponse returnDetails(Map<String, LifeInsuranceReturnDetail> returnDetails) {
    this.returnDetails = returnDetails;
    return this;
  }

  public LifeInsuranceNeedsResponse putReturnDetailsItem(String key, LifeInsuranceReturnDetail returnDetailsItem) {
    this.returnDetails.put(key, returnDetailsItem);
    return this;
  }

   /**
   * Get returnDetails
   * @return returnDetails
  **/
  @ApiModelProperty(required = true, value = "")
  public Map<String, LifeInsuranceReturnDetail> getReturnDetails() {
    return returnDetails;
  }

  public void setReturnDetails(Map<String, LifeInsuranceReturnDetail> returnDetails) {
    this.returnDetails = returnDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LifeInsuranceNeedsResponse lifeInsuranceNeedsResponse = (LifeInsuranceNeedsResponse) o;
    return Objects.equals(this.lifeInsuranceNeeded, lifeInsuranceNeedsResponse.lifeInsuranceNeeded) &&
        Objects.equals(this.totalLifeInsuranceNeeded, lifeInsuranceNeedsResponse.totalLifeInsuranceNeeded) &&
        Objects.equals(this.lifeInsuranceNeedsBreakdown, lifeInsuranceNeedsResponse.lifeInsuranceNeedsBreakdown) &&
        Objects.equals(this.returnDetails, lifeInsuranceNeedsResponse.returnDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lifeInsuranceNeeded, totalLifeInsuranceNeeded, lifeInsuranceNeedsBreakdown, returnDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LifeInsuranceNeedsResponse {\n");
    
    sb.append("    lifeInsuranceNeeded: ").append(toIndentedString(lifeInsuranceNeeded)).append("\n");
    sb.append("    totalLifeInsuranceNeeded: ").append(toIndentedString(totalLifeInsuranceNeeded)).append("\n");
    sb.append("    lifeInsuranceNeedsBreakdown: ").append(toIndentedString(lifeInsuranceNeedsBreakdown)).append("\n");
    sb.append("    returnDetails: ").append(toIndentedString(returnDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

