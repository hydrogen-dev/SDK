swagger: '2.0'
info:
  description: The Hydrogen Nucleus API
  version: 1.9.4
  title: Hydrogen Nucleus API
  termsOfService: 'https://www.hydrogenplatform.com/legal/terms'
  contact:
    name: Hydrogen Technology Corporation
    url: 'https://www.hydrogenplatform.com/contact'
    email: info@hydrogenplatform.com
host: api.hydrogenplatform.com
basePath: /
tags:
  - name: Account
  - name: AggregationAccount
  - name: Allocation
  - name: Benchmark
  - name: Budget
  - name: Bulk
  - name: Business
  - name: Card
  - name: Client
  - name: DecisionTree
  - name: Document
  - name: Funding
  - name: Goal
  - name: Household
  - name: Model
  - name: Order
  - name: Portfolio
  - name: Questionnaire
  - name: Resource
  - name: RiskProfile
  - name: Score
  - name: Securities
  - name: SpendingControl
  - name: Utils
  - name: Webhook
paths:
  /nucleus/v1/account:
    get:
      tags:
        - Account
      summary: List all accounts
      description: Get information for all accounts for all clients defined for your firm.
      operationId: getAccountAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Account»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account
      description: Create an account under a client.
      operationId: createAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account
          description: account
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}':
    get:
      tags:
        - Account
      summary: Retrieve an account
      description: Retrieve the information for a specific account associated with a client.
      operationId: getAccountUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account
      description: Update the information for an account.
      operationId: updateAccountUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account
          description: account
          required: true
          schema:
            type: object
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account
      description: Permanently delete an account under a client.
      operationId: deleteAccountUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/account_overview':
    get:
      tags:
        - Account
      summary: List all Account overview
      operationId: getAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/asset_size':
    get:
      tags:
        - Account
      summary: List all account asset sizes
      description: Get a list of asset sizes by date for an account.
      operationId: getAccountAssetSizeAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: exclude_subledger
          in: query
          description: true or false
          required: false
          type: boolean
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/holding':
    get:
      tags:
        - Account
      summary: List all account holdings
      description: Get information for all the securities that are currently being held by an account.
      operationId: getPortfolioHoldingAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: 'end date '
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: 'start date '
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingAgg»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_bulk':
    post:
      tags:
        - Order
      summary: Bulk orders for an account
      description: Aggregates all orders on a given date for an account.
      operationId: createAccountOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_buy_only':
    post:
      tags:
        - Order
      summary: Create buy-only account rebalance orders
      description: Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
      operationId: createAccountOrderBuyOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_rebalance':
    post:
      tags:
        - Order
      summary: Create account rebalance orders
      description: 'Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe. '
      operationId: createAccountOrderRebalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_reconciliation':
    post:
      tags:
        - Order
      summary: Create account reconciliation order
      operationId: createAccountOrderReconciliation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderReconcileReturnObject'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_sell_all':
    post:
      tags:
        - Order
      summary: Sell all account order
      description: Create order records necessary to entirely sell all the holdings within an account.
      operationId: createAccountOrderSellAllUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/order_sell_only':
    post:
      tags:
        - Order
      summary: Create sell-only account rebalance orders
      description: Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
      operationId: createAccountOrderSellOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/subscribe':
    post:
      tags:
        - Account
      summary: Subscribe an account
      description: 'After creating an account, you may create portfolios for the account to track a client’s investment, savings, or insurance products.'
      operationId: subscribeAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account/{account_id}/transaction':
    get:
      tags:
        - Account
      summary: List all account transactions
      description: Get the information for all transactions for an account.
      operationId: getPortfolioTransactionAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: 'end date '
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: 'start date '
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/account_allocation:
    get:
      tags:
        - Account
      summary: List all account allocations
      description: Get information for all account-allocation mappings for all accounts defined for your firm.
      operationId: getAccountAllocationMappingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountAllocationMapping»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account allocation
      description: Create an account-allocation mapping for an account.
      operationId: createAccountAllocationMappingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account_allocation/{account_allocation_id}':
    get:
      tags:
        - Account
      summary: Retrieve an account allocation
      description: Retrieve the information for a specific account-allocation mapping for an account.
      operationId: getAccountAllocationMappingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account allocation
      description: Update the information for an account-allocation mapping.
      operationId: updateAccountAllocationMappingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - in: body
          name: account_allocation_mapping
          description: account_allocation_mapping
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account allocation
      description: Permanently delete an account-allocation mapping for an account.
      operationId: deleteAccountAllocationMappingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/account_permission:
    get:
      tags:
        - Account
      summary: List all account permission
      description: List all account permission
      operationId: getAllAccountPermissionUsingGET
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountPermissionVO»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: create an account permission
      description: create an account permission
      operationId: insertAccountAndRelatedPermissionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aclClientPermissionVO
          description: aclClientPermissionVO
          required: true
          schema:
            $ref: '#/definitions/AclClientPermissionVO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account_permission/{account_id}':
    get:
      tags:
        - Account
      summary: Get an account permission
      description: Get an account permission
      operationId: getAccountPermissionUsingGET
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account permission
      description: Update an account permission
      operationId: updateClientAccountPermissionUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: aclClientPermissionVO
          description: aclClientPermissionVO
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account permission
      description: Delete an account permission
      operationId: deleteAccountPermissionUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/account_status:
    get:
      tags:
        - Account
      summary: List all account statuses
      description: Get the account status history information for all accounts.
      operationId: getAccountStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account status
      description: Create an account status record for an account.
      operationId: createAccountStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accountStatusRequest
          description: accountStatusRequest
          required: true
          schema:
            $ref: '#/definitions/AccountStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account_status/{account_status_id}':
    get:
      tags:
        - Account
      summary: Retrieve an account status
      description: Retrieve the information for a specific account status record for an account.
      operationId: getAccountStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account status
      description: Update an account status record for an account.
      operationId: updateAccountStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account_status
          description: account_status
          required: true
          schema:
            type: object
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account status
      description: Permanently delete an account status record from an account’s history.
      operationId: deleteAccountStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/account_type:
    get:
      tags:
        - Account
      summary: List all account types
      description: List all account types defined for your firm.
      operationId: getAccountTypeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountType»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account type
      description: Create a new account type for your firm.
      operationId: createAccountTypeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accountTypeRequest
          description: accountTypeRequest
          required: true
          schema:
            $ref: '#/definitions/AccountType'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/account_type/{account_type_id}':
    get:
      tags:
        - Account
      summary: Get an Account Type
      description: Get an account types defined for your firm.
      operationId: getAccountTypeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_type_id
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account type
      description: Update the information for a possible account type defined for your firm.
      operationId: updateAccountTypeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account_type
          description: account_type
          required: true
          schema:
            type: object
        - name: account_type_id
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account type
      description: Permanently delete a possible account type defined for your firm.
      operationId: deleteAccountTypeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_type_id
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/aggregation_account:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation accounts
      description: Get information for all aggregation accounts for all clients defined for your firm.
      operationId: getAggregationAccountAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccount»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account
      description: Create an aggregation account under a client.
      operationId: createAggregationAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccount
          description: aggregationAccount
          required: true
          schema:
            $ref: '#/definitions/AggregationAccount'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/aggregation_account/{aggregation_account_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account
      description: Retrieve the information for a specific aggregation account associated with a client.
      operationId: getAggregationAccountUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account
      description: Update the information for an aggregation account.
      operationId: updateAggregationAccountUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account
          description: aggregation_account
          required: true
          schema:
            type: object
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account
      description: Permanently delete an aggregation account under a client.
      operationId: deleteAggregationAccountUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/aggregation_account/{aggregation_account_id}/aggregate_data':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account aggregate data
      description: Retrieve the information for a specific aggregation account associated with a client.
      operationId: getAggregationAccountAggregateDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/aggregation_account_balance:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account balances
      description: Get all of the balance records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountBalanceAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountBalance»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account balance
      description: Create a balance record under an aggregation account.
      operationId: createAggregationAccountBalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountBalance
          description: aggregationAccountBalance
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/aggregation_account_balance/{aggregation_account_balance_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account balance
      description: Retrieve the information for a specific balance record for an aggregation account.
      operationId: getAggregationAccountBalanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account balance
      description: Update a balance record for an aggregation account.
      operationId: updateAggregationAccountBalanceUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_balance
          description: aggregation_account_balance
          required: true
          schema:
            type: object
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account balance
      description: Permanently delete a balance record for an aggregation account.
      operationId: deleteAggregationAccountBalanceUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/aggregation_account_holding:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account holdings
      description: Get all of the holding records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountHolding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account holding
      description: Create a holding record under an aggregation account.
      operationId: createAggregationAccountHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountHolding
          description: aggregationAccountHolding
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/aggregation_account_holding/{aggregation_account_holding_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account holding
      description: Retrieve the information for a specific holding record for an aggregation account.
      operationId: getAggregationAccountHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account holding
      description: Update a holding record for an aggregation account.
      operationId: updateAggregationAccountHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_holding
          description: aggregation_account_holding
          required: true
          schema:
            type: object
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account holding
      description: Permanently delete a holding record for an aggregation account.
      operationId: deleteAggregationAccountHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/aggregation_account_transaction:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account transactions
      description: Get all of the transaction records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account transaction
      description: Create a transaction record under an aggregation account.
      operationId: createAggregationAccountTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountTransaction
          description: aggregationAccountTransaction
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/aggregation_account_transaction/{aggregation_account_transaction_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account transaction
      description: Retrieve the information for a specific transaction record for an aggregation account.
      operationId: getAggregationAccountTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account transaction
      description: Update a transaction record for an aggregation account.
      operationId: updateAggregationAccountTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_transaction
          description: aggregation_account_transaction
          required: true
          schema:
            type: object
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account transaction
      description: Permanently delete a transaction record for an aggregation account.
      operationId: deleteAggregationAccountTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/allocation:
    get:
      tags:
        - Allocation
      summary: List all allocations
      description: Get details for all allocations defined for your firm.
      operationId: getAllocationAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Allocation»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Allocation
      summary: Create an allocation
      description: Create a new allocation for your firm.
      operationId: createAllocationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocationRequest
          description: allocationRequest
          required: true
          schema:
            $ref: '#/definitions/Allocation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation/{allocation_id}':
    get:
      tags:
        - Allocation
      summary: Retrieve an allocation
      description: Retrieve the information for an allocation defined by your firm.
      operationId: getAllocationUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Allocation
      summary: Update an allocation
      description: Update an allocation defined by your firm.
      operationId: updateAllocationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocation
          description: allocation
          required: true
          schema:
            type: object
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Allocation
      summary: Delete an allocation
      description: Permanently delete an allocation defined by your firm.
      operationId: deleteAllocationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation/{allocation_id}/aggregate_data':
    get:
      tags:
        - Allocation
      summary: List all Allocation aggregated data overview
      operationId: getAllocationAllAggregateDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: Allocation Id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationAggregatedVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation/{allocation_id}/asset_size':
    get:
      tags:
        - Allocation
      summary: List all allocation asset sizes
      description: Get a list of asset sizes by date for a specific allocation.
      operationId: getAllocationAllAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: get_latest
          in: query
          description: get_latest
          required: false
          type: boolean
        - name: is_current_weight
          in: query
          description: is_current_weight
          required: false
          type: boolean
          default: true
        - name: sort_type
          in: query
          description: 'D (Daily), Q (quarterly), M (Monthly), Y (Annually) '
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation/{allocation_id}/holding':
    get:
      tags:
        - Allocation
      summary: List all allocation holdings
      description: 'Get the information for all securities assigned to a specific allocation. '
      operationId: getAllocationAllHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelHoldingVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation/{allocation_id}/transaction':
    get:
      tags:
        - Allocation
      summary: List all allocation transactions
      description: Get the information for all transactions made under an allocation to achieve the composition of the allocation.
      operationId: getAllocationAllTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/allocation_composition:
    get:
      tags:
        - Allocation
      summary: List all allocations compositions
      description: Get the allocation composition for all allocations.
      operationId: getAllocationCompositionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AllocationComposition»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Allocation
      summary: Create an allocation composition
      description: Create a new allocation composition record for an allocation.
      operationId: createAllocationCompositionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AllocationComposition'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/allocation_composition/{allocation_composition_id}':
    get:
      tags:
        - Allocation
      summary: Retrieve an allocation composition
      description: Retrieve the information of an allocation composition record for an allocation.
      operationId: getAllocationCompositionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: 2b74355b-00eb-460b-a504-822248e50621
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Allocation
      summary: Update an allocation composition
      description: Update the information of an allocation composition record for an allocation.
      operationId: updateAllocationCompositionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocation_composition
          description: allocation_composition
          required: true
          schema:
            type: object
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Allocation
      summary: Delete an allocation composition
      description: Permanently delete an allocation composition record for an allocation.
      operationId: deleteAllocationCompositionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: 2b74355b-00eb-460b-a504-822248e50621
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/answer:
    get:
      tags:
        - Questionnaire
      summary: List all Answers
      description: Get information for all Answers
      operationId: getAnswerAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: label
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Answer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create an answer
      description: Create a new answer for question.
      operationId: createAnswerUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: answer
          description: answer
          required: true
          schema:
            $ref: '#/definitions/Answer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/answer/{answer_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve an answer
      description: Retrieve the information for an answer for question
      operationId: getAnswerUsingGet
      produces:
        - application/json
      parameters:
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update an answer
      description: Update a answer for question.
      operationId: updateAnswerUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: answer
          description: answer
          required: true
          schema:
            type: object
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete an answer
      description: Delete an answer for the question
      operationId: deleteAnswerUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/application:
    get:
      tags:
        - Utils
      summary: List all Application
      description: Get details for all Application.
      operationId: getApplicationAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Application»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create an application
      description: Create an application
      operationId: createApplicationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: application
          description: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/application/{application_id}':
    get:
      tags:
        - Utils
      summary: Retrieve an Application
      description: Retrieve the information for an Application.
      operationId: getApplicationUsingGet
      produces:
        - '*/*'
      parameters:
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update an Application
      description: Update the information for an Application
      operationId: updateApplicationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: application
          description: application
          required: true
          schema:
            type: object
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete an Application
      description: Permanently delete an Application.
      operationId: deleteApplicationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/audit_log:
    get:
      tags:
        - Utils
      summary: List all audit log
      description: Get details for all audit log.
      operationId: getAuditLogAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AuditLog»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a audit log
      description: Create a new audit log.
      operationId: createAuditLogUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: auditLog
          description: auditLog
          required: true
          schema:
            $ref: '#/definitions/AuditLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuditLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/audit_log/{audit_log_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a audit log
      description: Retrieve the information for a audit log.
      operationId: getAuditLogUsingGet
      produces:
        - '*/*'
      parameters:
        - name: audit_log_id
          in: path
          description: UUID audit_log_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuditLog'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bank_link:
    get:
      tags:
        - Funding
      summary: List all bank links
      description: Get all bank links defined for all clients defined for your firm.
      operationId: getBankLinkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«BankLink»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a bank link
      description: Create a new bank link for an account.
      operationId: createBankLinkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bankLinkInfoRequest
          description: bankLinkInfoRequest
          required: true
          schema:
            $ref: '#/definitions/BankLink'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/bank_link/{bank_link_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a bank link
      description: Retrieve the information for a bank link for an account.
      operationId: getBankLinkUsingGet
      produces:
        - '*/*'
      parameters:
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 4ff21db3-97ab-4bbd-9885-be6aec522c44
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a bank link
      description: Update the information for a bank link for an account.
      operationId: updateBankLinkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bank_link
          description: bank_link
          required: true
          schema:
            type: object
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a bank link
      description: Permanently delete a bank link defined for an account.
      operationId: deleteBankLinkUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 4ff21db3-97ab-4bbd-9885-be6aec522c44
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/benchmark:
    get:
      tags:
        - Benchmark
      summary: List all benchmarks
      description: Get details for all benchmarks defined for your firm.
      operationId: getBenchmarkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Benchmark»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Benchmark
      summary: Create a benchmark
      description: Create a new benchmark for your firm.
      operationId: createBenchmarkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: benchmark
          description: benchmark
          required: true
          schema:
            $ref: '#/definitions/Benchmark'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/benchmark/{benchmark_id}':
    get:
      tags:
        - Benchmark
      summary: Retrieve a benchmark
      description: Retrieve the information for a benchmark.
      operationId: getBenchmarkUsingGet
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Benchmark
      summary: Update a benchmark
      description: Updated the information for a benchmark.
      operationId: updateBenchmarkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: benchmark
          description: benchmark
          required: true
          schema:
            type: object
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Benchmark
      summary: Delete a benchmark
      description: Permanently delete a benchmark.
      operationId: deleteBenchmarkUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/benchmark/{benchmark_id}/asset_size':
    get:
      tags:
        - Benchmark
      summary: List all benchmark asset sizes
      description: Get a list of asset sizes by date for a benchmark.
      operationId: getBenchmarkAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: sort_type
          in: query
          description: sort_type
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/budget:
    get:
      tags:
        - Budget
      summary: List all budget requests
      description: Get the information for all budget requests.
      operationId: getBudgetAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Budget»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Budget
      summary: Create a budget request
      description: Create a new budget request.
      operationId: createBudgetUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: budgetRequest
          description: budgetRequest
          required: true
          schema:
            $ref: '#/definitions/Budget'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/budget/{budget_id}':
    get:
      tags:
        - Budget
      summary: Retrieve a budget request
      description: Retrieve the information for a budget request.
      operationId: getBudgetUsingGet
      produces:
        - '*/*'
      parameters:
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Budget
      summary: Update a budget request
      description: Update the information for a budget request.
      operationId: updateBudgetUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: budget
          description: budget
          required: true
          schema:
            type: object
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Budget
      summary: Delete a budget request
      description: Permanently delete a budget request.
      operationId: deleteBudgetUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/bulk/status/{id}':
    get:
      tags:
        - Bulk
      summary: Status of bulk transaction
      description: Get the status of bulk transaction.
      operationId: getBulkStatusUsingGet
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: UUID Bulk Transaction Id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransactionVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/bulk/{entity_uri}':
    post:
      tags:
        - Bulk
      summary: Create a bulk data
      description: Create a new bulk data for your firm.
      operationId: createBulkUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Bulk
      summary: Update a bulk data
      description: Update a bulk data for your firm.
      operationId: updateBulkUsingPut
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            type: object
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Bulk
      summary: Delete a bulk data
      description: Delete a bulk data for your firm.
      operationId: deleteBulkUsingDelete
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bulk_aggregation_account:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account
      description: Create a bulk aggregation account under a client.
      operationId: createAggregationAccountBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountList
          description: aggregationAccountList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update a bulk aggregation account
      description: Update a bulk aggregation account under a client.
      operationId: updateAggregationAccountBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountList
          description: aggregationAccountList
          required: true
          schema:
            type: array
            items:
              type: object
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bulk_aggregation_account_balance:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account balance
      description: Create a balance records under an aggregation accounts.
      operationId: createAggregationAccountBalanceBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountBalance
          description: aggregationAccountBalance
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountBalance'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bulk_aggregation_account_holding:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account holding
      description: Create a bulk aggregation account holding.
      operationId: createAggregationAccountHoldingBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationTransaction
          description: aggregationTransaction
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an bulk aggregation account holding
      description: Update a bulk holding record for an aggregation account.
      operationId: updateAggregationAccountHoldingBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountHolding
          description: aggregationAccountHolding
          required: true
          schema:
            type: array
            items:
              type: object
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bulk_aggregation_account_transaction:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account transaction
      description: Create a bulk transaction record under an aggregation account.
      operationId: createAggregationAccountTransactionBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountTransactions
          description: aggregationAccountTransactions
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountTransaction'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/bulk_bank_link:
    put:
      tags:
        - Funding
      summary: Update list of bank link
      description: Update bank link list for an account.
      operationId: updateBankLinkBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bankLinkList
          description: bankLinkList
          required: true
          schema:
            type: array
            items:
              type: object
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/business:
    get:
      tags:
        - Business
      summary: List all business
      description: Get details for all business.
      operationId: getBusinessAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Business»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Business
      summary: Create a business
      description: 'Create a new business, or register a new business.'
      operationId: createBusinessUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: businessRequest
          description: businessRequest
          required: true
          schema:
            $ref: '#/definitions/Business'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Business'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/business/{business_id}':
    get:
      tags:
        - Business
      summary: Retrieve a business
      description: Retrieve the information for a business.
      operationId: getBusinessUsingGet
      produces:
        - '*/*'
      parameters:
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Business'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Business
      summary: Update a business
      description: Update the information for a business.
      operationId: updateBusinessUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: business
          description: business
          required: true
          schema:
            type: object
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Business'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Business
      summary: Delete a business
      description: Permanently delete a business.
      operationId: deleteBusinessUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/business/{business_id}/aggregation_account_overview':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account aggregate data
      description: Retrieve the information for a specific aggregation account with aggregate data for a business.
      operationId: getAggregationAccountOverviewByBusinessIdUsingGet
      produces:
        - '*/*'
      parameters:
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/business/{business_id}/asset_size':
    get:
      tags:
        - Business
      summary: List all business asset sizes
      description: Get a list of asset sizes per date for a business.
      operationId: getBusinessAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          default: 'null'
          format: date
        - name: exclude_subledger
          in: query
          description: exclude_subledger
          required: false
          type: boolean
          default: false
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          default: 'null'
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/business/{business_id}/holding':
    get:
      tags:
        - Business
      summary: List all business holdings
      description: Get a list of holdings for a business.
      operationId: getBusinessHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingAgg»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/business/{business_id}/transaction':
    get:
      tags:
        - Business
      summary: List all business transactions
      description: Get the information for all transactions under all client registered with your business.
      operationId: getBusinessClientTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: business_id
          in: path
          description: UUID business_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/card:
    get:
      tags:
        - Card
      summary: List all card requests
      description: Get the information for all card requests.
      operationId: getCardAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Card»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Card
      summary: Create a card request
      description: Create a new card request.
      operationId: createCardUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cardRequest
          description: cardRequest
          required: true
          schema:
            $ref: '#/definitions/Card'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/card/cardholder_overview:
    get:
      tags:
        - Card
      summary: List all client cards
      description: Get the information for all cards for an client.
      operationId: getAllClientCardsUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientBusinessCardVO»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/card/{card_id}':
    get:
      tags:
        - Card
      summary: Retrieve a card request
      description: Retrieve the information for a card request.
      operationId: getCardUsingGet
      produces:
        - '*/*'
      parameters:
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Card
      summary: Update a card request
      description: Update the information for a card request.
      operationId: updateCardUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: card
          description: card
          required: true
          schema:
            type: object
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Card
      summary: Delete a card request
      description: Permanently delete a card request.
      operationId: deleteCardUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/card/{card_id}/asset_size':
    get:
      tags:
        - Card
      summary: List all card asset sizes
      description: Get a list of asset sizes by date for an card.
      operationId: getCardAssetSizeAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: card_id
          in: path
          description: Card Id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/card/{card_id}/transaction':
    get:
      tags:
        - Card
      summary: List all card transactions
      description: Get the information for all transactions for an card.
      operationId: getCardTransactionAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Card
      summary: List all card transactions
      description: Get the information for all transactions for an card.
      operationId: getCardTransactionAggAllUsingGet_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: card_id
          in: path
          description: card_id
          required: true
          type: string
          format: uuid
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/card_program:
    get:
      tags:
        - Card
      summary: List all cardProgram
      description: Get information for all cardProgram.
      operationId: getCardProgramAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«CardProgram»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Card
      summary: Create a cardProgram request
      description: Create a new cardProgram request.
      operationId: createCardProgramUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cardProgramRequest
          description: cardProgramRequest
          required: true
          schema:
            $ref: '#/definitions/CardProgram'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/card_program/{card_program_id}':
    get:
      tags:
        - Card
      summary: Retrieve an cardProgram
      description: Retrieve the information for a specific cardProgram.
      operationId: getCardProgramUsingGet
      produces:
        - '*/*'
      parameters:
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Card
      summary: Update an cardProgram
      description: Update the information for an cardProgram.
      operationId: updateCardProgramUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: card_program
          description: card_program
          required: true
          schema:
            type: object
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Card
      summary: Delete an cardProgram
      description: Permanently delete an cardProgram.
      operationId: deleteCardProgramUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/client:
    get:
      tags:
        - Client
      summary: List all clients
      description: Get details for all clients registered with your firm.
      operationId: getClientAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Client»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create a client
      description: 'Create a new client, or register a new user, with your firm.'
      operationId: createClientUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientRequest
          description: clientRequest
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}':
    get:
      tags:
        - Client
      summary: Retrieve a client
      description: Retrieve the information for a client registered with your firm.
      operationId: getClientUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update a client
      description: Update the information for a client registered with your firm.
      operationId: updateClientUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client
          description: client
          required: true
          schema:
            type: object
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a client
      description: Permanently delete a client registered with your firm. Turns the client's is_active  = 0
      operationId: deleteClientUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/account_overview':
    get:
      tags:
        - Client
      summary: List all client Account overview
      operationId: getClientAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/advisor_overview':
    get:
      tags:
        - Client
      summary: Advisor overview
      operationId: getClientAdvisorOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: show_clients
          in: query
          description: show_clients
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/aggregation_account_overview':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account aggregate data
      description: Retrieve the information for a specific aggregation account with aggregate data for a client.
      operationId: getAggregationAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/asset_size':
    get:
      tags:
        - Client
      summary: List all client asset sizes
      description: Get a list of asset sizes per date for a client.
      operationId: getClientAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          default: 'null'
          format: date
        - name: exclude_subledger
          in: query
          description: exclude_subledger
          required: false
          type: boolean
          default: false
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          default: 'null'
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/goal_overview':
    get:
      tags:
        - Client
      summary: 'Retrieve client''s goal details '
      description: Retrieve client's goal details
      operationId: getClientGoalOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VClientGoalViewData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/holding':
    get:
      tags:
        - Client
      summary: List all client holdings
      description: Get the information for all the securities that are currently being held by a client registered with your firm.
      operationId: getClientHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingAgg»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/order_bulk':
    post:
      tags:
        - Order
      summary: Bulk orders for a client
      description: Aggregates all orders on a given date for a client
      operationId: createClientOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: client_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client/{client_id}/transaction':
    get:
      tags:
        - Client
      summary: List all client transactions
      description: Get the information for all transactions under a client registered with your firm.
      operationId: getClientTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/client_response:
    get:
      tags:
        - Client
      summary: List all client responses
      description: Get all the client responses for questions as part of a questionnaire defined by your firm.
      operationId: getClientResponseAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientResponse»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create a client response
      description: Create a new client response for a question as part of a questionnaires.
      operationId: createClientResponseUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientResponse
          description: clientResponse
          required: true
          schema:
            $ref: '#/definitions/ClientResponse'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client_response/{client_response_id}':
    get:
      tags:
        - Client
      summary: Retrieve a client response
      description: Retrieve the information for a client response for a client.
      operationId: getClientResponseUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update a client response
      description: Update a client response for a client.
      operationId: updateClientResponseUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client_response
          description: client_response
          required: true
          schema:
            type: object
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a client response
      description: Permanently delete a client response for a client.
      operationId: deleteClientResponseUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/client_status:
    get:
      tags:
        - Client
      summary: List all client statuses
      description: Get the client status history information for all clients.
      operationId: getClientStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create an client status
      description: Create an client status record for an client.
      operationId: createClientStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientStatusRequest
          description: clientStatusRequest
          required: true
          schema:
            $ref: '#/definitions/ClientStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/client_status/{client_status_id}':
    get:
      tags:
        - Client
      summary: Retrieve an client status
      description: Retrieve the information for a specific client status record for an client.
      operationId: getClientStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update an client status
      description: Update an client status record for an client.
      operationId: updateClientStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client_status
          description: client_status
          required: true
          schema:
            type: object
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete an client status
      description: Permanently delete an client status record from an client’s history.
      operationId: deleteClientStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/decision_tree:
    get:
      tags:
        - DecisionTree
      summary: List all decision tree
      description: Get the information for all decision trees defined for your firm.
      operationId: getDecisionTreeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«DecisionTree»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a decision tree
      description: Create a new decision tree for your firm.
      operationId: createDecisionTreeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decisionTree
          description: decisionTree
          required: true
          schema:
            $ref: '#/definitions/DecisionTree'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/decision_tree/{decision_tree_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a decision tree
      description: Retrieve the information for a decision tree.
      operationId: getDecisionTreeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a decision tree
      description: Updated the information for a decision tree.
      operationId: updateDecisionTreeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decision_tree
          description: decision_tree
          required: true
          schema:
            type: object
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a decision tree
      description: Permanently delete a decision tree.
      operationId: deleteDecisionTreeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/decision_tree_result:
    post:
      tags:
        - DecisionTree
      summary: Decision tree result
      description: 'Decision tree result. '
      operationId: createDecisionTreeResultUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decisionTreeCO
          description: decisionTreeCO
          required: true
          schema:
            $ref: '#/definitions/DecisionTreeCO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTreeResultVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/document:
    get:
      tags:
        - Document
      summary: List all Documents
      description: 'Get the information for all Documents '
      operationId: getDocumentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Document»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Document
      summary: Create a Document
      description: Create a new Document for your firm.
      operationId: createDocumentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: documentRequest
          description: documentRequest
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/document/{document_id}':
    get:
      tags:
        - Document
      summary: Retrieve a Tenant Document by Document Id
      description: Retrieve the information for a Tenant Document by Document Id
      operationId: getDocumentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Document
      summary: Update a Tenant Document
      description: Updated the information for a Tenant Documents
      operationId: updateDocumentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: document
          description: document
          required: true
          schema:
            type: object
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Document
      summary: Delete a tenant document by Id
      description: Permanently delete a tenant document by Id
      operationId: deleteDocumentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/feature:
    get:
      tags:
        - Utils
      summary: List all Feature
      description: Get details for all features.
      operationId: getFeatureAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Feature»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a  Feature
      description: Create a new feature.
      operationId: createFeatureUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature
          description: feature
          required: true
          schema:
            $ref: '#/definitions/Feature'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/feature/{feature_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a Feature
      description: Retrieve the information for a Feature.
      operationId: getFeatureUsingGet
      produces:
        - '*/*'
      parameters:
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a Feature
      description: Update the information for a Feature registered with your firm.
      operationId: updateFeatureUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature
          description: feature
          required: true
          schema:
            type: object
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a Feature
      description: Permanently delete a  feature registered with your firm.
      operationId: deleteFeatureUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/feature_track:
    get:
      tags:
        - Utils
      summary: List all Feature track
      description: Get details for all feature track.
      operationId: getFeatureTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«FeatureTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a Feature Track
      description: Create a new feature track.
      operationId: createFeatureTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: featureTrack
          description: featureTrack
          required: true
          schema:
            $ref: '#/definitions/FeatureTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/feature_track/{feature_track_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a Feature track
      description: Retrieve the information for a Feature track.
      operationId: getFeatureTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a Feature Track
      description: Update the information for a Feature track registered with your firm.
      operationId: updateFeatureTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature_track
          description: feature_track
          required: true
          schema:
            type: object
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a Feature Track
      description: Permanently delete a feature track registered with your firm.
      operationId: deleteFeatureTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/funding:
    get:
      tags:
        - Funding
      summary: 'List all funding requests '
      description: Get the information for all funding requests defined for your firm.
      operationId: getFundingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Funding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a funding request
      description: 'Create a new funding request for an account. '
      operationId: createFundingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fundingRequest
          description: fundingRequest
          required: true
          schema:
            $ref: '#/definitions/Funding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/funding/{funding_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a funding request
      description: Retrieve the information for a funding request for an account.
      operationId: getFundingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: 708689ce-b0fd-4062-9954-6c8dd82707cf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a funding request
      description: Update the information for a funding request for an account.
      operationId: updateFundingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: funding
          description: funding
          required: true
          schema:
            type: object
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a funding request
      description: Permanently delete a funding request defined for an account.
      operationId: deleteFundingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: 708689ce-b0fd-4062-9954-6c8dd82707cf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/funding_transaction:
    get:
      tags:
        - Funding
      summary: List all funding transaction requests
      description: Get the information for all funding transaction requests for all clients.
      operationId: getFundingTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«FundingTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a funding transaction request
      description: Create a new funding transaction request for an account.
      operationId: createFundingTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fundingTransactionRequest
          description: fundingTransactionRequest
          required: true
          schema:
            $ref: '#/definitions/FundingTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/funding_transaction/{funding_transaction_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a funding transaction request
      description: Retrieve the information for a funding transaction request for an account.
      operationId: getFundingTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: funding_transaction_id
          in: path
          description: UUID funding_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a funding transaction request
      description: Update the information for a funding transaction request for an account.
      operationId: updateFundingTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fundingTransaction
          description: fundingTransaction
          required: true
          schema:
            type: object
        - name: funding_transaction_id
          in: path
          description: UUID funding_transaction_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a funding transaction request
      description: Permanently delete a funding transaction request for an account.
      operationId: deleteFundingTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: funding_transaction_id
          in: path
          description: UUID funding_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/goal:
    get:
      tags:
        - Goal
      summary: List all goals
      description: Get the details for all goals defined by your firm.
      operationId: getGoalAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Goal»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Goal
      summary: Create a goal
      description: Create a new goal for your firm that clients can customize for themselves.
      operationId: createGoalUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goalRequest
          description: goalRequest
          required: true
          schema:
            $ref: '#/definitions/Goal'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/goal/{goal_id}':
    get:
      tags:
        - Goal
      summary: Retrieve a goal
      description: Retrieve the information for a goal defined for your firm.
      operationId: getGoalUsingGet
      produces:
        - '*/*'
      parameters:
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Goal
      summary: Update a goal
      description: Update a goal defined for your firm.
      operationId: updateGoalUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goal
          description: goal
          required: true
          schema:
            type: object
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Goal
      summary: Delete a goal
      description: Permanently delete a goal for your firm.
      operationId: deleteGoalUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/goal/{goal_id}/asset_size':
    get:
      tags:
        - Goal
      summary: List goal asset sizes
      description: Get a list of asset sizes per date for a goal for a specified client.
      operationId: getGoalAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: get_latest
          in: query
          description: get_latest
          required: false
          type: boolean
          default: false
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: sort_type
          in: query
          description: sort_type
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/goal/{goal_id}/holding':
    get:
      tags:
        - Goal
      summary: List goal holdings
      description: Get the information for all the securities that are currently being held in portfolios associated with a particular goal.
      operationId: getGoalHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingAgg»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/goal/{goal_id}/transaction':
    get:
      tags:
        - Goal
      summary: List goal transactions
      description: Get the information for all transactions under portfolios associated with a particular goal.
      operationId: getGoalTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: currency_conversion
          in: query
          description: Currency Code
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/goal_track:
    get:
      tags:
        - Goal
      summary: List all goal track records
      description: Get information for all goal track records stored for your firm.
      operationId: getGoalTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: end_date
          in: query
          description: 'end date '
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: 'start date '
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«GoalTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Goal
      summary: Create a goal track record
      description: Create a goal track record for a goal under a client.
      operationId: createGoalTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goalTrack
          description: goalTrack
          required: true
          schema:
            $ref: '#/definitions/GoalTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/goal_track/{goal_track_id}':
    get:
      tags:
        - Goal
      summary: Retrieve a goal track record
      description: Retrieve the information for a specific goal track record for a goal under a client.
      operationId: getGoalTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: goal_track_id
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: 4e1c4f70-8611-44fa-bac5-f9f390c16852
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Goal
      summary: Update a goal track record
      description: Update the information for a goal track record.
      operationId: updateGoalTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goal_track
          description: goal_track
          required: true
          schema:
            type: object
        - name: goal_track_id
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Goal
      summary: Delete a goal track record
      description: Permanently delete an goal track record for a goal under a client.
      operationId: deleteGoalTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: goal_track_id
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: 4e1c4f70-8611-44fa-bac5-f9f390c16852
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/household:
    get:
      tags:
        - Household
      summary: List all household
      description: Get details for all Household.
      operationId: getHouseholdAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Household»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Household
      summary: Create a Household
      description: 'Create a new household, with your firm.'
      operationId: createHouseholdUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: household
          description: household
          required: true
          schema:
            $ref: '#/definitions/Household'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Household'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/household/{household_id}':
    get:
      tags:
        - Household
      summary: Retrieve a Household
      description: Retrieve the information for a Household.
      operationId: getHouseholdUsingGet
      produces:
        - '*/*'
      parameters:
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Household'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Household
      summary: Update a Household
      description: Update the information for a Household.
      operationId: updateHouseholdUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: household
          description: household
          required: true
          schema:
            type: object
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Household'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Household
      summary: Delete a Household
      description: Permanently delete a household
      operationId: deleteHouseholdUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/household/{household_id}/asset_size':
    get:
      tags:
        - Household
      summary: List all household client asset sizes
      description: Get a list of asset sizes per date for a client's household.
      operationId: getHouseholdClientAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          default: 'null'
          format: date
        - name: exclude_subledger
          in: query
          description: true or false
          required: false
          type: boolean
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          default: 'null'
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/household/{household_id}/holding':
    get:
      tags:
        - Household
      summary: List all household's clientIds holdings
      description: Get the information for all the securities that are currently being held by a household's client ids registered with your firm.
      operationId: getHouseholdClientHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingAgg»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/household/{household_id}/transaction':
    get:
      tags:
        - Household
      summary: List all household's client ids transactions
      description: Get the information for all transactions under a household client ids registered with your firm.
      operationId: getHouseholdClientTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: household_id
          in: path
          description: UUID household_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/model:
    get:
      tags:
        - Model
      summary: List all models
      description: Get details for all models defined for your firm to which portfolios can subscribe.
      operationId: getModelAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Model»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model
      description: Create a new model for your firm to which a portfolios can later subscribe.
      operationId: createModelUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelInfoRequest
          description: modelInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Model'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model/{model_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model
      description: Get the information for a model for your firm.
      operationId: getModelUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model
      description: Update a model for your firm.
      operationId: updateModelUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model
          description: model
          required: true
          schema:
            type: object
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model
      description: Permanently delete a model for your firm.
      operationId: deleteModelUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model/{model_id}/model_change':
    post:
      tags:
        - Model
      summary: Change a model composition
      description: Model composition changes represent a change in a model’s holdings.
      operationId: createModelChangeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeRequest
          description: changeRequest
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/model_asset_size:
    get:
      tags:
        - Model
      summary: List all model asset sizes
      description: Get a list of asset sizes per date for all models defined for your firm.
      operationId: getModelAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelAssetSize»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model asset size
      description: Create a new asset size record for a model.
      operationId: createModelAssetSizeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/ModelAssetSize'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model_asset_size/{model_asset_size_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model asset size
      description: Retrieve the information for a model asset size record for a model.
      operationId: getModelAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model asset size
      description: Update a model asset size record for a model.
      operationId: updateModelAssetSizeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_asset_size
          description: model_asset_size
          required: true
          schema:
            type: object
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model asset size
      description: 'Permanently delete a model asset size record for a model. '
      operationId: deleteModelAssetSizeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/model_comment:
    get:
      tags:
        - Model
      summary: List all model commentaries
      description: List all comments for all models defined by your firm.
      operationId: getModelCommentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelComment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model commentary
      description: Create a new comment for a model available for your firm.
      operationId: createModelCommentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelCommentRequest
          description: modelCommentRequest
          required: true
          schema:
            $ref: '#/definitions/ModelComment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model_comment/{model_comment_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model commentary
      description: Retrieve the information for a model comment for a model.
      operationId: getModelCommentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: 8d97c85c-8cbf-4ac1-a5df-f9d2bb6a77e0
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelComment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model commentary
      description: Update a model comment for a model.
      operationId: updateModelCommentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_comment
          description: model_comment
          required: true
          schema:
            type: object
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model commentary
      description: Permanently delete a model comment for a model
      operationId: deleteModelCommentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: 8d97c85c-8cbf-4ac1-a5df-f9d2bb6a77e0
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/model_holding:
    get:
      tags:
        - Model
      summary: List all model holdings
      description: Get all model holding records for all models defined for your firm.
      operationId: getModelHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelHolding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model holding
      description: Create a new model holding record for a specific model and date.
      operationId: createModelHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelHoldingRequest
          description: modelHoldingRequest
          required: true
          schema:
            $ref: '#/definitions/ModelHolding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model_holding/{model_holding_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model holding
      description: Retrieve the information for a model holding record for a model.
      operationId: getModelHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model holding
      description: Update a model holding record for a model.
      operationId: updateModelHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_holding
          description: model_holding
          required: true
          schema:
            type: object
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model holding
      description: Permanently delete a model holding record for a model.
      operationId: deleteModelHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/model_transaction:
    get:
      tags:
        - Model
      summary: List all model transactions
      description: 'Get details for all transaction records for all models defined by your firm. '
      operationId: getModelTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model transaction
      description: Create a new transaction record for a security under a model for a specific date.
      operationId: createModelTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelTransactionRequest
          description: modelTransactionRequest
          required: true
          schema:
            $ref: '#/definitions/ModelTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/model_transaction/{model_transaction_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model transaction
      description: Retrieve the information for a model transaction for a model.
      operationId: getModelTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: e7cf805b-4307-41e9-8b58-90b6359fa900
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model transaction
      description: Update a model transaction for a model.
      operationId: updateModelTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_transaction
          description: model_transaction
          required: true
          schema:
            type: object
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model transaction
      description: Permanently delete a model transaction for a model.
      operationId: deleteModelTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: e7cf805b-4307-41e9-8b58-90b6359fa900
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/node:
    get:
      tags:
        - DecisionTree
      summary: List all nodes
      description: List all nodes that are defined for your firm.
      operationId: getNodeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Node»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a node
      description: Create a new node for your firm that can be used in a decision tree and mapped to other nodes.
      operationId: createNodeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: node
          description: node
          required: true
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/node/{node_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a node
      description: Retrieve the information for a node.
      operationId: getNodeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 05b9f2e6-aabc-44b5-8e02-f1ab216ebd62
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a node
      description: Updated the information for a node.
      operationId: updateNodeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: jsonNode
          description: jsonNode
          required: true
          schema:
            type: object
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a node
      description: Permanently delete a node.
      operationId: deleteNodeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 05b9f2e6-aabc-44b5-8e02-f1ab216ebd62
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/node_relationship:
    get:
      tags:
        - DecisionTree
      summary: List all node relationships
      description: Get the information for all the node relationships defined for your firm.
      operationId: getNodeRelationshipAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NodeRelationship»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a node relationship
      description: Create a new node relationship for your firm.
      operationId: createNodeRelationshipUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: node
          description: node
          required: true
          schema:
            $ref: '#/definitions/NodeRelationship'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/node_relationship/{node_relationship_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a node relationship
      description: Retrieve the information for a node relationship.
      operationId: getNodeRelationshipUsingGet
      produces:
        - '*/*'
      parameters:
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a node relationship
      description: Update the information for a node relationship.
      operationId: updateNodeRelationshipUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: jsonNode
          description: jsonNode
          required: true
          schema:
            type: object
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a node relationship
      description: Permanently delete a node relationship.
      operationId: deleteNodeRelationshipUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/notification:
    get:
      tags:
        - Utils
      summary: Get All Notifications
      description: 'Get All Notification. '
      operationId: getNotificationAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Notification»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a Notification
      description: 'Create a new Notification. '
      operationId: createNotificationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification
          description: notification
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/notification/{notification_id}':
    get:
      tags:
        - Utils
      summary: Get a Notification
      description: 'Get a Notification. '
      operationId: getNotificationUsingGet
      produces:
        - application/json
      parameters:
        - name: notification_id
          in: path
          description: notification_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a Notification
      description: 'Update a Notification. '
      operationId: updateNotificationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification
          description: notification
          required: true
          schema:
            type: object
        - name: notification_id
          in: path
          description: UUID notification_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a Notification
      description: 'Permanently Delete a Notification. '
      operationId: deleteNotificationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_id
          in: path
          description: UUID notification_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/notification_client:
    get:
      tags:
        - Utils
      summary: List all Notification Client
      description: 'List all Notification Client. '
      operationId: getNotificationClientAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NotificationClient»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a Notification Client
      description: 'Create a new Notification Client. '
      operationId: createNotificationClientUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notificationClient
          description: notificationClient
          required: true
          schema:
            $ref: '#/definitions/NotificationClient'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/notification_client/{notification_client_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a Notification Client
      description: 'Retrieve a  Notification Client. '
      operationId: getNotificationClientUsingGet
      produces:
        - '*/*'
      parameters:
        - name: notification_client_id
          in: path
          description: notification_client_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a Notification Client
      description: 'Update a  Notification Client. '
      operationId: updateNotificationClientUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification_client
          description: notification_client
          required: true
          schema:
            type: object
        - name: notification_client_id
          in: path
          description: UUID notification_client_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a Notification Client
      description: Permanently Delete Notification Client.
      operationId: deleteNotificationClientUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_client_id
          in: path
          description: notification_client_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/notification_setting:
    get:
      tags:
        - Utils
      summary: List all Notification Setting
      description: 'List all Notification Setting. '
      operationId: getNotificationSettingAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NotificationSetting»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a Notification Setting
      description: 'Create a new Notification Setting. '
      operationId: createNotificationSettingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notificationSetting
          description: notificationSetting
          required: true
          schema:
            $ref: '#/definitions/NotificationSetting'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/notification_setting/{notification_setting_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a Notification Setting
      description: 'Retrieve a  Notification Setting. '
      operationId: getNotificationSettingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: notification_setting_id
          in: path
          description: notification_setting_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a Notification Setting
      description: 'Update a  Notification Setting. '
      operationId: updateNotificationSettingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification_setting
          description: notification_setting
          required: true
          schema:
            type: object
        - name: notification_setting_id
          in: path
          description: UUID notification_setting_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a Notification Setting
      description: 'Permanently Delete Notification Setting. '
      operationId: deleteNotificationSettingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_setting_id
          in: path
          description: notification_setting_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/order:
    get:
      tags:
        - Order
      summary: List all order records
      description: Get the information for all order records defined for your firm.
      operationId: getOrderAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Order»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order record
      description: Create an order record defined for your firm.
      operationId: createOrderUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderInfoRequest
          description: orderInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/order/{order_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order record
      description: Retrieve the information for an order record.
      operationId: getOrderUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: 67190064-0731-4b29-b2a7-4a35eb8e7afe
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order record
      description: Update the information for an order record.
      operationId: updateOrderUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order
          description: order
          required: true
          schema:
            type: object
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order record
      description: Permanently delete an order record.
      operationId: deleteOrderUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: 67190064-0731-4b29-b2a7-4a35eb8e7afe
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/order_bulk:
    get:
      tags:
        - Order
      summary: List all bulk orders
      description: Get the information for all bulk order records.
      operationId: getOrderBulkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: true
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: order_bulk_id
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OrderBulk»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Bulk orders for your firm
      description: Aggregates all orders on a given date for your firm.
      operationId: createOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/order_status:
    get:
      tags:
        - Order
      summary: List all order statuses
      description: Get the information for all order statuses defined for your firm.
      operationId: getOrderStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OrderStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order status
      description: Create an order status for your firm.
      operationId: createOrderStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderStatusRequest
          description: orderStatusRequest
          required: true
          schema:
            $ref: '#/definitions/OrderStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/order_status/{order_status_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order status
      description: Retrieve the information for an order status defined for your firm.
      operationId: getOrderStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: 9b515c67-3791-400f-9da4-9dc69eb992ac
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order status
      description: Update the information for an order status defined for your firm.
      operationId: updateOrderStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order_status
          description: order_status
          required: true
          schema:
            type: object
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order status
      description: Permanently delete an order status defined for your firm.
      operationId: deleteOrderStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: 9b515c67-3791-400f-9da4-9dc69eb992ac
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/order_track:
    get:
      tags:
        - Order
      summary: List all order tracking records
      description: Get the information for all order tracking record for all order records.
      operationId: getOrderTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OrderTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order tracking record
      description: Create a new order tracking record for an order.
      operationId: createOrderTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderTrackRequest
          description: orderTrackRequest
          required: true
          schema:
            $ref: '#/definitions/OrderTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/order_track/{order_track_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order tracking record
      description: Retrieve the information for an order tracking record for an order.
      operationId: getOrderTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: ef93ce1c-b50e-4856-803a-db5332be93b0
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order tracking record
      description: Update the information for an order tracking record for an order.
      operationId: updateOrderTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order_track
          description: order_track
          required: true
          schema:
            type: object
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order tracking record
      description: Permanently delete an order tracking record for an order.
      operationId: deleteOrderTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: ef93ce1c-b50e-4856-803a-db5332be93b0
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio:
    get:
      tags:
        - Portfolio
      summary: List all portfolios
      description: 'Get the information for all portfolios assigned to all of your firm’s accounts. '
      operationId: getPortfolioAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Portfolio»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio
      description: Create a new portfolio for an account.
      operationId: createPortfolioUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioRequest
          description: portfolioRequest
          required: true
          schema:
            $ref: '#/definitions/Portfolio'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio
      description: Retrieve a portfolio for an account.
      operationId: getPortfolioUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio
      description: Update a portfolio for an account.
      operationId: updatePortfolioUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio
          description: portfolio
          required: true
          schema:
            type: object
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio
      description: Permanently delete a portfolio for an account.
      operationId: deletePortfolioUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/aggregate_data':
    get:
      tags:
        - Portfolio
      summary: Retrieve an portfolio aggregate data
      description: Retrieve the information for a securities associated with a portfolio.
      operationId: getPortfolioAggregatedDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: Portfolio Id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: show_asset_class
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_category
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_industry
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_sector
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_security_class
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/order_buy_only':
    post:
      tags:
        - Order
      summary: Create buy-only portfolio rebalance orders
      description: 'Create order records necessary to rebalance a portfolio to the model to which it subscribes. However, these will only be buy transactions, and no securities will be sold.'
      operationId: createPortfolioOrderBuyOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/order_rebalance':
    post:
      tags:
        - Order
      summary: Create portfolio rebalance orders
      description: Create order records necessary to rebalance a portfolio to the model to which it subscribes.
      operationId: createPortfolioOrderRebalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/order_reconciliation':
    post:
      tags:
        - Order
      summary: Create portfolio reconciliation order
      operationId: createPortfolioOrderReconciliation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderReconcileReturnObject'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/order_sell_all':
    post:
      tags:
        - Order
      summary: Sell all portfolio order
      description: Create order records necessary to entirely sell all the holdings within a portfolio.
      operationId: createPortfolioOrderSellAllUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio/{portfolio_id}/order_sell_only':
    post:
      tags:
        - Order
      summary: Create sell-only portfolio rebalance orders
      description: Create order records necessary to rebalance a portfolio to the model to which it subscribes.
      operationId: createPortfolioOrderSellOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_asset_size:
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio asset size
      description: 'Retrieve the information for a portfolio asset size record for a portfolio. '
      operationId: getPortfolioAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioAssetSizeLog»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio asset size
      description: Create a new asset size record for a portfolio.
      operationId: createPortfolioAssetSizeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioAssetSizeLogRequest
          description: portfolioAssetSizeLogRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio_asset_size/{portfolio_asset_size_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio asset size
      description: Retrieve the information for a portfolio asset size record for a portfolio.
      operationId: getPortfolioAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: portfolio_asset_size_id
          in: path
          description: portfolio_asset_size_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio asset size
      description: Update the information for a portfolio asset size record for a portfolio.
      operationId: updatePortfolioAssetSizeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_asset_size
          description: portfolio_asset_size
          required: true
          schema:
            type: object
        - name: portfolio_asset_size_id
          in: path
          description: UUID portfolio_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio asset size
      description: Permanently delete a portfolio asset size record for a portfolio.
      operationId: deletePortfolioAssetSizeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_asset_size_id
          in: path
          description: UUID portfolio_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: 01b252d3-1412-477f-8d29-6e2ff6e54c81
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_comment:
    get:
      tags:
        - Portfolio
      summary: List all portfolio commentary
      description: List all comments for all portfolios defined for your firm.
      operationId: getPortfolioCommentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioComment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio commentary
      description: Create a new comment for a portfolio defined for your firm.
      operationId: createPortfolioCommentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioComment
          description: portfolioComment
          required: true
          schema:
            $ref: '#/definitions/PortfolioComment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio_comment/{portfolio_comment_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio commentary
      description: Retrieve the information for a portfolio comment for a portfolio.
      operationId: getPortfolioCommentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio comment
      description: Update the information for a portfolio comment for a portfolio.
      operationId: updatePortfolioCommentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_comment
          description: portfolio_comment
          required: true
          schema:
            type: object
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio commentary
      description: Permanently delete a portfolio comment for a portfolio.
      operationId: deletePortfolioCommentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_goal:
    get:
      tags:
        - Portfolio
      summary: List all portfolio goals
      description: Get information for all portfolio-goal mappings defined for your firm.
      operationId: getPortfolioGoalAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioGoal»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create an portfolio goal
      description: Create an portfolio goal.
      operationId: createPortfolioGoalUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioGoal
          description: portfolioGoal
          required: true
          schema:
            $ref: '#/definitions/PortfolioGoal'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio_goal/{portfolio_goal_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve an portfolio goal
      description: Retrieve the information for a specific portfolio-goal mapping.
      operationId: getPortfolioGoalUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update an portfolio goal
      description: Update the information for an portfolio-goal mapping.
      operationId: updatePortfolioGoalUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_goal
          description: portfolio_goal
          required: true
          schema:
            type: object
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete an portfolio goal
      description: Permanently delete an portfolio-goal mapping.
      operationId: deletePortfolioGoalUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_holding:
    get:
      tags:
        - Portfolio
      summary: List all portfolio holdings
      description: Get the information for all holding records for all portfolios defined for your firm.
      operationId: getPortfolioHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioHoldingLog»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio holding
      description: Create a new holding record for a portfolio.
      operationId: createPortfolioHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioHoldinLogRequest
          description: portfolioHoldinLogRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio_holding/{portfolio_holding_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio holding
      description: Retrieve the information for a portfolio holding record for a portfolio.
      operationId: getPortfolioHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio holding
      description: Update the information for a portfolio holding record for a portfolio.
      operationId: updatePortfolioHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_holding
          description: portfolio_holding
          required: true
          schema:
            type: object
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio holding
      description: Permanently delete a portfolio holding record for a portfolio.
      operationId: deletePortfolioHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_transaction:
    get:
      tags:
        - Portfolio
      summary: List all portfolio transactions
      description: Get the information for all transaction records for all portfolios defined for your firm.
      operationId: getPortfolioTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio transaction
      description: Create a new transaction record for a portfolio.
      operationId: createPortfolioTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioTransactionRequest
          description: portfolioTransactionRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/portfolio_transaction/{portfolio_transaction_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio transaction
      description: 'Retrieve the information for a portfolio transaction record for a portfolio. '
      operationId: getPortfolioTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio transaction
      description: Update the information for a portfolio transaction record for a portfolio.
      operationId: updatePortfolioTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_transaction
          description: portfolio_transaction
          required: true
          schema:
            type: object
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio transaction
      description: Permanently delete a portfolio transaction record for a portfolio.
      operationId: deletePortfolioTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/portfolio_transaction_by_post:
    post:
      tags:
        - Portfolio
      summary: getAllPortfolioTransactionByPost
      operationId: getAllPortfolioTransactionByPostUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/question:
    get:
      tags:
        - Questionnaire
      summary: List all Questions
      description: Get information for all Questions
      operationId: getQuestionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: order_index
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Question»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create a question
      description: Create a new question for questionnaire.
      operationId: createQuestionUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: question
          description: question
          required: true
          schema:
            $ref: '#/definitions/Question'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/question/{question_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve a question
      description: Retrieve the information for a question for questionnaire
      operationId: getQuestionUsingGet
      produces:
        - application/json
      parameters:
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update a question.
      description: Update a question for questionnaire.
      operationId: updateQuestionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: question
          description: question
          required: true
          schema:
            type: object
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete a question
      description: Delete an answer for the question
      operationId: deleteQuestionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/questionnaire:
    get:
      tags:
        - Questionnaire
      summary: List all questionnaires
      description: Get the information for all questionnaires defined for your firm.
      operationId: getQuestionnaireAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Questionnaire»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create a questionnaire
      description: Create a new questionnaire for your firm.
      operationId: createQuestionnaireUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: questionnaire
          description: questionnaire
          required: true
          schema:
            $ref: '#/definitions/Questionnaire'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/questionnaire/{questionnaire_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve a questionnaire
      description: Retrieve the information for a questionnaire for your firm.
      operationId: getQuestionnaireUsingGet
      produces:
        - '*/*'
      parameters:
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update a questionnaire
      description: Update a questionnaire for your firm.
      operationId: updateQuestionnaireUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: questionnaire
          description: questionnaire
          required: true
          schema:
            type: object
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete a questionnaire
      description: Permanently delete a questionnaire for your firm.
      operationId: deleteQuestionnaireUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/reason_code:
    get:
      tags:
        - Utils
      summary: List all reason codes
      description: Get the information for all reason codes defined by your firm.
      operationId: getReasonCodeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ReasonCode»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a reason code
      description: Create a new reason code for your firm.
      operationId: createReasonCodeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reasonCodeRequest
          description: reasonCodeRequest
          required: true
          schema:
            $ref: '#/definitions/ReasonCode'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReasonCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/reason_code/{reason_code_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a reason code
      description: Retrieve the information for a reason code defined by your firm.
      operationId: getReasonCodeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: reason_code_id
          in: path
          description: UUID reason_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReasonCode'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a reason code
      description: Update a reason code for your firm.
      operationId: updateReasonCodeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reason_code
          description: reason_code
          required: true
          schema:
            type: object
        - name: reason_code_id
          in: path
          description: UUID reason_code_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReasonCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a reason code
      description: Permanently delete a reason code for your firm.
      operationId: deleteReasonCodeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: reason_code_id
          in: path
          description: UUID reason_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/account_category:
    get:
      tags:
        - Resource
      summary: Get all account category mapping
      description: Get all account category mapping
      operationId: getAccountResultForMapping
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: hydrogen_account_category_id
          in: query
          description: hydrogen_account_category_id
          required: false
          type: string
          format: uuid
        - name: match_primary
          in: query
          description: match_primary
          required: false
          type: boolean
          default: false
        - name: tenant_name
          in: query
          description: tenant_name
          required: false
          type: string
        - name: vendor_name
          in: query
          description: vendor_name
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/country:
    get:
      tags:
        - Resource
      summary: Get All Countries
      description: 'Get All Countries. '
      operationId: getAllCountryUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/currency:
    get:
      tags:
        - Resource
      summary: Get All Currencies
      description: 'Get All Currencies. '
      operationId: getAllCurrencyUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/fx_rate:
    get:
      tags:
        - Resource
      summary: List all fxRates
      description: Get information for all fxRates defined for your firm.
      operationId: getCurrencyExchangeRateAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: filter
          in: query
          description: filter
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FxRateView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Resource
      summary: Create a bulk fxRate
      description: Create a bulk fxRate.
      operationId: createFxRateBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fxRateList
          description: fxRateList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/FxRate'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FxRate'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/institution:
    get:
      tags:
        - Resource
      summary: List all institutions
      description: List all institution.
      operationId: getInstitutionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Institution»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Resource
      summary: Create a institution
      description: Create a new institution.
      operationId: createInstitutionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: institution
          description: institution
          required: true
          schema:
            $ref: '#/definitions/Institution'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Institution'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/resource/institution/{institution_id}':
    get:
      tags:
        - Resource
      summary: Retrieve a institution
      description: 'Retrieve a institution. '
      operationId: getInstitutionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: institution_id
          in: path
          description: UUID institution_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Institution'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Resource
      summary: Update a institution
      description: Update a institution.
      operationId: updateInstitutionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: institution
          description: institution
          required: true
          schema:
            type: object
        - name: institution_id
          in: path
          description: UUID institution_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Institution'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Resource
      summary: Delete a institution
      description: 'Delete a institution. '
      operationId: deleteInstitutionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: institution_id
          in: path
          description: UUID institution_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/merchant:
    get:
      tags:
        - Resource
      summary: Get all merchants
      description: List all merchants.
      operationId: getMerchantsAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: id
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MXMerchantRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/merchant_category_code:
    get:
      tags:
        - Resource
      summary: Get All Merchant Category Codes
      description: Get All Merchant Category Codes.
      operationId: getAllMerchantCategoryCodeUsingGet
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: filter
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MerchantCategoryCode'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/state:
    get:
      tags:
        - Resource
      summary: List all state resource
      description: Get the information for all possible state resource.
      operationId: getAllStatesUsingGet
      produces:
        - application/json
      parameters:
        - name: country_code
          in: query
          description: country_code
          required: false
          type: string
          default: US
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/State'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/statistic:
    get:
      tags:
        - Resource
      summary: List all statistic resource
      description: Get the information for all possible statistic resource.
      operationId: getAllStatisticsUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/definitions/StatisticResourceVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/resource/transaction_category:
    get:
      tags:
        - Resource
      summary: Get all transaction category mapping
      description: Get all transaction category mapping
      operationId: getTransactionResultForMapping
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: hydrogen_transaction_category_id
          in: query
          description: hydrogen_transaction_category_id
          required: false
          type: string
          format: uuid
        - name: match_primary
          in: query
          description: match_primary
          required: false
          type: boolean
          default: false
        - name: tenant_name
          in: query
          description: tenant_name
          required: false
          type: string
        - name: vendor_name
          in: query
          description: vendor_name
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/risk_profile:
    get:
      tags:
        - RiskProfile
      summary: Get All Risk Profile
      description: 'Get All Risk Profile. '
      operationId: getRiskProfileAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«RiskProfile»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - RiskProfile
      summary: Create a Risk Profile
      description: 'Create a new Risk Profile. '
      operationId: createRiskProfileUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: riskProfile
          description: riskProfile
          required: true
          schema:
            $ref: '#/definitions/RiskProfile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/risk_profile/{risk_profile_id}':
    get:
      tags:
        - RiskProfile
      summary: Get a Risk Profile
      description: 'Get a Risk Profile. '
      operationId: getRiskProfileUsingGet
      produces:
        - application/json
      parameters:
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - RiskProfile
      summary: Update a Risk Profile
      description: 'Update a Risk Profile. '
      operationId: updateRiskProfileUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: risk_profile
          description: risk_profile
          required: true
          schema:
            type: object
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - RiskProfile
      summary: Delete a Risk Profile
      description: Permanently Delete a Risk Profile.
      operationId: deleteRiskProfileUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/score:
    get:
      tags:
        - Score
      summary: List all scores
      description: Get information for all scores stored for your firm.
      operationId: getScoreAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Score»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Score
      summary: Create a score
      description: 'Create a score for a client, account, goal, portfolio, allocation, model, benchmark or security.'
      operationId: createScoreUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: score
          description: score
          required: true
          schema:
            $ref: '#/definitions/Score'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/score/{score_id}':
    get:
      tags:
        - Score
      summary: Retrieve a score
      description: 'Retrieve the information for a specific score associated with a client, account, goal, portfolio, allocation, model, benchmark or security.'
      operationId: getScoreUsingGet
      produces:
        - '*/*'
      parameters:
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Score
      summary: Update a score
      description: Update the information for a score.
      operationId: updateScoreUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: score
          description: score
          required: true
          schema:
            type: object
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Score
      summary: Delete a score
      description: Permanently delete a score
      operationId: deleteScoreUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/security:
    get:
      tags:
        - Securities
      summary: List all securities
      description: Get details for all securities defined for your firm.
      operationId: getSecurityAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Security»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security
      description: Create a new security for your firm.
      operationId: createSecurityUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securitiesInfoRequest
          description: securitiesInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Security'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/security/{security_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security
      description: Retrieve the information for a security defined for your firm.
      operationId: getSecurityUsingGet
      produces:
        - '*/*'
      parameters:
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security
      description: Update a security for your firm.
      operationId: updateSecurityUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security
          description: security
          required: true
          schema:
            type: object
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security
      description: Permanently delete a security for your firm.
      operationId: deleteSecurityUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/security_exclusion:
    get:
      tags:
        - Securities
      summary: List all security exclusions
      description: Get details for all security exclusions defined for your firm.
      operationId: getSecurityExclusionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SecurityExclusion»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security exclusion
      description: Create a new security exclusion for a specific account or portfolio.
      operationId: createSecurityExclusionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securityExclusionRequest
          description: securityExclusionRequest
          required: true
          schema:
            $ref: '#/definitions/SecurityExclusion'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/security_exclusion/{security_exclusion_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security exclusion
      description: Retrieve the information for a security exclusion.
      operationId: getSecurityExclusionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security exclusion
      description: Update the information for a security exclusion.
      operationId: updateSecurityExclusionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security_exclusion
          description: security_exclusion
          required: true
          schema:
            type: object
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security exclusion
      description: Permanently delete a security exclusion
      operationId: deleteSecurityExclusionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/security_price:
    get:
      tags:
        - Securities
      summary: List all security prices
      description: Get prices for all securities defined for your firm.
      operationId: getSecurityPriceAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SecurityPrice»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security price
      description: Create a new price for a security defined for your firm.
      operationId: createSecurityPriceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securityPriceRequest
          description: securityPriceRequest
          required: true
          schema:
            $ref: '#/definitions/SecurityPrice'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/security_price/{security_price_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security price
      description: Retrieve the information for a security price for a security.
      operationId: getSecurityPriceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security price
      description: Update a security price for a security.
      operationId: updateSecurityPriceUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security_price
          description: security_price
          required: true
          schema:
            type: object
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security price
      description: Permanently delete a security price from a security.
      operationId: deleteSecurityPriceUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/spending_control:
    get:
      tags:
        - SpendingControl
      summary: List all Spending Control
      description: List all Spending Control.
      operationId: getSpendingControlAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SpendingControl»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - SpendingControl
      summary: Create a Spending Control
      description: Create a new Spending Control.
      operationId: createSpendingControlUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: spendingControl
          description: spendingControl
          required: true
          schema:
            $ref: '#/definitions/SpendingControl'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpendingControl'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/spending_control/{spending_control_id}':
    get:
      tags:
        - SpendingControl
      summary: Retrieve a Spending Control
      description: 'Retrieve a Spending Control. '
      operationId: getSpendingControlUsingGet
      produces:
        - '*/*'
      parameters:
        - name: spending_control_id
          in: path
          description: spending_control_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpendingControl'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - SpendingControl
      summary: Update a Spending Control
      description: 'Update a Spending Control. '
      operationId: updateSpendingControlUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: spending_control
          description: spending_control
          required: true
          schema:
            type: object
        - name: spending_control_id
          in: path
          description: UUID spending_control_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpendingControl'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - SpendingControl
      summary: Delete a Spending Control
      description: Permanently Delete Spending Control.
      operationId: deleteSpendingControlUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: spending_control_id
          in: path
          description: spending_control_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/stage:
    get:
      tags:
        - Utils
      summary: List all account stages
      description: Get the information for all possible account stages.
      operationId: getStageAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Stage»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create an account stage
      description: Create a new account stage
      operationId: createStageUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: stageRequest
          description: stageRequest
          required: true
          schema:
            $ref: '#/definitions/Stage'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/stage/{stage_id}':
    get:
      tags:
        - Utils
      summary: Retrieve an account stage
      description: Retrieve the information for a specific account stage.
      operationId: getStageUsingGet
      produces:
        - '*/*'
      parameters:
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update an account stage
      description: Update the information for an account stage.
      operationId: updateStageUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: stage
          description: stage
          required: true
          schema:
            type: object
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete an account stage
      description: Permanently delete an account stage.
      operationId: deleteStageUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/transaction_code:
    get:
      tags:
        - Utils
      summary: List all transaction codes
      description: Get the information for all transaction codes defined by your firm.
      operationId: getTransactionCodeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«TransactionCode»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a transaction code
      description: Create a new transaction code for your firm.
      operationId: createTransactionCodeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transactionRequest
          description: transactionRequest
          required: true
          schema:
            $ref: '#/definitions/TransactionCode'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/transaction_code/{transaction_code_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a transaction code
      description: Retrieve the information for a transaction code defined by your firm.
      operationId: getTransactionCodeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a transaction code
      description: Update a transaction code for your firm.
      operationId: updateTransactionCodeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transaction_code
          description: transaction_code
          required: true
          schema:
            type: object
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a transaction code
      description: Permanently delete a transaction code for your firm.
      operationId: deleteTransactionCodeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/transfer:
    get:
      tags:
        - Funding
      summary: List all transfer requests
      description: Get the information for all external account transfers defined for your firm.
      operationId: getTransferAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: currency_conversion
          in: query
          description: currency_conversion
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ExternalAccountTransfer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a transfer requests
      description: Create a new external account transfer for a client account.
      operationId: createTransferUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: externalAccountTransferRequest
          description: externalAccountTransferRequest
          required: true
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/transfer/{transfer_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a transfer request
      description: Retrieve the information for a external account transfer for an account.
      operationId: getTransferUsingGet
      produces:
        - '*/*'
      parameters:
        - name: currency_conversion
          in: query
          description: USD
          required: false
          type: string
        - name: transfer_id
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a transfer request
      description: 'Update the information for a external account transfer for a client account. '
      operationId: updateTransferUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transfer
          description: transfer
          required: true
          schema:
            type: object
        - name: transfer_id
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a transfer request
      description: Permanently delete a external account transfer from a client account.
      operationId: deleteTransferUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: transfer_id
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /nucleus/v1/webhook:
    get:
      tags:
        - Webhook
      summary: List all webhooks
      description: Get information for all webhooks defined for your firm.
      operationId: getWebhookAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Webhook»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Webhook
      summary: Create a webhook
      description: One active webhook service is allowed at all times.
      operationId: createWebhookUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: webhookRequest
          description: webhookRequest
          required: true
          schema:
            $ref: '#/definitions/Webhook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/nucleus/v1/webhook/{webhook_id}':
    get:
      tags:
        - Webhook
      summary: Retrieve a webhook
      description: Retrieve the information for a specific webhook. The webhook_id must be provided.
      operationId: getWebhookUsingGet
      produces:
        - '*/*'
      parameters:
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Webhook
      summary: Update a webhook
      description: Update a webhook for your firm. The webhook_id must be provided
      operationId: updateWebhookUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: webhook
          description: webhook
          required: true
          schema:
            type: object
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Webhook
      summary: Delete a webhook
      description: Permanently delete a webhook for your firm. The webhook_id must be provided.
      operationId: deleteWebhookUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
securityDefinitions:
  oauth2:
    type: oauth2
    tokenUrl: 'https://api.hydrogenplatform.com/authorization/v1/oauth/token'
    flow: application
definitions:
  Account:
    type: object
    required:
      - account_type_id
      - name
    properties:
      account_number:
        type: string
        example: true
        description: accountNumber
      account_type_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: accountTypeId
      clients:
        type: array
        items:
          $ref: '#/definitions/ClientAccountMapping'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      discretionary:
        type: boolean
        example: true
        description: discretionary
      goals:
        type: array
        items:
          $ref: '#/definitions/GoalAccountMapping'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      managed:
        type: boolean
        example: true
        description: managed
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: Taxable
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: xyz
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Account
    description: Account Object
  AccountAllocationMapping:
    type: object
    required:
      - account_id
      - allocation_id
      - current_weight
      - date
      - strategic_weight
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      allocation_id:
        type: string
        format: uuid
        example: f29d942a-7509-41be-8016-46743be0bcc8
        description: allocationId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      current_weight:
        type: number
        format: double
        example: 0.88
        description: currentWeight
      date:
        type: string
        format: date
        example: '2018-01-09'
        description: date
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      secondary_id:
        type: string
        example: 7289243787238
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AccountAllocationMapping
    description: AccountAllocationMapping Object
  AccountPermissionVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      clients:
        type: array
        description: PermissionVO
        items:
          $ref: '#/definitions/PermissionVO'
    title: AccountPermissionVO
    description: AccountPermissionVO Object
  AccountPortfolioRebalanceRequest:
    type: object
    properties:
      buy_threshold:
        type: number
        format: double
        example: 1
        description: buyThreshold
      buy_transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: buyTransactionCodeId
      cash_portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: cashPortfolioId
      cash_sec_id:
        type: string
        format: uuid
        example: 5276c9a5-5263-4aea-8027-327003738cef
        description: cashSecId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      commit_orders:
        type: boolean
        example: true
        description: commitOrders
      non_fractional:
        type: boolean
        example: true
        description: nonFractional
      port_threshold:
        type: number
        format: double
        example: 1
        description: portThreshold
      restrictions_on:
        type: boolean
        example: true
        description: restrictionsOn
      sell_threshold:
        type: number
        format: double
        example: 1
        description: sellThreshold
      sell_transaction_code_id:
        type: string
        format: uuid
        example: 7d8d41d0-ed4b-4ae2-acb3-e0baed2ff1cc
        description: sellTransactionCodeId
      tenant_id:
        type: string
        format: uuid
        example: 04907eaa-3f33-49be-a35b-378cdf639fba
        description: tenantId
      use_cash_available:
        type: boolean
        example: true
        description: useCashAvailable
      use_strategic:
        type: boolean
        example: false
        description: useStrategic
    title: AccountPortfolioRebalanceRequest
    description: AccountPortfolioRebalanceRequest Object
  AccountStatus:
    type: object
    required:
      - account_id
      - stage_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      comments:
        type: string
        example: invested
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      stage_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: stageId
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AccountStatus
    description: ClientAccountLevelDetail Object
  AccountType:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: taxable
        description: category
      code:
        type: string
        example: J
        description: code
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      is_asset:
        type: boolean
        example: true
        description: isAsset
      is_business:
        type: boolean
        example: false
        description: isBusiness
      is_cash:
        type: boolean
        example: true
        description: isCash
      is_investment:
        type: boolean
        example: false
        description: isInvestment
      is_taxable:
        type: boolean
        example: true
        description: isTaxable
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Joint
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      short_name:
        type: string
        example: J
        description: shortName
      subcategory:
        type: string
        example: taxable
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AccountType
    description: AccountType Object
  AclClientPermissionVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      permission_type:
        type: string
        example: INQUIRY_ACCESS
        description: permissionType
        enum:
          - INQUIRY_ACCESS
          - LIMITED_AUTHORITY
          - FULL_AUTHORITY
          - POWER_OF_ATTORNEY
    title: AclClientPermissionVO
  AggregationAccount:
    type: object
    required:
      - account_name
      - institution_name
    properties:
      account_category_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountCategoryId
      account_holder:
        type: string
        description: accountHolder
      account_name:
        type: string
        example: Bank Gold Checking
        description: accountName
      account_number:
        type: string
      apr:
        type: number
        format: float
        example: 10
        description: apr
      apy:
        type: number
        format: float
        example: 10
        description: apy
      bank_link_id:
        type: string
        format: uuid
        example: 02ec7d90-02fc-46c7-b201-def9b16ef65a
        description: bankLinkId
      business_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: businessId
      category:
        type: string
        example: Bank Account
        description: category
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      credit_limit:
        type: number
        format: float
        example: 10
        description: creditLimit
      currency_code:
        type: string
        example: USD
        description: currencyCode
      death_benefit:
        type: number
        format: float
        example: 10
        description: deathBenefit
      financial_offer_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: financialOfferId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      institution_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: institutionId
      institution_name:
        type: string
        example: Citywide Bank
        description: institutionName
      interest_rate:
        type: number
        format: float
        example: 10
        description: interestRate
      is_active:
        type: boolean
        example: true
        description: isActive
      is_asset:
        type: boolean
      is_business:
        type: boolean
      is_cash:
        type: boolean
      is_investment:
        type: boolean
      is_link_verified:
        type: boolean
        example: true
        description: isLinkVerified
      is_manual:
        type: boolean
        example: false
        description: isManual
      last_payment:
        type: number
        format: float
        example: 10
        description: lastPayment
      last_payment_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: lastPaymentDate
      mask:
        type: string
        description: mask
      maturity_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: maturityDate
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      minimum_payment:
        type: number
        format: float
        example: 10
        description: minimumPayment
      next_payment_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: nextPaymentDate
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: Checking Account
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AggregationAccount
    description: Aggregation Account Object
  AggregationAccountBalance:
    type: object
    required:
      - currency_code
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      available_balance:
        type: number
        format: double
        example: 10000
        description: availableBalance
      available_credit:
        type: number
        format: double
        example: 10000
        description: availableCredit
      balance:
        type: number
        format: double
        example: 9000
        description: balance
      balance_time_stamp:
        type: string
        format: date-time
        example: '2018-11-29T14:48:38.000+0000'
        description: balanceTimeStamp
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AggregationAccountBalance
    description: Aggregation Account Balance Object
  AggregationAccountHolding:
    type: object
    required:
      - shares
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      amount:
        type: number
        format: double
      asset_class:
        type: string
      cost_basis:
        type: number
        format: double
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
      cusip:
        type: string
      exchange:
        type: string
      holding_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: holdingDate
      holding_type:
        type: string
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      isin:
        type: string
        example: xyz
        description: isin
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      price:
        type: number
        format: double
      secondary_id:
        type: string
        example: 7289243787238
      shares:
        type: number
        format: double
      ticker:
        type: string
        example: xyz
        description: ticker
      ticker_name:
        type: string
        example: xyz
        description: tickerName
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AggregationAccountHolding
    description: Aggregation Account Holding Object
  AggregationAccountTransaction:
    type: object
    required:
      - currency_code
      - transaction_date
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      bank_credit:
        $ref: '#/definitions/BankCredit'
      cash:
        $ref: '#/definitions/Cash'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      investment:
        $ref: '#/definitions/Investment'
      is_excluded_analysis:
        type: boolean
      is_fee:
        type: boolean
      is_recurring:
        type: boolean
      is_transfer:
        type: boolean
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: active
        description: status
      transaction_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: transactionDate
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AggregationAccountTransaction
    description: Aggregation Account Transaction Object
  Allocation:
    type: object
    required:
      - name
    properties:
      benchmark_id:
        type: string
        format: uuid
        example: f3c384dd-5895-4da8-a356-61f266269082
        description: benchmarkId
      category:
        type: string
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: Tech ETFs
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      inception_date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: inceptionDate
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: Tech
        description: name
      node_map:
        type: array
        example: {}
        items:
          $ref: '#/definitions/AllocationNodeMap'
      performance:
        type: number
        format: double
        example: 0.9
        description: performance
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      volatility:
        type: number
        format: double
        example: 0.9
        description: volatility
    title: Allocation
    description: Allocation Object
  AllocationAggregatedVO:
    type: object
    properties:
      allocation_category:
        type: string
      allocation_compositions:
        type: array
        items:
          $ref: '#/definitions/AllocationCompositionAggregatedVO'
      allocation_description:
        type: string
      allocation_id:
        type: string
        format: uuid
      allocation_name:
        type: string
      allocation_secondary_id:
        type: string
    title: AllocationAggregatedVO
  AllocationComposition:
    type: object
    required:
      - allocation_id
      - current_weight
      - date
      - model_id
      - strategic_weight
    properties:
      allocation_id:
        type: string
        format: uuid
        example: 1c46902a-d39d-4eaf-9159-abaa473b2561
        description: allocationId
      core:
        type: boolean
        example: true
        description: core
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      current_weight:
        type: number
        format: double
        example: 0.88
        description: currentWeight
      date:
        type: string
        format: date
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      secondary_id:
        type: string
        example: 7289243787238
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AllocationComposition
  AllocationCompositionAggregatedVO:
    type: object
    properties:
      allocation_composition_create_date:
        type: string
        format: date-time
      allocation_composition_date:
        type: string
        format: date
      allocation_composition_id:
        type: string
        format: uuid
      allocation_composition_update_date:
        type: string
        format: date-time
      model_category:
        type: string
      model_current_weight:
        type: number
        format: double
      model_description:
        type: string
      model_holdings:
        type: array
        items:
          $ref: '#/definitions/AllocationCompositionModelHoldingsVO'
      model_id:
        type: string
        format: uuid
      model_name:
        type: string
      model_secondary_id:
        type: string
      model_strategic_weight:
        type: number
        format: double
    title: AllocationCompositionAggregatedVO
  AllocationCompositionModelHoldingsVO:
    type: object
    properties:
      model_holding_date:
        type: string
        format: date
      model_holding_id:
        type: string
        format: uuid
      security_asset_class:
        type: string
      security_compositions:
        type: array
        items:
          $ref: '#/definitions/SecurityCompositionVO'
      security_countries:
        type: array
        items:
          $ref: '#/definitions/SecurityCountryVO'
      security_create_date:
        type: string
        format: date-time
      security_exchange:
        type: string
      security_id:
        type: string
        format: uuid
      security_industry:
        type: string
      security_name:
        type: string
      security_secondary_id:
        type: string
      security_sector:
        type: string
      security_security_class:
        type: string
      security_ticker:
        type: string
      security_update_date:
        type: string
        format: date-time
    title: AllocationCompositionModelHoldingsVO
  AllocationNodeMap:
    type: object
    required:
      - node_id
    properties:
      node_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: nodeId
    title: AllocationNodeMap
  Answer:
    type: object
    required:
      - value
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      image:
        type: string
        example: image
        description: image
      is_default:
        type: boolean
        example: false
        description: isDefault
      label:
        type: string
        example: label
        description: label
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      order_index:
        type: string
        example: 1
        description: orderIndex
      question:
        $ref: '#/definitions/Question'
      question_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: questionId
      secondary_id:
        type: string
        example: 7289243787238
      tooltip:
        type: string
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      value:
        type: string
        example: 0-40
        description: value
      weight:
        type: number
        format: double
        example: 10
        description: weight
    title: Answer
  AnswerMap:
    type: object
    properties:
      answer_id:
        type: string
        format: uuid
    title: AnswerMap
  Application:
    type: object
    required:
      - name
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: description
        description: description
      device:
        type: string
        example: device
        description: device
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      name:
        type: string
        example: name
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Application
    description: Application
  AuditLog:
    type: object
    required:
      - request_url
      - response
    properties:
      account_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountIds
        items:
          type: string
          format: uuid
      aggregation_account_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: aggregationAccountIds
        items:
          type: string
          format: uuid
      allocation_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: allocationIds
        items:
          type: string
          format: uuid
      client_ids:
        type: array
        example:
          - 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientIds
        items:
          type: string
          format: uuid
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      goal_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: goalIds
        items:
          type: string
          format: uuid
      id:
        type: string
        format: uuid
        example: 1feae367-77be-4613-9cd0-f62fd5b3cff2
        description: id
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      model_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: modelIds
        items:
          type: string
          format: uuid
      portfolio_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: portfolioIds
        items:
          type: string
          format: uuid
      request:
        type: string
      request_url:
        type: string
        example: /sample.pdf
        description: requestUrl
      response:
        type: string
        description: response
      secondary_id:
        type: string
        example: 7289243787238
      security_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: securityIds
        items:
          type: string
          format: uuid
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: AuditLog
    description: AuditLog Object
  AvailableDateDoubleVO:
    type: object
    properties:
      additions:
        type: number
        format: double
        example: 0
        description: additions
      cash_flow:
        type: number
        format: double
        example: 20000
        description: cashFlow
      currency_code:
        type: string
        example: USD
        description: currencyCode
      date:
        type: string
        example: '2018-02-03'
        description: date
      value:
        type: number
        format: double
        example: 20000
        description: value
      value_available:
        type: number
        format: double
        example: 20000
        description: valueAvailable
      value_pending:
        type: number
        format: double
        example: 20000
        description: valuePending
    title: AvailableDateDoubleVO
    description: Available Date-Double Mapping Object
  BankCredit:
    type: object
    required:
      - amount
      - transaction_type
    properties:
      amount:
        type: number
        format: double
        example: 30.89
        description: amount
      category:
        type: string
        example: category
        description: category
      description:
        type: string
        example: description
        description: description
      location:
        $ref: '#/definitions/Location'
      memo:
        type: string
        example: memo
        description: memo
      merchant:
        type: string
        example: merchant
        description: merchant
      merchant_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: merchantId
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      transaction_category_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: transactionCategoryId
      transaction_type:
        type: string
        example: Credit
        description: transactionType
    title: BankCredit
    description: BankCredit Object
  BankLink:
    type: object
    required:
      - bank_account_holder
      - bank_account_number
      - institution_name
      - routing
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      available_balance:
        type: number
        format: double
        example: available_balance
        description: availableBalance
      balance:
        type: number
        format: double
        example: 1000.12
        description: balance
      bank_account_holder:
        type: string
        example: XYZ
        description: bankAccountHolder
      bank_account_name:
        type: string
        example: XYZ
        description: bankAccountName
      bank_account_number:
        type: string
        example: 566788991
        description: bankAccountNumber
      business_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: businessId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      institution_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: institutionId
      institution_name:
        type: string
        example: xyz
        description: institutionName
      is_active:
        type: boolean
        example: true
        description: isActive
      is_default:
        type: boolean
        example: false
        description: isDefault
      is_link_verified:
        type: boolean
        example: true
        description: isLinkVerified
      link_verified_date:
        type: string
        format: date
        example: '2017-11-01'
        description: linkVerifiedDate
      mask:
        type: string
        description: mask
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      routing:
        type: string
        example: 091000022
        description: routing
      routing_wire:
        type: string
        example: routing_wire
        description: routingWire
      secondary_id:
        type: string
        example: 7289243787238
      type:
        type: string
        example: saving
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: BankLink
    description: BankLink Object
  Benchmark:
    type: object
    required:
      - name
    properties:
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      composition:
        type: array
        example: {}
        description: composition
        items:
          $ref: '#/definitions/BenchmarkComposition'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: sample
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: XYZ
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Benchmark
    description: Benchmark Object
  BenchmarkComposition:
    type: object
    required:
      - security_id
      - weight
    properties:
      security_id:
        type: string
        format: uuid
        description: securityId
      weight:
        type: number
        format: double
        description: weight
    title: BenchmarkComposition
  Brokers:
    type: object
    required:
      - broker_name
      - status
    properties:
      broker_name:
        type: string
        example: xyz
        description: broker_name
      status:
        type: string
        example: xyz
        description: status
    title: Brokers
    description: Brokers Object
  Budget:
    type: object
    required:
      - client_id
      - currency_code
      - frequency_unit
      - name
    properties:
      account_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: accountId
      aggregation_accounts:
        type: array
        example: {}
        items:
          $ref: '#/definitions/BudgetAggregationAccount'
      budget:
        type: array
        items:
          $ref: '#/definitions/BudgetObject'
      card_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: cardId
      client_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      end_date:
        type: string
        format: date
        example: '2018-06-28'
        description: endDate
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: daily
        description: frequencyUnit
      goal_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: Name
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      start_date:
        type: string
        format: date
        example: '2018-06-28'
        description: startDate
      total_value:
        type: number
        format: double
        example: 10000
        description: totalValue
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Budget
    description: Budget Object
  BudgetAggregationAccount:
    type: object
    required:
      - aggregation_account_id
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: node_id
    title: BudgetAggregationAccount
  BudgetObject:
    type: object
    required:
      - category
      - value
    properties:
      category:
        type: string
        example: category
        description: category
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      value:
        type: number
        format: double
        example: 100000
        description: value
    title: BudgetObject
    description: BudgetObject Object
  BulkTransaction:
    type: object
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      data:
        type: object
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: BulkTransaction
  BulkTransactionVO:
    type: object
    properties:
      error:
        type: object
      id:
        type: string
        format: uuid
      progress:
        type: object
      status:
        type: string
      success:
        type: object
    title: BulkTransactionVO
  Business:
    type: object
    required:
      - legal_name
    properties:
      address:
        type: array
        example: []
        items:
          $ref: '#/definitions/BusinessAddress'
      category:
        type: string
        example: Retail
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      dba_name:
        type: string
        example: dba name
        description: dbaName
      email:
        type: string
        example: xyz@gmail.com
        description: email
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      identification_number:
        type: string
        example: 111-22-3333
        description: identificationNumber
      identification_number_type:
        type: string
        example: SSN
        description: identificationNumberType
      incorporation_country:
        type: string
        example: US
        description: incorporationCountry
      incorporation_date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: incorporationDate
      incorporation_state:
        type: string
        example: Alabama
        description: incorporationState
      is_active:
        type: boolean
        example: true
        description: is_active
      is_public:
        type: boolean
        example: true
        description: is_public
      is_verified:
        type: boolean
        example: false
        description: is_verified
      legal_name:
        type: string
        example: business legal name
        description: legalName
      legal_structure:
        type: string
        example: LLC
        description: legalStructure
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      ownership:
        type: array
        example: []
        description: ownership
        items:
          $ref: '#/definitions/Ownership'
      phone_number:
        type: string
        example: 222-222-2222
        description: phoneNumber
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: xyz
        description: status
      subcategory:
        type: string
        example: Fast Food
        description: subcategory
      ticker:
        type: string
        example: xyz
        description: ticker
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      website:
        type: string
        example: business website
        description: website
    title: Business
    description: Business Object
  BusinessAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      is_primary:
        type: boolean
        example: false
        description: ' is_primary'
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: BusinessAddress
    description: BusinessAddress Object
  BusinessDetailsVO:
    type: object
    properties:
      address:
        type: array
        example: []
        description: address
        items:
          $ref: '#/definitions/BusinessAddress'
      business_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: businessId
      dba_name:
        type: string
        example: dba name
        description: dbaName
      email:
        type: string
        example: xyz@gmail.com
        description: email
      legal_name:
        type: string
        example: business legal name
        description: legalName
      website:
        type: string
        example: business website
        description: website
    title: BusinessDetailsVO
    description: Business Details Mapping Object
  Card:
    type: object
    required:
      - card_holder_name
      - card_issuance
      - card_name
      - card_type
      - portfolio_id
    properties:
      address:
        type: array
        example: []
        items:
          $ref: '#/definitions/CardAddress'
      business_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: businessId
      card_holder_name:
        type: string
        example: XYZ
        description: cardHolderName
      card_image:
        type: string
        example: /sample.png
        description: card_image
      card_issuance:
        type: string
        example: virtual
        description: cardIssuance
      card_name:
        type: string
        example: Visa
        description: cardName
      card_network:
        type: string
        example: Discover
        description: cardNetwork
      card_program_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: cardProgramId
      card_type:
        type: string
        example: credit
        description: cardType
      client_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      credit_limit:
        type: number
        format: double
        example: 10000000
        description: creditLimit
      currency_code:
        type: string
        example: USD
        description: currencyCode
      expiry_date:
        type: string
        format: date
        example: 06/28/2018
        description: expiryDate
      fulfillment:
        type: string
        example: secure mailing
        description: fulfillment
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      institution_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: institutionId
      institution_name:
        type: string
        example: XYZ
        description: institutionName
      is_active:
        type: boolean
        example: true
        description: is_active
      is_pin_set:
        type: boolean
        example: false
        description: is_pin_set
      is_primary:
        type: boolean
        example: false
        description: is_primary
      is_reloadable:
        type: boolean
        example: false
        description: is_reloadable
      mask:
        type: string
        example: xyz
        description: mask
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      phone_number:
        type: string
        example: 222-222-2222
        description: phoneNumber
      portfolio_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: portfolioId
      prepaid_amount:
        type: number
        format: float
        example: 100
        description: prepaidAmount
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Card
    description: Card Object
  CardAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: CardAddress
    description: CardAddress Object
  CardBalanceVO:
    type: object
    properties:
      balance:
        type: number
        format: double
        example: 20000
        description: balance
      balance_available:
        type: number
        format: double
        example: 20000
        description: balanceAvailable
      balance_timestamp:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: balanceTimestamp
      currency_code:
        type: string
        example: AED
        description: currencyCode
    title: CardBalanceVO
    description: CardBalance Mapping Object
  CardDetailsVO:
    type: object
    properties:
      balance:
        description: balance
        $ref: '#/definitions/CardBalanceVO'
      card_holder_name:
        type: string
        example: XYZ
        description: cardHolderName
      card_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: cardId
      card_issuance:
        type: string
        example: virtual
        description: cardIssuance
      card_name:
        type: string
        example: Visa
        description: cardName
      card_network:
        type: string
        example: Discover
        description: cardNetwork
      card_type:
        type: string
        example: credit
        description: cardType
      expiry_date:
        type: string
        format: date
        example: 06/28/2018
        description: expiryDate
      mask:
        type: string
        example: xyz
        description: mask
      prepaid_amount:
        type: number
        format: float
        example: 100
        description: prepaidAmount
      status:
        type: string
        description: status
    title: CardDetailsVO
    description: Card Details Object
  CardProgram:
    type: object
    required:
      - card_network
      - card_type
      - issuing_bank
      - name
    properties:
      card_network:
        type: string
        example: xyz
        description: cardNetwork
      card_processor:
        type: string
        example: xyz
        description: cardProcessor
      card_type:
        type: string
        example: credit
        description: cardType
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      code:
        type: string
        example: xyz
        description: code
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: XYZ
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      is_delegated_authority:
        type: boolean
        example: false
        description: is_delegated_authority
      issuing_bank:
        type: string
        example: RBC
        description: issuingBank
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: Visa
        description: name
      program_manager:
        type: string
        example: xyz
        description: programManager
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: CardProgram
    description: CardProgram Object
  Cash:
    type: object
    required:
      - amount
      - transaction_type
    properties:
      amount:
        type: number
        format: double
        example: 30.89
        description: cashAmount
      name:
        type: string
        example: name
        description: cashName
      transaction_type:
        type: string
        example: deposit
        description: cashTransactionType
    title: Cash
    description: Cash Object
  Check:
    type: object
    required:
      - check_number
    properties:
      check_amount:
        type: number
        format: double
        example: 20000
        description: checkAmount
      check_images:
        type: array
        example: []
        description: checkImages
        items:
          $ref: '#/definitions/CheckImages'
      check_number:
        type: string
        example: 123456
        description: checkNumber
    title: Check
    description: Check Object
  CheckImages:
    type: object
    required:
      - image_url
    properties:
      image_type:
        type: string
        example: jpeg
        description: imageType
      image_url:
        type: string
        example: 'http://www.abc.com/test.jpeg'
        description: imageUrl
    title: CheckImages
    description: CheckImages Object
  Client:
    type: object
    required:
      - client_type
      - username
    properties:
      address:
        type: array
        items:
          $ref: '#/definitions/ClientAddress'
      authorities:
        type: array
        example:
          - ROLE_CLIENT
        description: authorities
        items:
          type: string
      business_id:
        type: string
        format: uuid
        example: 5cc48294-5f28-41f2-8eb4-898e83932327
        description: business_id
      citizenship_status:
        type: string
        example: xyz
        description: citizenshipStatus
      client_type:
        type: string
        example: admin
        description: clientTypeId
      country_of_citizenship:
        type: array
        example:
          - US
        description: countryOfCitizenship
        items:
          type: string
      country_of_residence:
        type: string
        example: US
        description: countryOfResidence
      create_date:
        type: string
        format: date-time
        example: 2018-06-28T18:17:23.579+0000
        readOnly: true
      date_of_birth:
        type: string
        example: '1900-01-01'
        description: dateOfBirth
      email:
        type: string
        example: sample@example.com
        description: email
      employment:
        $ref: '#/definitions/Employment'
      firm_name:
        type: string
        example: firm
        description: firmName
      firm_type:
        type: string
        example: LLC
        description: firmType
      first_name:
        type: string
        example: Joe
        description: firstName
      gender:
        type: string
        example: male
        description: gender
      group:
        type: array
        example:
          - Entertainment
        description: group
        items:
          type: string
      hydro_id:
        type: string
        example: 10lm4nz
        description: hydroId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      identification_number:
        type: string
        example: 111-22-3333
        description: identificationNumber
      identification_number_type:
        type: string
        example: SSN
        description: identificationNumberType
      image:
        type: string
        example: /sample.png
        description: image
      income:
        type: integer
        format: int32
        example: 1
        description: income
      is_active:
        type: boolean
        example: true
        description: isActive
      is_verified:
        type: boolean
        example: true
        description: isVerified
      last_name:
        type: string
        example: Smith
        description: last_name
      liquid_net_worth:
        type: number
        format: double
        example: 10000
        description: liquidNetWorth
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      middle_name:
        type: string
        example: Joe
        description: middleName
      password:
        type: string
        example: admin@123
        description: password
      phone_number:
        type: string
        example: 222-222-2222
        description: phoneNumber
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: xyz
        description: status
      suffix:
        type: string
        example: xyz
        description: suffix
      title:
        type: string
        example: Mr.
        description: title
      total_net_worth:
        type: number
        format: double
        example: 10000
        description: totalNetWorth
      update_date:
        type: string
        format: date-time
        example: 2018-06-28T18:17:23.579+0000
        readOnly: true
      username:
        type: string
        example: sample@example.com
        description: username
    title: Client
    description: Client Object
  ClientAccountMapping:
    type: object
    required:
      - client_account_association_type
      - client_id
    properties:
      client_account_association_type:
        type: string
        example: owner
        description: clientAccountAssociationType
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      signature_data:
        type: string
        example: _RtqHPsnMD
    title: ClientAccountMapping
    description: ClientAccountMapping Object
  ClientAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      is_primary:
        type: boolean
        example: false
        description: ' is_primary'
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: ClientAddress
    description: ClientAddress Object
  ClientBusinessCardVO:
    type: object
    properties:
      business_details:
        example: {}
        description: businessDetails
        $ref: '#/definitions/BusinessDetailsVO'
      card_details:
        type: array
        example: []
        description: cardDetails
        items:
          $ref: '#/definitions/CardDetailsVO'
      client_details:
        example: {}
        description: clientDetails
        $ref: '#/definitions/ClientCardVO'
      total_balance:
        type: array
        example: []
        description: totalBalance
        items:
          $ref: '#/definitions/ClientBusinessTotalCardBalanceVO'
    title: ClientBusinessCardVO
    description: Client/Business Card Mapping Object
  ClientBusinessTotalCardBalanceVO:
    type: object
    properties:
      currency_code:
        type: string
        example: AED
        description: currencyCode
      total_balance:
        type: number
        format: double
        example: 20000
        description: totalBalance
      total_balance_available:
        type: number
        format: double
        example: 20000
        description: totalBalanceAvailable
    title: ClientBusinessTotalCardBalanceVO
    description: Client/Business Total CardBalance Mapping Object
  ClientCardVO:
    type: object
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: createDate
      email:
        type: string
        example: sample@example.com
        description: email
      first_name:
        type: string
        example: Joe
        description: firstName
      last_name:
        type: string
        example: Smith
        description: last_name
      middle_name:
        type: string
        example: Joe
        description: middleName
      status:
        type: string
        example: xyz
        description: status
      title:
        type: string
        example: sample@example.com
        description: email
    title: ClientCardVO
    description: Client Card Mapping Object
  ClientRelationship:
    type: object
    required:
      - client_id
      - relationship
    properties:
      client_id:
        type: string
        format: uuid
        example: 89df1f77-82b3-48ec-b6bc-710ceba322d9
      member:
        $ref: '#/definitions/Member'
      relationship:
        type: string
        example: father
    title: ClientRelationship
  ClientResponse:
    type: object
    required:
      - answer_id
      - answer_value
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account_id
      answer_id:
        type: string
        format: uuid
        example: cf9de92f-1c59-4188-93af-d7d5cefd0644
        description: answerId
      answer_value:
        type: string
        example: 1
        description: answerValue
      application_id:
        type: string
        example: dfhasio232fdas3324
        description: application_id
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ClientResponse
    description: ClientResponse Object
  ClientStatus:
    type: object
    required:
      - client_id
      - stage_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: clientId
      comments:
        type: string
        example: invested
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      stage_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientLevelId
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ClientStatus
    description: ClientStatus Object
  ClientViewGoalData:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/VAccountVO'
      accumulation_horizon:
        type: number
        format: double
      decumulation_horizon:
        type: number
        format: double
      goal_amount:
        type: number
        format: double
      goal_asset_size_by_goal:
        type: number
        format: double
      goal_asset_size_by_goal_date:
        type: string
        format: date
      goal_category:
        type: string
      goal_create_date:
        type: string
        format: date-time
      goal_id:
        type: string
        format: uuid
      goal_name:
        type: string
      goal_type:
        type: string
      goal_update_date:
        type: string
        format: date-time
      is_decumulation:
        type: boolean
      portfolios:
        type: array
        items:
          $ref: '#/definitions/VPortfolioVO'
    title: ClientViewGoalData
  Country:
    type: object
    required:
      - alpha2_code
      - country
      - numeric_code
    properties:
      alpha2_code:
        type: string
        example: AE
        description: alpha_2_code
      alpha3_code:
        type: string
        example: ARE
        description: alpha_3_code
      country:
        type: string
        example: United Arab Emirates
        description: country
      latitude:
        type: number
        format: double
        example: 23.424076
        description: latitude
      longitude:
        type: number
        format: double
        example: 53.847818
        description: longitude
      numeric_code:
        type: integer
        format: int32
        example: 4
        description: numericCode
    title: Country
    description: Country Object
  Currency:
    type: object
    properties:
      alphabetic_code:
        type: string
        example: AWG
        description: alphabetic_code
      currency:
        type: string
        example: Azerbaijan Manat
        description: currency
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      numeric_code:
        type: string
        example: 944
        description: numeric_code
    title: Currency
    description: Currency Object
  DateDoubleVO:
    type: object
    properties:
      additions:
        type: number
        format: double
        example: 0
        description: additions
      date:
        type: string
        example: '2018-02-03'
        description: date
      value:
        type: number
        format: double
        example: 20000
        description: value
    title: DateDoubleVO
    description: Date-Double Mapping Object
  DecisionTree:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: This tree allocates clients taxable portfolios.
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: tree1
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: DecisionTree
    description: DecisionTree Object
  DecisionTreeCO:
    type: object
    required:
      - answers
      - entity_type
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/AnswerMap'
      entity_type:
        type: string
    title: DecisionTreeCO
  DecisionTreeResultVO:
    type: object
    properties:
      entity_id:
        type: array
        items:
          type: string
          format: uuid
      entity_type:
        type: string
    title: DecisionTreeResultVO
  Document:
    type: object
    required:
      - doc_name
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      business_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: businessId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      country_of_issue:
        type: string
        example: qwerwerewq==
        description: country_of_issue
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      doc_file:
        type: string
        example: qwerwerewq==
        description: doc_file
      doc_image_back:
        type: string
        example: qwerwerewq==
        description: doc_image_back
      doc_image_front:
        type: string
        example: qwerwerewq==
        description: doc_image_front
      doc_name:
        type: string
        example: Social Security Card
        description: doc_name
      doc_number:
        type: string
        example: 123456ffds
        description: doc_number
      doc_size:
        type: integer
        format: int64
        example: 1516
        description: doc_size
      doc_type:
        type: string
        example: client_document
        description: doc_type
      expiry_date:
        type: string
        format: date
        example: '2018-01-09'
        description: expiry_date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      is_sensitive:
        type: boolean
        example: true
        description: is_sensitive
      is_verified:
        type: boolean
        example: false
        description: is_verified
      issue_date:
        type: string
        format: date
        example: '2018-01-09'
        description: issue_date
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      state_of_issue:
        type: string
        example: qwerwerewq==
        description: state_of_issue
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      url_path:
        type: string
        example: /sample.pdf
        description: url_path
    title: Document
    description: Document Object
  Employment:
    type: object
    properties:
      employer:
        type: string
        example: xyz
        description: employer
      employment_status:
        type: string
        example: student
        description: employmentStatus
      job_title:
        type: string
        example: xyz
        description: jobTitle
      occupation:
        type: string
        example: xyz
        description: occupation
    title: Employment
    description: Employment Object
  ExternalAccountTransfer:
    type: object
    required:
      - account_holder
      - account_id
      - account_number
      - account_type_id
      - firm_name
      - transfer_all_cash
      - transfer_date
    properties:
      account_holder:
        type: string
        example: John Smith
        description: External Account Transfer accountHolder
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: External Account Transfer account id
      account_number:
        type: string
        example: 5889632592
        description: External Account Transfer account number
      account_type_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: External Account Transfer account type id
      amount:
        type: number
        format: double
        example: 100
        description: External Account Transfer amount
      comment:
        type: string
        example: sample
        description: External Account Transfer comment
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      dtc_number:
        type: string
        example: 345928204
        description: External Account Transfer dtcNumber
      firm_name:
        type: string
        example: Vanguard
        description: External Account Transfer firm name
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      received_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      roth_five_year:
        type: integer
        format: int32
        example: 2
        description: External Account Transfer roth five year
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: pending
        description: External Account Transfer status
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      transfer_all_cash:
        type: boolean
        example: true
        description: External Account Transfer transfer all cash
      transfer_date:
        type: string
        format: date
        description: External Account Transfer account transfer date
      transfer_type:
        type: string
        example: WIRE
        description: External Account Transfer transfer type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ExternalAccountTransfer
  Feature:
    type: object
    required:
      - feature_name
    properties:
      application_id:
        type: string
        format: uuid
        example: application_id
        description: application_id
      category:
        type: string
        example: setup
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      feature_name:
        type: string
        example: link account
        description: feature_name
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      page_name:
        type: string
        example: account
        description: page_name
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: link account
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Feature
    description: Track Feature Object
  FeatureTrack:
    type: object
    required:
      - client_id
      - feature_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      feature_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: feature_id
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: FeatureTrack
    description: Feature Track Object
  Funding:
    type: object
    required:
      - frequency_unit
      - funding_status
      - funding_type
      - is_deposit
      - start_date
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      bank_link_id:
        type: string
        format: uuid
        example: 02ec7d90-02fc-46c7-b201-def9b16ef65a
        description: bankLinkId
      business_id:
        type: string
        format: uuid
        example: 8ac40bd2-84a7-4896-804d-b837ef1df5f5
        description: businessId
      card_id:
        type: string
        format: uuid
        example: 8ac40bd2-84a7-4896-804d-b837ef1df5f5
        description: cardId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currencyCode
      description:
        type: string
        example: Funding account
        description: description
      end_date:
        type: string
        format: date
        example: '2018-01-09'
        description: endDate
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: one_time
        description: frequencyUnit
      funding_status:
        type: string
        example: received
        description: fundingStatus
      funding_type:
        type: string
        example: bank_transfer
        description: fundingType
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      is_deposit:
        type: boolean
        example: true
        description: isDeposit
      last_request_date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: lastRequestDate
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      next_request_date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: nextRequestDate
      portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: portfolioId
      receiving_account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: receivingAccountId
      receiving_bank_link_id:
        type: string
        format: uuid
        example: 02ec7d90-02fc-46c7-b201-def9b16ef65a
        description: receivingBankLinkId
      receiving_portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: receivingPortfolioId
      secondary_id:
        type: string
        example: 7289243787238
      start_date:
        type: string
        format: date
        example: '2018-01-09'
        description: startDate
      support_ticket_id:
        type: string
        format: uuid
        example: 3551b26c-7080-4c4b-a8fc-9ce9360460ba
        description: supportTicketId
      threshold_amount:
        type: number
        format: double
        example: 100
        description: thresholdAmount
      transfer_id:
        type: string
        format: uuid
        example: 8ac40bd2-84a7-4896-804d-b837ef1df5f5
        description: transferId
      transfer_speed:
        type: string
        example: standard
        description: transferSpeed
      transfer_type:
        type: string
        example: push
        description: transferType
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Funding
    description: Funding Object
  FundingTransaction:
    type: object
    required:
      - amount
      - currency_code
      - funding_id
      - is_deposit
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 1004
        description: amount
      comments:
        type: string
        example: Funded
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      fees:
        type: number
        format: double
        example: 0
        description: fees
      funding_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: fundingId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      invested_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: investedDate
      is_deposit:
        type: boolean
        example: false
        description: is deposit
      last_request_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: lastRequestDate
      metadata:
        type: object
        additionalProperties:
          type: string
      portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: portfolio_id
      portfolio_transaction_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: portfolioTransactionId
      received_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: receivedDate
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: in process
        description: status
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: statusTimeStamp
      type:
        type: string
        example: one-time
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: FundingTransaction
    description: FundingTransaction Object
  FxRate:
    type: object
    required:
      - currency_code_from
      - currency_code_to
      - date
      - exchange_rate
    properties:
      currency_code_from:
        type: string
        example: USD
        description: currency_code_from
      currency_code_to:
        type: string
        example: USD
        description: currency_code_to
      date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: date
      exchange_rate:
        type: number
        format: double
        example: 12
        description: exchangeRate
    title: FxRate
    description: FxRate Object
  FxRateView:
    type: object
    required:
      - currency_code_from
      - currency_code_to
      - date
      - exchange_rate
    properties:
      currency_code_from:
        type: string
        example: USD
        description: currency_code_from
      currency_code_to:
        type: string
        example: USD
        description: currency_code_to
      date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: date
      exchange_rate:
        type: number
        format: double
        example: 12
        description: exchangeRate
    title: FxRateView
    description: FxRate view object
  Goal:
    type: object
    required:
      - name
    properties:
      accumulation_horizon:
        type: number
        format: double
      category:
        type: string
        example: retirement
        description: category
      client_id:
        type: string
        format: uuid
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      decumulation_horizon:
        type: number
        format: double
      goal_amount:
        type: number
        format: double
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      image:
        type: string
        example: image
        description: image
      is_active:
        type: boolean
        example: false
        description: isActive
      is_decumulation:
        type: boolean
        example: true
        description: isDecumulation
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: sample
        description: Goal name
      parent_goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: Goal Parent Goal Id
      questionnaire_id:
        type: string
        format: uuid
        example: 647c54c3-b649-477e-8cc7-eee56a120dd3
        description: questionnaire_id
      secondary_id:
        type: string
        example: 7289243787238
      type:
        type: string
        example: type
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Goal
  GoalAccountMapping:
    type: object
    required:
      - goal_id
    properties:
      accumulation_horizon:
        type: number
        format: double
        example: 15
        description: accumulationHorizon
      decumulation_horizon:
        type: number
        format: double
        example: 15
        description: decumulationHorizon
      goal_amount:
        type: number
        format: double
        example: 100000
        description: goalAmount
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
    title: GoalAccountMapping
    description: GoalAccountMapping Object
  GoalTrack:
    type: object
    required:
      - goal_id
      - status_time_stamp
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/GoalTrackAccounts'
      accumulation_horizon:
        type: number
        format: double
        example: 10.2
        description: accumulationHorizon
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      current_investment:
        type: number
        format: double
        example: 10.2
        description: currentInvestment
      decumulation_horizon:
        type: number
        format: double
        example: 10.2
        description: decumulationHorizon
      goal_achievement_score:
        type: number
        format: double
        example: 0.9
        description: goalAchievementScore
      goal_amount:
        type: number
        format: double
        example: 0.9
        description: goalAmount
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
      goal_probability:
        type: number
        format: double
        example: 0.9
        description: goalProbability
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      on_track:
        type: boolean
        example: true
        description: onTrack
      progress:
        type: number
        format: double
        example: 10.2
        description: progress
      projection_balance:
        type: number
        format: double
        example: 0.9
        description: projectionBalance
      projection_date:
        type: string
        format: date
        example: '2018-01-09'
        description: projectionDate
      secondary_id:
        type: string
        example: 7289243787238
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-11-16T00:00:00.000+0000'
        description: statusTimeStamp
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: GoalTrack
    description: Goal Simulation Result Object
  GoalTrackAccounts:
    type: object
    required:
      - account_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account_id
    title: GoalTrackAccounts
  Household:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: category
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      household_income:
        type: number
        format: double
        example: 1
        description: householdIncome
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      members:
        type: array
        items:
          $ref: '#/definitions/Member'
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      name:
        type: string
        example: household
        description: name
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Household
  Institution:
    type: object
    required:
      - name
    properties:
      code:
        type: string
        example: code
        description: code
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      logo_url_medium:
        type: string
        example: 'https://domain.com/logo.png'
        description: logo_url_medium
      logo_url_small:
        type: string
        example: 'https://domain.com/logo.png'
        description: logo_url_small
      name:
        type: string
        example: Chase
        description: name
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      website_url:
        type: string
        example: 'https://domain.com'
        description: website_url
    title: Institution
    description: Institution Object
  Investment:
    type: object
    required:
      - price
      - quantity
      - trade_signal
    properties:
      fee:
        type: number
        format: double
        example: 2345
        description: fee
      investment_type:
        type: string
        example: investmentType
        description: investmentType
      price:
        type: number
        format: double
        example: 23.9
        description: price
      quantity:
        type: number
        format: double
        example: 33.9
        description: quantity
      settle_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: settleDate
      ticker:
        type: string
        example: ticker
        description: ticker
      ticker_name:
        type: string
        example: tickerName
        description: tickerName
      trade_signal:
        type: string
        example: tradeSignal
        description: tradeSignal
      value:
        type: number
        format: double
        example: 2345
        description: value
    title: Investment
    description: Investment Object
  JsonNode:
    type: object
    title: JsonNode
  Location:
    type: object
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      latitude:
        type: number
        format: double
        example: 23.9
        description: latitude
      longitude:
        type: number
        format: double
        example: 23.9
        description: longitude
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
    title: Location
    description: Location Object
  MXMerchantRes:
    type: object
    properties:
      create_date:
        type: string
        format: date-time
      guid:
        type: string
      id:
        type: string
        format: uuid
      logo_url:
        type: string
      name:
        type: string
      update_date:
        type: string
        format: date-time
      website_url:
        type: string
    title: MXMerchantRes
  Member:
    type: object
    required:
      - client_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 89df1f77-82b3-48ec-b6bc-710ceba322d9
        description: clientId
      client_relationships:
        type: array
        items:
          $ref: '#/definitions/ClientRelationship'
      household:
        $ref: '#/definitions/Household'
      is_primary:
        type: boolean
        example: false
        description: isPrimary
    title: Member
  MerchantCategoryCode:
    type: object
    required:
      - transaction_category_id
    properties:
      category:
        type: string
        example: Shopping
        description: category
      description:
        type: string
        example: Veterinary Services
        description: description
      mcc:
        type: integer
        format: int32
        example: 722
        description: mcc
      subcategory:
        type: string
        example: Florists
        description: subcategory
      transaction_category_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: TransactionCategory id
    title: MerchantCategoryCode
    description: MerchantCategoryCode Object
  Model:
    type: object
    required:
      - name
    properties:
      benchmark_id:
        type: string
        format: uuid
        example: f3c384dd-5895-4da8-a356-61f266269082
        description: benchmarkId
      cash_sec:
        type: string
        example: 1
        description: cashSec
      category:
        type: string
        example: tech
        description: category
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      default_drift_factor:
        type: number
        format: float
        example: 0.55
        description: defaultDriftFactor
      description:
        type: string
        example: consists of tech ETFs
        description: description
      downside:
        type: boolean
        example: true
        description: downside
      drift_rebal:
        type: boolean
        example: true
        description: driftRebal
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Tech model
        description: name
      node_map:
        type: array
        items:
          $ref: '#/definitions/AllocationNodeMap'
      period_rebal:
        type: boolean
        example: true
        description: periodRebal
      rebalance_period:
        type: integer
        format: int64
        example: 12
        description: rebalancePeriod
      safe_sec:
        type: string
        example: 1
        description: safeSec
      sec_rotation:
        type: boolean
        example: true
        description: secRotation
      secondary_id:
        type: string
        example: 7289243787238
      tax_efficiency_id:
        type: integer
        format: int64
        example: 1
        description: taxEfficiencyId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Model
    description: Model Object
  ModelAssetSize:
    type: object
    required:
      - asset_size
      - date
      - model_id
    properties:
      asset_size:
        type: number
        format: double
        example: 0.9
        description: Model asset_size
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: Model asset_size date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_reconciled:
        type: boolean
        example: true
        description: Model asset_size is reconciled
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: Model asset_size Model id
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ModelAssetSize
    description: Model Asset_Size Object
  ModelComment:
    type: object
    required:
      - comment
      - date
      - model_id
    properties:
      comment:
        type: string
        example: sample
        description: Model Comment comment
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: Model Comment date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: Model Comment Model Id
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ModelComment
  ModelHolding:
    type: object
    required:
      - current_weight
      - date
      - model_id
      - security_id
      - strategic_weight
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      current_weight:
        type: number
        format: double
        example: 0.88
        description: Model Holding current weight
      date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: Model Holding date
      drift_factor:
        type: number
        format: float
        example: 0.9
        description: driftFactor
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_cash:
        type: boolean
        example: true
        description: isCash
      is_initial_holding:
        type: boolean
        example: true
        description: isInitialHolding
      is_safe_security:
        type: boolean
        example: true
        description: isSafeSecurity
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      model_description:
        type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      model_name:
        type: string
      model_weight:
        type: number
        format: double
      sec_price:
        type: number
        format: double
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: Model Holding strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ModelHolding
  ModelHoldingVO:
    type: object
    properties:
      current_weight:
        type: number
        format: double
      date:
        type: string
        format: date
      security_id:
        type: string
        format: uuid
      strategic_weight:
        type: number
        format: double
    title: ModelHoldingVO
  ModelTransaction:
    type: object
    required:
      - date
      - model_id
      - price
      - security_id
      - shares
      - transaction_code_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: Date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      price:
        type: number
        format: double
        example: 100
        description: price
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      shares:
        type: number
        format: double
        example: 100
        description: shares
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ModelTransaction
  Node:
    type: object
    required:
      - name
      - question_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_first:
        type: boolean
        example: true
        description: isFirst
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: node1
        description: name
      question_id:
        type: string
        format: uuid
        example: 690c6256-07dc-461b-96bd-a8059cf036f9
        description: questionId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Node
    description: Node Object
  NodeRelationship:
    type: object
    required:
      - answer_id
      - decision_tree_id
      - node_parent_id
      - value
    properties:
      answer_id:
        type: string
        format: uuid
        example: 3942c6b8-5107-4283-b7d4-7b24629fd12f
        description: answer_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      decision_tree_id:
        type: string
        format: uuid
        example: 169b1e70-f321-4f56-883e-ec16bfc5017c
        description: decision_tree_id
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_leaf:
        type: boolean
        example: true
        description: is_leaf
      metadata:
        type: object
        additionalProperties:
          type: string
      node_child_id:
        type: string
        format: uuid
        example: e6fd4152-6d7a-4882-9f0b-9d0df6eb6d11
        description: nodeChildId
      node_parent_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: nodeParentId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      value:
        type: string
        example: 29 Years
        description: value
    title: NodeRelationship
    description: NodeRelationship Object
  Notification:
    type: object
    required:
      - name
      - notification_type
    properties:
      application_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: application_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: notification desc
        description: description
      feature_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: feature_id
      frequency_unit:
        type: array
        example:
          - daily
        description: frequency_unit
        items:
          type: string
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      name:
        type: string
        example: notification name
        description: name
      notification_type:
        type: string
        example: push_mobile
        description: notificationType
      secondary_id:
        type: string
        example: 7289243787238
      threshold_type:
        type: string
        example: false
        description: threshold_type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Notification
    description: Notification Object
  NotificationClient:
    type: object
    required:
      - client_id
      - notification_content
      - notification_date
      - notification_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_read:
        type: boolean
        example: true
      is_sent:
        type: boolean
        example: true
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      notification_content:
        type: string
        example: notificationContent
        description: notification_content
      notification_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: notification_date
      notification_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: notification_id
      notification_image:
        type: string
        example: notification image
        description: notification_image
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: NotificationClient
    description: Notification Client Object
  NotificationSetting:
    type: object
    required:
      - client_id
      - notification_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: one_time
        description: frequency_unit
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_receive:
        type: boolean
        example: true
        description: is_receive
      last_run_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: last_run_date
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      notification_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: notification_id
      secondary_id:
        type: string
        example: 7289243787238
      threshold_value:
        type: number
        format: double
        example: 1
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: NotificationSetting
    description: Notification Setting Object
  Order:
    type: object
    required:
      - date
      - order_ticket_id
      - security_id
      - transaction_code_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 9000
        description: amount
      commission:
        type: number
        format: double
        example: 9000
        description: commission
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_read:
        type: boolean
        example: true
        description: isRead
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      order_bulk_id:
        type: string
        format: uuid
        example: 114556fe-ee78-431d-be5e-60ae08ddf9a7
        description: orderBulkId
      order_ticket_id:
        type: string
        format: uuid
        example: 5da53a30-49e6-4162-8728-58d6348bfb24
        description: orderTicketId
      order_type:
        type: string
        example: bulk order
        description: orderType
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      price:
        type: number
        format: double
        example: 9000
        description: price
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      tmp_tracker_id:
        type: string
        format: uuid
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Order
    description: Order Object
  OrderBulk:
    type: object
    required:
      - account_id
      - date
      - model_id
      - order_bulk_id
      - order_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      order_bulk_id:
        type: string
        format: uuid
        example: 114556fe-ee78-431d-be5e-60ae08ddf9a7
        description: orderBulkId
      order_id:
        type: string
        format: uuid
        example: 72c0c834-03e1-49c3-bf13-eb5adcba6e9e
        description: orderId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: OrderBulk
  OrderReconcileRequest:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
      non_fractional:
        type: boolean
      order_track_ids:
        type: array
        items:
          type: string
          format: uuid
      portfolio_id:
        type: string
        format: uuid
      tenant_id:
        type: string
        format: uuid
    title: OrderReconcileRequest
    description: OrderReconcileRequest Object
  OrderReconcileReturnObject:
    type: object
    properties:
      account_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_asset_size_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_holding_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_transaction_id:
        type: array
        items:
          type: string
          format: uuid
    title: OrderReconcileReturnObject
  OrderStatus:
    type: object
    required:
      - description
      - status
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: sample
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: OrderStatus
    description: OrderStatus Object
  OrderTrack:
    type: object
    required:
      - date
      - order_id
      - order_status_id
    properties:
      commission:
        type: number
        format: double
        example: 100
        description: commission
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: date
      external_track_id:
        type: string
        example: r37
        description: externalTrackId
      fee:
        type: number
        format: double
        example: 100
        description: fee
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      order_id:
        type: string
        format: uuid
        example: 72c0c834-03e1-49c3-bf13-eb5adcba6e9e
        description: orderId
      order_status_id:
        type: string
        format: uuid
        example: 9b515c67-3791-400f-9da4-9dc69eb992ac
        description: orderStatusId
      price:
        type: number
        format: double
        example: 100
        description: price
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: OrderTrack
    description: OrderTrack Object
  OrderVoClone:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      date:
        type: string
        format: date-time
        example: '2018-06-28'
        description: date
      is_read:
        type: boolean
        example: false
        description: isRead
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      order_bulk_id:
        type: string
        format: uuid
        example: 114556fe-ee78-431d-be5e-60ae08ddf9a7
        description: orderBulkId
      order_ticket_id:
        type: string
        format: uuid
        example: 5da53a30-49e6-4162-8728-58d6348bfb24
        description: orderTicketId
      order_type:
        type: string
        example: initial order
        description: orderType
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      price:
        type: number
        format: double
      quantity:
        type: number
        format: double
        example: 1
        description: quantity
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
    title: OrderVoClone
    description: OrderVoClone Object
  Ownership:
    type: object
    required:
      - client_id
      - role
    properties:
      client_id:
        type: string
        format: uuid
        example: 5cc48294-5f28-41f2-8eb4-898e83932327
        description: client_id
      is_beneficial:
        type: boolean
        example: false
        description: is_beneficial
      is_primary:
        type: boolean
        example: false
        description: is_primary
      percent_ownership:
        type: number
        format: double
        example: 0.25
        description: percent_ownership
      role:
        type: string
        example: officer
        description: role
    title: Ownership
    description: Ownership Object
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      page_number:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        $ref: '#/definitions/Sort'
      unpaged:
        type: boolean
    title: Pageable
  Page«AccountAllocationMapping»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountAllocationMapping'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountAllocationMapping»
    description: Page Object
  Page«AccountPermissionVO»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountPermissionVO'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountPermissionVO»
    description: Page Object
  Page«AccountStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountStatus»
    description: Page Object
  Page«AccountType»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountType'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountType»
    description: Page Object
  Page«Account»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Account'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Account»
    description: Page Object
  Page«AggregationAccountBalance»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountBalance'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountBalance»
    description: Page Object
  Page«AggregationAccountHolding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountHolding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountHolding»
    description: Page Object
  Page«AggregationAccountTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountTransaction»
    description: Page Object
  Page«AggregationAccount»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccount'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccount»
    description: Page Object
  Page«AllocationComposition»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AllocationComposition'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AllocationComposition»
    description: Page Object
  Page«Allocation»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Allocation'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Allocation»
    description: Page Object
  Page«Answer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Answer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Answer»
    description: Page Object
  Page«Application»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Application'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Application»
    description: Page Object
  Page«AuditLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AuditLog»
    description: Page Object
  Page«BankLink»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/BankLink'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«BankLink»
    description: Page Object
  Page«Benchmark»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Benchmark'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Benchmark»
    description: Page Object
  Page«Budget»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Budget'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Budget»
    description: Page Object
  Page«Business»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Business'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Business»
    description: Page Object
  Page«CardProgram»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CardProgram'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«CardProgram»
    description: Page Object
  Page«Card»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Card'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Card»
    description: Page Object
  Page«ClientBusinessCardVO»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientBusinessCardVO'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientBusinessCardVO»
    description: Page Object
  Page«ClientResponse»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientResponse'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientResponse»
    description: Page Object
  Page«ClientStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientStatus»
    description: Page Object
  Page«Client»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Client'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Client»
    description: Page Object
  Page«DecisionTree»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DecisionTree'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«DecisionTree»
    description: Page Object
  Page«Document»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Document'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Document»
    description: Page Object
  Page«ExternalAccountTransfer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ExternalAccountTransfer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ExternalAccountTransfer»
    description: Page Object
  Page«FeatureTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/FeatureTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«FeatureTrack»
    description: Page Object
  Page«Feature»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Feature'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Feature»
    description: Page Object
  Page«FundingTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/FundingTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«FundingTransaction»
    description: Page Object
  Page«Funding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Funding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Funding»
    description: Page Object
  Page«GoalTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/GoalTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«GoalTrack»
    description: Page Object
  Page«Goal»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Goal'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Goal»
    description: Page Object
  Page«Household»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Household'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Household»
    description: Page Object
  Page«Institution»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Institution'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Institution»
    description: Page Object
  Page«MXMerchantRes»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/MXMerchantRes'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«MXMerchantRes»
  Page«ModelAssetSize»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelAssetSize'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelAssetSize»
    description: Page Object
  Page«ModelComment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelComment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelComment»
    description: Page Object
  Page«ModelHolding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelHolding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelHolding»
    description: Page Object
  Page«ModelTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelTransaction»
    description: Page Object
  Page«Model»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Model'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Model»
    description: Page Object
  Page«NodeRelationship»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NodeRelationship'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NodeRelationship»
    description: Page Object
  Page«Node»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Node'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Node»
    description: Page Object
  Page«NotificationClient»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NotificationClient'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NotificationClient»
    description: Page Object
  Page«NotificationSetting»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NotificationSetting'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NotificationSetting»
    description: Page Object
  Page«Notification»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Notification'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Notification»
    description: Page Object
  Page«OrderBulk»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OrderBulk'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OrderBulk»
    description: Page Object
  Page«OrderStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OrderStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OrderStatus»
    description: Page Object
  Page«OrderTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OrderTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OrderTrack»
    description: Page Object
  Page«Order»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Order'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Order»
    description: Page Object
  Page«PortfolioAssetSizeLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioAssetSizeLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioAssetSizeLog»
    description: Page Object
  Page«PortfolioComment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioComment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioComment»
    description: Page Object
  Page«PortfolioGoal»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioGoal'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioGoal»
    description: Page Object
  Page«PortfolioHoldingAgg»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioHoldingAgg'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioHoldingAgg»
    description: Page Object
  Page«PortfolioHoldingLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioHoldingLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioHoldingLog»
    description: Page Object
  Page«PortfolioTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioTransaction»
    description: Page Object
  Page«Portfolio»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Portfolio'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Portfolio»
    description: Page Object
  Page«Questionnaire»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Questionnaire'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Questionnaire»
    description: Page Object
  Page«Question»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Question'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Question»
    description: Page Object
  Page«ReasonCode»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ReasonCode'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ReasonCode»
    description: Page Object
  Page«RiskProfile»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RiskProfile'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«RiskProfile»
    description: Page Object
  Page«Score»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Score'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Score»
    description: Page Object
  Page«SecurityExclusion»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SecurityExclusion'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SecurityExclusion»
    description: Page Object
  Page«SecurityPrice»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SecurityPrice'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SecurityPrice»
    description: Page Object
  Page«Security»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Security'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Security»
    description: Page Object
  Page«SpendingControl»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SpendingControl'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SpendingControl»
    description: Page Object
  Page«Stage»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Stage'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Stage»
    description: Page Object
  Page«TransactionCode»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/TransactionCode'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«TransactionCode»
    description: Page Object
  Page«Webhook»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Webhook'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Webhook»
    description: Page Object
  PermissionVO:
    type: object
    properties:
      client_id:
        type: string
        format: uuid
        example: 3699e30f-8b2f-4727-9a84-603eac072d8c
        description: clientId
      permission_type:
        type: string
        example: INQUIRY_ACCESS
        description: permissionType
        enum:
          - INQUIRY_ACCESS
          - LIMITED_AUTHORITY
          - FULL_AUTHORITY
          - POWER_OF_ATTORNEY
    title: PermissionVO
  Portfolio:
    type: object
    required:
      - account_id
      - name
      - percentage
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      account_number:
        type: string
        example: true
        description: account_number
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      description:
        type: string
        example: Stock portfolio
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      is_subledger:
        type: boolean
        example: false
        description: is_subledger
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      name:
        type: string
        example: Stock
        description: name
      percentage:
        type: number
        format: double
        example: 100
        description: percentage
      secondary_id:
        type: string
        example: 7289243787238
      status:
        type: string
        example: xyz
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Portfolio
    description: Portfolio Object
  PortfolioAssetSizeLog:
    type: object
    required:
      - account_id
      - asset_size
      - cash_flow
      - date
      - model_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      asset_size:
        type: number
        format: double
        example: 100
        description: asset_size
      asset_size_available:
        type: number
        format: double
        example: 100
        description: asset_size_available
      asset_size_pending:
        type: number
        format: double
        example: 100
        description: asset_size_pending
      cash_flow:
        type: number
        format: double
        example: 100
        description: cash_flow
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09T00:00:00+0000'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: PortfolioAssetSizeLog
    description: PortfolioAssetSizeLog Object
  PortfolioComment:
    type: object
    required:
      - account_id
      - model_comment_id
      - model_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_read:
        type: boolean
        example: true
        description: isRead
      model_comment_id:
        type: string
        format: uuid
        example: 7f06b7b9-17f7-4390-afb2-1143b3ab7b
        description: modelCommentId
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: PortfolioComment
    description: PortfolioComment Object
  PortfolioGoal:
    type: object
    required:
      - date
      - goals
      - portfolio_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      date:
        type: string
        format: date
        example: '2018-01-09'
        description: date
      goals:
        type: array
        example: {}
        items:
          $ref: '#/definitions/PortfolioGoalMap'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      portfolio_id:
        type: string
        format: uuid
        example: f29d942a-7509-41be-8016-46743be0bcc8
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: PortfolioGoal
    description: PortfolioGoal Object
  PortfolioGoalMap:
    type: object
    required:
      - goal_id
      - weight
    properties:
      goal_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: goal_id
      weight:
        type: number
        format: double
        example: 0.88
        description: weight
    title: PortfolioGoalMap
  PortfolioHoldingAgg:
    type: object
    properties:
      amount:
        type: number
        format: double
        example: 100
        description: amount
      cost_basis:
        type: number
        format: double
        example: 60
        description: costBasis
      currency_code:
        type: string
        example: USD
        description: currencyCode
      date:
        type: string
        format: date
        example: '2017-01-20'
        description: date
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      shares:
        type: number
        format: double
        example: 60
        description: shares
      weight:
        type: number
        format: double
        example: 68.75
        description: weight
    title: PortfolioHoldingAgg
    description: PortfolioHoldingAgg Object
  PortfolioHoldingLog:
    type: object
    required:
      - account_id
      - date
      - model_id
      - portfolio_id
      - security_id
      - shares
    properties:
      account_id:
        type: string
        format: uuid
        example: 1
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      cost_basis:
        type: number
        format: double
        example: 100
        description: cost_basis
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09T00:00:00+0000'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      model_id:
        type: string
        format: uuid
        example: 1
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: 1
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 1
        description: securityId
      shares:
        type: number
        format: double
        example: 4
        description: shares
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      weight:
        type: number
        format: double
        example: 100
        description: weight
    title: PortfolioHoldingLog
    description: PortfolioHoldingLog Object
  PortfolioTransaction:
    type: object
    required:
      - account_id
      - date
      - model_id
      - portfolio_id
      - transaction_code_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      balance:
        type: number
        format: double
        example: 100000
        description: balance
      category:
        type: string
        example: category
        description: category
      check:
        $ref: '#/definitions/Check'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: date
      date_available:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: dateAvailable
      description:
        type: string
        example: description
        description: description
      funding_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: fundingId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_cleansed:
        type: boolean
        example: false
        description: is_cleansed
      is_disputed:
        type: boolean
        example: false
        description: is_disputed
      is_read:
        type: boolean
        example: true
        description: isRead
      is_recurring:
        type: boolean
        example: false
        description: is_recurring
      location:
        example: {}
        description: location
        $ref: '#/definitions/Location'
      memo:
        type: string
        example: memo
        description: memo
      merchant:
        type: string
        example: merchant
        description: merchant
      merchant_category_code:
        type: string
        example: merchant_category_code
        description: merchant_category_code
      merchant_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: merchantId
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      mid:
        type: string
        example: 3099
        description: mid
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: b4c033db-9d05-4a33-8e28-40650d454487
        description: portfolioId
      price:
        type: number
        format: double
        example: 100
        description: price
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      status:
        type: string
        example: status
        description: status
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      transaction_category_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: transactionCategoryId
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: alertId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: PortfolioTransaction
    description: PortfolioTransaction Object
  Question:
    type: object
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/Answer'
      category:
        type: string
        example: title
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: description
        description: description
      document:
        type: string
        example: document
        description: document
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      image:
        type: string
        example: image
        description: image
      is_account:
        type: boolean
        example: true
        description: is_account
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      order_index:
        type: string
        example: order_index
        description: order_index
      question_type:
        type: string
        example: question_type
        description: question_type
      questionnaire:
        $ref: '#/definitions/Questionnaire'
      questionnaire_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: questionnaireId
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      title:
        type: string
        example: title
        description: title
      tooltip:
        type: string
        example: label
        description: tooltip
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      weight:
        type: number
        format: double
        example: 0
        description: weight
    title: Question
    description: Question Object
  Questionnaire:
    type: object
    required:
      - name
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      decision_tree_id:
        type: string
        format: uuid
        example: 28021071-bece-400b-a0f6-23fb13adfcd3
        description: decision_tree_id
      description:
        type: string
        example: retirement questionnaire
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      name:
        type: string
        example: retirement
        description: name
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
      secondary_id:
        type: string
        example: 7289243787238
      type:
        type: string
        example: retirement plan
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Questionnaire
    description: Questionnaire Object
  ReasonCode:
    type: object
    required:
      - reason_code
    properties:
      category:
        type: string
        example: Deposit
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        additionalProperties:
          type: string
      reason_code:
        type: string
        example: codeSell1543998799676
        description: reasonCode
      reason_code_description:
        type: string
        example: Bank deposit ACH
        description: reasonCodeDescription
      reason_type:
        type: string
        example: ACH
        description: reasonType
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: Bank Deposit
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: ReasonCode
  RiskProfile:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: risk profile category
        description: description
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: risk profile desc
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      name:
        type: string
        example: profile name
        description: name
      risk_score_max:
        type: number
        format: double
        example: 50
        description: risk_score_max
      risk_score_min:
        type: number
        format: double
        example: 25.0000001
        description: risk_score_min
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: RiskProfile
    description: RiskProfile Object
  Score:
    type: object
    required:
      - score_type
      - score_value
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      allocation_id:
        type: string
        format: uuid
        example: 04907eaa-3f33-49be-a35b-378cdf639fba
        description: allocationId
      benchmark_id:
        type: string
        format: uuid
        example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
        description: benchmarkId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      goal_id:
        type: string
        format: uuid
        example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      score_time_stamp:
        type: string
        format: date-time
      score_type:
        type: string
        example: risk_score
        description: scoreType
        enum:
          - goal_achievement_score
          - portfolio_optimization_score
          - credit_score
          - dimensional_risk_score
          - diversification_score
          - risk_score
          - risk_profile
      score_value:
        type: string
        example: 0
        description: scoreValue
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Score
    description: Score Object
  SecuritiesComposition:
    type: object
    required:
      - component_id
      - end_date
      - start_date
      - weight
    properties:
      component_id:
        type: string
        format: uuid
        example: 0000c009-e76f-40cd-a0ad-d4f73bbc700f
        description: Securities Composition component Id
      end_date:
        type: string
        format: date
        example: '2018-01-09''T''12:00:00'
        description: Securities Composition End Date
      start_date:
        type: string
        format: date
        example: '2017-01-09''T''12:00:00'
        description: Securities Composition Start Date
      weight:
        type: number
        format: double
        example: 100
        description: Securities Composition weight
    title: SecuritiesComposition
  SecuritiesCountry:
    type: object
    required:
      - country
      - weight
    properties:
      country:
        type: string
        example: US
        description: country
      weight:
        type: number
        format: double
        example: 1
        description: Securities Country weight
    title: SecuritiesCountry
  Security:
    type: object
    required:
      - name
      - ticker
    properties:
      asset_class:
        type: string
        example: US Equity
        description: Security asset class
      brokers:
        type: array
        example: []
        description: brokers
        items:
          $ref: '#/definitions/Brokers'
      category:
        type: string
        example: sample
        description: Security category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      cusip:
        type: string
        example: xyz
        description: cusip
      description:
        type: string
        example: Security description
        description: description
      exchange:
        type: string
        example: sample
        description: Security exchange
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      image:
        type: string
        example: /sample.png
        description: image
      industry:
        type: string
        example: Heavy Construction
        description: Security industry
      is_active:
        type: boolean
        example: true
        description: Security is active
      isin:
        type: string
        example: xyz
        description: isin
      metadata:
        type: object
        example: {}
        description: metadata
        additionalProperties:
          type: string
      name:
        type: string
        example: XYZ Holdings Limite
        description: Security name
      proxy_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: proxy_id
      secondary_id:
        type: string
        example: 7289243787238
      sector:
        type: string
        example: Industrial Goods
        description: Security sector
      security_class:
        type: string
        example: Mutual Fund
        description: Security class
      security_composition:
        type: array
        items:
          $ref: '#/definitions/SecuritiesComposition'
      security_country:
        type: array
        items:
          $ref: '#/definitions/SecuritiesCountry'
      ticker:
        type: string
        example: JEITX
        description: Security ticker
      total_expense_ratio:
        type: number
        format: float
        example: 10
        description: total_expense_ratio
      type:
        type: string
        example: risky
        description: Security type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Security
  SecurityCompositionVO:
    type: object
    properties:
      end_date:
        type: string
        format: date
      security_asset_class:
        type: string
      security_countries:
        type: array
        items:
          $ref: '#/definitions/SecurityCountryVO'
      security_create_date:
        type: string
        format: date-time
      security_id:
        type: string
        format: uuid
      security_industry:
        type: string
      security_name:
        type: string
      security_secondary_id:
        type: string
      security_sector:
        type: string
      security_security_class:
        type: string
      security_ticker:
        type: string
      security_update_date:
        type: string
        format: date-time
      security_weight:
        type: number
        format: double
      start_date:
        type: string
        format: date
    title: SecurityCompositionVO
  SecurityCountryVO:
    type: object
    properties:
      country:
        type: string
      weight:
        type: number
        format: double
    title: SecurityCountryVO
  SecurityExclusion:
    type: object
    required:
      - client_id
      - is_restrict_buy
      - is_restrict_sell
      - security_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account id
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: Client id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_restrict_buy:
        type: boolean
        example: false
        description: restrict buy
      is_restrict_sell:
        type: boolean
        example: false
        description: restrict sell
      metadata:
        type: object
        additionalProperties:
          type: string
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolio id
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: Security id
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: SecurityExclusion
    description: SecurityExclusion Object
  SecurityPrice:
    type: object
    required:
      - date
      - price
      - security_id
    properties:
      adjusted_price:
        type: number
        format: double
        example: 0.08
        description: Security adjusted price
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Security date
      high:
        type: number
        format: double
        example: 0.08
        description: high
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      low:
        type: number
        format: double
        example: 0.08
        description: low
      open:
        type: number
        format: double
        example: 0.08
        description: open
      price:
        type: number
        format: double
        example: 0.18
        description: Security price
      secondary_id:
        type: string
        example: 7289243787238
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: Security id
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      volume:
        type: number
        format: double
        example: 0.08
        description: volume
    title: SecurityPrice
  Sort:
    type: object
    properties:
      ascending:
        type: boolean
        example: true
        description: ascending
      descending:
        type: boolean
        example: false
        description: descending
      direction:
        type: string
        example: DESC
        description: direction
      ignore_case:
        type: boolean
        example: false
        description: ignoreCase
      null_handling:
        type: string
        example: NATIVE
        description: nullHandling
      property:
        type: string
        example: updateDate
        description: property
    title: Sort
    description: Sort Object
  SpendingControl:
    type: object
    required:
      - control_scope
      - control_type
      - currency_code
    properties:
      client_group:
        type: string
        example: card client group
        description: client_group
      client_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: client_id
      control_scope:
        type: string
        example: merchant
        description: controlScope
      control_type:
        type: string
        example: spending_limit
        description: controlType
      control_values:
        type: array
        example:
          - Entertainment
        description: control_values
        items:
          type: string
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      currency_code:
        type: string
        example: USD
        description: currency_code
      description:
        type: string
        example: card spending description
        description: description
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: one_time
        description: frequency_unit
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: is_active
      limit_value:
        type: number
        format: double
        example: 1000
        description: limitValue
      metadata:
        type: object
        example: {}
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: SpendingControl
    description: SpendingControl Object
  Stage:
    type: object
    required:
      - name
    properties:
      application_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: application_id
      category:
        type: string
        example: xyz
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      description:
        type: string
        example: Client has money fully invested
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_account:
        type: boolean
        example: false
        description: is_account
      is_active:
        type: boolean
        example: true
        description: is_active
      is_business:
        type: boolean
        example: false
        description: is_business
      is_client:
        type: boolean
        example: false
        description: is_client
      is_closed:
        type: boolean
        example: false
        description: is_closed
      is_converted:
        type: boolean
        example: false
        description: is_converted
      is_verified:
        type: boolean
        example: false
        description: is_verified
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Fully Invested
        description: name
      order_index:
        type: integer
        format: int32
        example: 1
        description: orderIndex
      secondary_id:
        type: string
        example: 7289243787238
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: Stage
    description: Stage Object
  State:
    type: object
    properties:
      abbreviation:
        type: string
        example: AL
        description: abbreviation
      country_code:
        type: string
        example: US
        description: countryCode
      state:
        type: string
        example: Alabama
        description: state
    title: State
  StatisticResourceVO:
    type: object
    properties:
      description:
        type: string
      parameter:
        type: string
      stat_name:
        type: string
      type:
        type: string
    title: StatisticResourceVO
  TokenDateRequest:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      buy_transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: buyTransactionCodeId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      date:
        type: string
        format: date-time
        example: '2017-03-06'
        description: date
      sell_transaction_code_id:
        type: string
        format: uuid
        example: 7d8d41d0-ed4b-4ae2-acb3-e0baed2ff1cc
        description: sellTransactionCodeId
      tenant_id:
        type: string
        format: uuid
        example: 3551b26c-7080-4c4b-a8fc-9ce9360460ba
        description: tenantId
    title: TokenDateRequest
    description: TokenDateRequest Object
  TransactionCode:
    type: object
    required:
      - transaction_code
    properties:
      category:
        type: string
        example: Deposit
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_buy:
        type: boolean
        example: false
      is_deposit:
        type: boolean
        example: false
      is_fee:
        type: boolean
        example: false
      is_transfer:
        type: boolean
        example: false
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
      subcategory:
        type: string
        example: Bank Deposit
        description: subcategory
      transaction_code:
        type: string
        example: codeSell1543998799676
        description: transactionCode
      transaction_code_description:
        type: string
        example: Bank deposit ACH
        description: transactionCodeDescription
      transaction_type:
        type: string
        example: ACH
        description: transactionType
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
    title: TransactionCode
  VAccountVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
      account_name:
        type: string
      account_type_id:
        type: string
        format: uuid
      account_type_name:
        type: string
      goal_asset_size_by_account:
        type: number
        format: double
      goal_asset_size_by_account_date:
        type: string
        format: date
    title: VAccountVO
  VClientGoalViewData:
    type: object
    properties:
      client_asset_size:
        type: number
        format: double
      client_asset_size_date:
        type: string
        format: date
      client_first_name:
        type: string
      client_id:
        type: string
        format: uuid
      client_last_name:
        type: string
      client_view_goal_data:
        type: array
        items:
          $ref: '#/definitions/ClientViewGoalData'
    title: VClientGoalViewData
  VPortfolioVO:
    type: object
    properties:
      goal_asset_size_by_portfolio:
        type: number
        format: double
      goal_asset_size_by_portfolio_date:
        type: string
        format: date
      portfolio_id:
        type: string
        format: uuid
      portfolio_name:
        type: string
    title: VPortfolioVO
  Webhook:
    type: object
    required:
      - url
    properties:
      atom_service:
        type: array
        example:
          - client
          - client_status
          - account_status
          - account
          - card
          - card_status
          - portfolio_asset_size
          - portfolio_transaction
          - portfolio_transaction_status
          - portfolio_holding
          - aggregation_account
          - aggregation_account_status
          - notification_client
          - aggregation_account_bala
          - audit_log
          - support_ticket
          - feature_track
          - aggregation_account_transaction
          - aggregation_account_transaction_status
          - aggregation_account_holding
          - order_track
          - funding
          - funding_status
          - budget
          - document
          - client_response
          - client_verified
          - document_verified
          - bank_link_verified
        description: atom_service
        items:
          type: string
          enum:
            - client
            - client_status
            - account_status
            - account
            - card
            - card_status
            - portfolio_asset_size
            - portfolio_transaction
            - portfolio_transaction_status
            - portfolio_holding
            - aggregation_account
            - aggregation_account_status
            - notification_client
            - aggregation_account_balance
            - audit_log
            - support_ticket
            - feature_track
            - aggregation_account_transaction
            - aggregation_account_transaction_status
            - aggregation_account_holding
            - order_track
            - funding
            - funding_status
            - budget
            - document
            - client_response
            - client_verified
            - document_verified
            - bank_link_verified
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
      is_active:
        type: boolean
        example: true
        description: isActive
      secondary_id:
        type: string
        example: 7289243787238
      secret:
        type: string
        example: MDAwMTgzYWMtMjI4OC00NTY0LWE3NmItMTE5ZjQ2OTRiZTk4
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
      url:
        type: string
        example: 'http://localhost/url'
        description: url
    title: Webhook
    description: Webhook Object