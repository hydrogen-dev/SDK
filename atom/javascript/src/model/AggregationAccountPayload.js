/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.AggregationAccountPayload = factory(root.atom_api.ApiClient, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, SecondaryId) {
  'use strict';




  /**
   * The AggregationAccountPayload model module.
   * @module model/AggregationAccountPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>AggregationAccountPayload</code>.
   * @alias module:model/AggregationAccountPayload
   * @class
   * @param clientId {String} The ID of a client to which the aggregation account belongs
   * @param accountName {String} The name of the held-away account for this aggregation account record
   * @param institutionName {String} The name of the institution holding the held-away account for this aggregation account record
   */
  var exports = function(clientId, accountName, institutionName) {
    var _this = this;

    _this['client_id'] = clientId;
    _this['account_name'] = accountName;
    _this['institution_name'] = institutionName;











  };

  /**
   * Constructs a <code>AggregationAccountPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AggregationAccountPayload} obj Optional instance to populate.
   * @return {module:model/AggregationAccountPayload} The populated <code>AggregationAccountPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('client_id')) {
        obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
      }
      if (data.hasOwnProperty('account_name')) {
        obj['account_name'] = ApiClient.convertToType(data['account_name'], 'String');
      }
      if (data.hasOwnProperty('institution_name')) {
        obj['institution_name'] = ApiClient.convertToType(data['institution_name'], 'String');
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = ApiClient.convertToType(data['category'], 'String');
      }
      if (data.hasOwnProperty('subcategory')) {
        obj['subcategory'] = ApiClient.convertToType(data['subcategory'], 'String');
      }
      if (data.hasOwnProperty('account_number')) {
        obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
      }
      if (data.hasOwnProperty('account_holder')) {
        obj['account_holder'] = ApiClient.convertToType(data['account_holder'], 'String');
      }
      if (data.hasOwnProperty('mask')) {
        obj['mask'] = ApiClient.convertToType(data['mask'], 'String');
      }
      if (data.hasOwnProperty('currency_code')) {
        obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
      }
      if (data.hasOwnProperty('is_asset')) {
        obj['is_asset'] = ApiClient.convertToType(data['is_asset'], 'Boolean');
      }
      if (data.hasOwnProperty('financial_offer_id')) {
        obj['financial_offer_id'] = ApiClient.convertToType(data['financial_offer_id'], 'String');
      }
      if (data.hasOwnProperty('is_active')) {
        obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
      if (data.hasOwnProperty('secondary_id')) {
        obj['secondary_id'] = SecondaryId.constructFromObject(data['secondary_id']);
      }
    }
    return obj;
  }

  /**
   * The ID of a client to which the aggregation account belongs
   * @member {String} client_id
   */
  exports.prototype['client_id'] = undefined;
  /**
   * The name of the held-away account for this aggregation account record
   * @member {String} account_name
   */
  exports.prototype['account_name'] = undefined;
  /**
   * The name of the institution holding the held-away account for this aggregation account record
   * @member {String} institution_name
   */
  exports.prototype['institution_name'] = undefined;
  /**
   * Category for the held-away account such as “Bank Account”
   * @member {String} category
   */
  exports.prototype['category'] = undefined;
  /**
   * Subcategory for the held-away account such as “Checking Account”
   * @member {String} subcategory
   */
  exports.prototype['subcategory'] = undefined;
  /**
   * The account number of the held-away account for this aggregation account record
   * @member {String} account_number
   */
  exports.prototype['account_number'] = undefined;
  /**
   * The owner of the held-away account
   * @member {String} account_holder
   */
  exports.prototype['account_holder'] = undefined;
  /**
   * The masked version of the account number of the held-away account for this aggregation account record
   * @member {String} mask
   */
  exports.prototype['mask'] = undefined;
  /**
   * Alphabetic currency code for the base currency of the account linked, limited to 3 characters
   * @member {String} currency_code
   */
  exports.prototype['currency_code'] = undefined;
  /**
   * A flag to represent if this account is an asset or liability. Defaults to true which indicates it is an asset. If false this account is categorized as a liability
   * @member {Boolean} is_asset
   */
  exports.prototype['is_asset'] = undefined;
  /**
   * ID of the financial offer this account matches. Useful so you don’t show clients offers for accounts they already have
   * @member {String} financial_offer_id
   */
  exports.prototype['financial_offer_id'] = undefined;
  /**
   * Indicates if the aggregation account record is active. Defaults to true which indicates it is active
   * @member {Boolean} is_active
   * @default true
   */
  exports.prototype['is_active'] = true;
  /**
   * Custom information associated with the aggregation account in the format key:value
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * @member {module:model/SecondaryId} secondary_id
   */
  exports.prototype['secondary_id'] = undefined;



  return exports;
}));


