/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Answer'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Answer'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.DecisionTreeResultRequest = factory(root.HydrogenProtonApi.ApiClient, root.HydrogenProtonApi.Answer);
  }
}(this, function(ApiClient, Answer) {
  'use strict';

  /**
   * The DecisionTreeResultRequest model module.
   * @module model/DecisionTreeResultRequest
   * @version 1.9.2
   */

  /**
   * Constructs a new <code>DecisionTreeResultRequest</code>.
   * @alias module:model/DecisionTreeResultRequest
   * @class
   * @param entityType {module:model/DecisionTreeResultRequest.EntityTypeEnum} 
   * @param answers {Array.<module:model/Answer>} 
   */
  var exports = function(entityType, answers) {
    this.entityType = entityType;
    this.answers = answers;
  };

  /**
   * Constructs a <code>DecisionTreeResultRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DecisionTreeResultRequest} obj Optional instance to populate.
   * @return {module:model/DecisionTreeResultRequest} The populated <code>DecisionTreeResultRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('entity_type'))
        obj.entityType = ApiClient.convertToType(data['entity_type'], 'String');
      if (data.hasOwnProperty('answers'))
        obj.answers = ApiClient.convertToType(data['answers'], [Answer]);
    }
    return obj;
  }

  /**
   * @member {module:model/DecisionTreeResultRequest.EntityTypeEnum} entityType
   */
  exports.prototype.entityType = undefined;

  /**
   * @member {Array.<module:model/Answer>} answers
   */
  exports.prototype.answers = undefined;



  /**
   * Allowed values for the <code>entityType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EntityTypeEnum = {
    /**
     * value: "model"
     * @const
     */
    model: "model",

    /**
     * value: "allocation"
     * @const
     */
    allocation: "allocation",

    /**
     * value: "insurance_quote"
     * @const
     */
    insuranceQuote: "insurance_quote",

    /**
     * value: "financial_offer"
     * @const
     */
    financialOffer: "financial_offer"
  };

  return exports;

}));
