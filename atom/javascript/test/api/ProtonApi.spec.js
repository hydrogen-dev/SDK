/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.atom_api);
  }
}(this, function(expect, atom_api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new atom_api.ProtonApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProtonApi', function() {
    describe('annuityCalculatorAccumulationHorizon', function() {
      it('should call annuityCalculatorAccumulationHorizon successfully', function(done) {
        //uncomment below and update the code to test annuityCalculatorAccumulationHorizon
        //instance.annuityCalculatorAccumulationHorizon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('annuityCalculatorAnnuityAmount', function() {
      it('should call annuityCalculatorAnnuityAmount successfully', function(done) {
        //uncomment below and update the code to test annuityCalculatorAnnuityAmount
        //instance.annuityCalculatorAnnuityAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('annuityCalculatorDecumulationHorizon', function() {
      it('should call annuityCalculatorDecumulationHorizon successfully', function(done) {
        //uncomment below and update the code to test annuityCalculatorDecumulationHorizon
        //instance.annuityCalculatorDecumulationHorizon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('annuityCalculatorDepositAmount', function() {
      it('should call annuityCalculatorDepositAmount successfully', function(done) {
        //uncomment below and update the code to test annuityCalculatorDepositAmount
        //instance.annuityCalculatorDepositAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('annuityCalculatorInitialBalance', function() {
      it('should call annuityCalculatorInitialBalance successfully', function(done) {
        //uncomment below and update the code to test annuityCalculatorInitialBalance
        //instance.annuityCalculatorInitialBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dimensionalRiskScore', function() {
      it('should call dimensionalRiskScore successfully', function(done) {
        //uncomment below and update the code to test dimensionalRiskScore
        //instance.dimensionalRiskScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('educationCalculatorAnnualCost', function() {
      it('should call educationCalculatorAnnualCost successfully', function(done) {
        //uncomment below and update the code to test educationCalculatorAnnualCost
        //instance.educationCalculatorAnnualCost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('educationCalculatorDepositAmount', function() {
      it('should call educationCalculatorDepositAmount successfully', function(done) {
        //uncomment below and update the code to test educationCalculatorDepositAmount
        //instance.educationCalculatorDepositAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('educationCalculatorPercentCovered', function() {
      it('should call educationCalculatorPercentCovered successfully', function(done) {
        //uncomment below and update the code to test educationCalculatorPercentCovered
        //instance.educationCalculatorPercentCovered(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('emergencyFundCalculator', function() {
      it('should call emergencyFundCalculator successfully', function(done) {
        //uncomment below and update the code to test emergencyFundCalculator
        //instance.emergencyFundCalculator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventStudy', function() {
      it('should call eventStudy successfully', function(done) {
        //uncomment below and update the code to test eventStudy
        //instance.eventStudy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('financialHealthCheck', function() {
      it('should call financialHealthCheck successfully', function(done) {
        //uncomment below and update the code to test financialHealthCheck
        //instance.financialHealthCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalAccumulationAllocation', function() {
      it('should call goalAccumulationAllocation successfully', function(done) {
        //uncomment below and update the code to test goalAccumulationAllocation
        //instance.goalAccumulationAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalAccumulationRecommendation', function() {
      it('should call goalAccumulationRecommendation successfully', function(done) {
        //uncomment below and update the code to test goalAccumulationRecommendation
        //instance.goalAccumulationRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalAccumulationStatus', function() {
      it('should call goalAccumulationStatus successfully', function(done) {
        //uncomment below and update the code to test goalAccumulationStatus
        //instance.goalAccumulationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalDecumulationAllocation', function() {
      it('should call goalDecumulationAllocation successfully', function(done) {
        //uncomment below and update the code to test goalDecumulationAllocation
        //instance.goalDecumulationAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalDecumulationRecommendation', function() {
      it('should call goalDecumulationRecommendation successfully', function(done) {
        //uncomment below and update the code to test goalDecumulationRecommendation
        //instance.goalDecumulationRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('goalDecumulationStatus', function() {
      it('should call goalDecumulationStatus successfully', function(done) {
        //uncomment below and update the code to test goalDecumulationStatus
        //instance.goalDecumulationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lifeInsuranceNeedsCalculator', function() {
      it('should call lifeInsuranceNeedsCalculator successfully', function(done) {
        //uncomment below and update the code to test lifeInsuranceNeedsCalculator
        //instance.lifeInsuranceNeedsCalculator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('modelBacktest', function() {
      it('should call modelBacktest successfully', function(done) {
        //uncomment below and update the code to test modelBacktest
        //instance.modelBacktest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monteCarlo', function() {
      it('should call monteCarlo successfully', function(done) {
        //uncomment below and update the code to test monteCarlo
        //instance.monteCarlo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mortgageCalculatorDownPayment', function() {
      it('should call mortgageCalculatorDownPayment successfully', function(done) {
        //uncomment below and update the code to test mortgageCalculatorDownPayment
        //instance.mortgageCalculatorDownPayment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mortgageCalculatorHomePrice', function() {
      it('should call mortgageCalculatorHomePrice successfully', function(done) {
        //uncomment below and update the code to test mortgageCalculatorHomePrice
        //instance.mortgageCalculatorHomePrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mortgageCalculatorPeriodicPayment', function() {
      it('should call mortgageCalculatorPeriodicPayment successfully', function(done) {
        //uncomment below and update the code to test mortgageCalculatorPeriodicPayment
        //instance.mortgageCalculatorPeriodicPayment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mvo', function() {
      it('should call mvo successfully', function(done) {
        //uncomment below and update the code to test mvo
        //instance.mvo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('portfolioDiversificationScore', function() {
      it('should call portfolioDiversificationScore successfully', function(done) {
        //uncomment below and update the code to test portfolioDiversificationScore
        //instance.portfolioDiversificationScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('portfolioOptimizationScore', function() {
      it('should call portfolioOptimizationScore successfully', function(done) {
        //uncomment below and update the code to test portfolioOptimizationScore
        //instance.portfolioOptimizationScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('portfolioWhatIf', function() {
      it('should call portfolioWhatIf successfully', function(done) {
        //uncomment below and update the code to test portfolioWhatIf
        //instance.portfolioWhatIf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('purchaseCalculatorDepositAmount', function() {
      it('should call purchaseCalculatorDepositAmount successfully', function(done) {
        //uncomment below and update the code to test purchaseCalculatorDepositAmount
        //instance.purchaseCalculatorDepositAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('purchaseCalculatorHorizon', function() {
      it('should call purchaseCalculatorHorizon successfully', function(done) {
        //uncomment below and update the code to test purchaseCalculatorHorizon
        //instance.purchaseCalculatorHorizon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('purchaseCalculatorPurchaseAmount', function() {
      it('should call purchaseCalculatorPurchaseAmount successfully', function(done) {
        //uncomment below and update the code to test purchaseCalculatorPurchaseAmount
        //instance.purchaseCalculatorPurchaseAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rebalancingSignal', function() {
      it('should call rebalancingSignal successfully', function(done) {
        //uncomment below and update the code to test rebalancingSignal
        //instance.rebalancingSignal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retirementCalculatorDepositAmount', function() {
      it('should call retirementCalculatorDepositAmount successfully', function(done) {
        //uncomment below and update the code to test retirementCalculatorDepositAmount
        //instance.retirementCalculatorDepositAmount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retirementCalculatorExpenses', function() {
      it('should call retirementCalculatorExpenses successfully', function(done) {
        //uncomment below and update the code to test retirementCalculatorExpenses
        //instance.retirementCalculatorExpenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retirementCalculatorPercentCovered', function() {
      it('should call retirementCalculatorPercentCovered successfully', function(done) {
        //uncomment below and update the code to test retirementCalculatorPercentCovered
        //instance.retirementCalculatorPercentCovered(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskAllocation', function() {
      it('should call riskAllocation successfully', function(done) {
        //uncomment below and update the code to test riskAllocation
        //instance.riskAllocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskScore', function() {
      it('should call riskScore successfully', function(done) {
        //uncomment below and update the code to test riskScore
        //instance.riskScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('savingsCalculator', function() {
      it('should call savingsCalculator successfully', function(done) {
        //uncomment below and update the code to test savingsCalculator
        //instance.savingsCalculator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scenarioAnalysis', function() {
      it('should call scenarioAnalysis successfully', function(done) {
        //uncomment below and update the code to test scenarioAnalysis
        //instance.scenarioAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sensitivityAnalysis', function() {
      it('should call sensitivityAnalysis successfully', function(done) {
        //uncomment below and update the code to test sensitivityAnalysis
        //instance.sensitivityAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('variableAnnuity', function() {
      it('should call variableAnnuity successfully', function(done) {
        //uncomment below and update the code to test variableAnnuity
        //instance.variableAnnuity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
