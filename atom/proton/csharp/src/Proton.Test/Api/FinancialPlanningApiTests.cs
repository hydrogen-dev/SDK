/* 
 * Hydrogen Proton API
 *
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Proton.Client;
using Proton.Api;

namespace Proton.Test
{
    /// <summary>
    ///  Class for testing FinancialPlanningApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FinancialPlanningApiTests
    {
        private FinancialPlanningApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FinancialPlanningApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FinancialPlanningApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FinancialPlanningApi
            //Assert.IsInstanceOfType(typeof(FinancialPlanningApi), instance, "instance is a FinancialPlanningApi");
        }

        
        /// <summary>
        /// Test EducationCalculatorAnnualCost
        /// </summary>
        [Test]
        public void EducationCalculatorAnnualCostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EducationCalculatorAnnualCostRequest educationCalculatorAnnualCostRequest = null;
            //var response = instance.EducationCalculatorAnnualCost(educationCalculatorAnnualCostRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test EducationCalculatorDepositAmount
        /// </summary>
        [Test]
        public void EducationCalculatorDepositAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EducationCalculatorDepositAmountRequest educationCalculatorDepositAmountRequest = null;
            //var response = instance.EducationCalculatorDepositAmount(educationCalculatorDepositAmountRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test EducationCalculatorPercentCovered
        /// </summary>
        [Test]
        public void EducationCalculatorPercentCoveredTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EducationCalculatorPercentCoveredRequest educationCalculatorPercentCoveredRequest = null;
            //var response = instance.EducationCalculatorPercentCovered(educationCalculatorPercentCoveredRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test MortgageCalculatorDownPayment
        /// </summary>
        [Test]
        public void MortgageCalculatorDownPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MortgageCalculatorDownPaymentRequest mortgageCalculatorDownPaymentRequest = null;
            //var response = instance.MortgageCalculatorDownPayment(mortgageCalculatorDownPaymentRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test MortgageCalculatorHomePrice
        /// </summary>
        [Test]
        public void MortgageCalculatorHomePriceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MortgageCalculatorHomePriceRequest mortgageCalculatorHomePriceRequest = null;
            //var response = instance.MortgageCalculatorHomePrice(mortgageCalculatorHomePriceRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test MortgageCalculatorPeriodicPayment
        /// </summary>
        [Test]
        public void MortgageCalculatorPeriodicPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MortgageCalculatorPeriodicPaymentRequest mortgageCalculatorPeriodicPaymentRequest = null;
            //var response = instance.MortgageCalculatorPeriodicPayment(mortgageCalculatorPeriodicPaymentRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test PurchaseCalculatorAmount
        /// </summary>
        [Test]
        public void PurchaseCalculatorAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseCalculatorAmountRequest purchaseCalculatorAmountRequest = null;
            //var response = instance.PurchaseCalculatorAmount(purchaseCalculatorAmountRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test PurchaseCalculatorDepositAmount
        /// </summary>
        [Test]
        public void PurchaseCalculatorDepositAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseCalculatorDepositAmountRequest purchaseCalculatorDepositAmountRequest = null;
            //var response = instance.PurchaseCalculatorDepositAmount(purchaseCalculatorDepositAmountRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test PurchaseCalculatorHorizon
        /// </summary>
        [Test]
        public void PurchaseCalculatorHorizonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseCalculatorHorizonRequest purchaseCalculatorHorizonRequest = null;
            //var response = instance.PurchaseCalculatorHorizon(purchaseCalculatorHorizonRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RetirementCalculatorDepositAmount
        /// </summary>
        [Test]
        public void RetirementCalculatorDepositAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetirementCalculatorDepositAmountRequest retirementCalculatorDepositAmountRequest = null;
            //var response = instance.RetirementCalculatorDepositAmount(retirementCalculatorDepositAmountRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RetirementCalculatorExpenses
        /// </summary>
        [Test]
        public void RetirementCalculatorExpensesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetirementCalculatorExpensesRequest retirementCalculatorExpensesRequest = null;
            //var response = instance.RetirementCalculatorExpenses(retirementCalculatorExpensesRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RetirementCalculatorPercentCovered
        /// </summary>
        [Test]
        public void RetirementCalculatorPercentCoveredTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetirementCalculatorPercentCoveredRequest retirementCalculatorPercentCoveredRequest = null;
            //var response = instance.RetirementCalculatorPercentCovered(retirementCalculatorPercentCoveredRequest);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
    }

}
