/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DecisionTreeResultRequest', 'model/OrderRebalanceRequest', 'model/PerformanceCalculatorRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DecisionTreeResultRequest'), require('../model/OrderRebalanceRequest'), require('../model/PerformanceCalculatorRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.UtilApi = factory(root.HydrogenProtonApi.ApiClient, root.HydrogenProtonApi.DecisionTreeResultRequest, root.HydrogenProtonApi.OrderRebalanceRequest, root.HydrogenProtonApi.PerformanceCalculatorRequest);
  }
}(this, function(ApiClient, DecisionTreeResultRequest, OrderRebalanceRequest, PerformanceCalculatorRequest) {
  'use strict';

  /**
   * Util service.
   * @module api/UtilApi
   * @version 1.9.2
   */

  /**
   * Constructs a new UtilApi. 
   * @alias module:api/UtilApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the decisionTreeResult operation.
     * @callback module:api/UtilApi~decisionTreeResultCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Decision Tree Result
     * Traverse a decision tree and find the resulting leaf node
     * @param {module:model/DecisionTreeResultRequest} decisionTreeResultRequest Request payload for Decision Tree Result
     * @param {module:api/UtilApi~decisionTreeResultCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.decisionTreeResult = function(decisionTreeResultRequest, callback) {
      var postBody = decisionTreeResultRequest;

      // verify the required parameter 'decisionTreeResultRequest' is set
      if (decisionTreeResultRequest === undefined || decisionTreeResultRequest === null) {
        throw new Error("Missing the required parameter 'decisionTreeResultRequest' when calling decisionTreeResult");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/decision_tree_result', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the orderRebalance operation.
     * @callback module:api/UtilApi~orderRebalanceCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Order Rebalance
     * Create orders to rebalance client accounts or portfolios
     * @param {module:model/OrderRebalanceRequest} orderRebalanceRequest Request payload for Order Rebalance
     * @param {module:api/UtilApi~orderRebalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.orderRebalance = function(orderRebalanceRequest, callback) {
      var postBody = orderRebalanceRequest;

      // verify the required parameter 'orderRebalanceRequest' is set
      if (orderRebalanceRequest === undefined || orderRebalanceRequest === null) {
        throw new Error("Missing the required parameter 'orderRebalanceRequest' when calling orderRebalance");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/order_rebalance', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the performanceCalculator operation.
     * @callback module:api/UtilApi~performanceCalculatorCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performance Calculator
     * Calculate performance/risk metrics for a Nucleus entity
     * @param {module:model/PerformanceCalculatorRequest} performanceCalculatorRequest Request payload for Performance Calculator
     * @param {module:api/UtilApi~performanceCalculatorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.performanceCalculator = function(performanceCalculatorRequest, callback) {
      var postBody = performanceCalculatorRequest;

      // verify the required parameter 'performanceCalculatorRequest' is set
      if (performanceCalculatorRequest === undefined || performanceCalculatorRequest === null) {
        throw new Error("Missing the required parameter 'performanceCalculatorRequest' when calling performanceCalculator");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/performance_calculator', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
