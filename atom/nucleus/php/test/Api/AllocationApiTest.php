<?php
/**
 * AllocationApiTest
 * PHP version 5
 *
 * @category Class
 * @package  com\hydrogen\nucleus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace com\hydrogen\nucleus;

use \com\hydrogen\nucleus\Configuration;
use \com\hydrogen\nucleus\ApiException;
use \com\hydrogen\nucleus\ObjectSerializer;

/**
 * AllocationApiTest Class Doc Comment
 *
 * @category Class
 * @package  com\hydrogen\nucleus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AllocationApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createAllocationCompositionUsingPost
     *
     * Create an allocation composition.
     *
     */
    public function testCreateAllocationCompositionUsingPost()
    {
    }

    /**
     * Test case for createAllocationUsingPost
     *
     * Create an allocation.
     *
     */
    public function testCreateAllocationUsingPost()
    {
    }

    /**
     * Test case for deleteAllocationCompositionUsingDelete
     *
     * Delete an allocation composition.
     *
     */
    public function testDeleteAllocationCompositionUsingDelete()
    {
    }

    /**
     * Test case for deleteAllocationUsingDelete
     *
     * Delete an allocation.
     *
     */
    public function testDeleteAllocationUsingDelete()
    {
    }

    /**
     * Test case for getAllocationAllAggregateDataUsingGet
     *
     * List all Allocation aggregated data overview.
     *
     */
    public function testGetAllocationAllAggregateDataUsingGet()
    {
    }

    /**
     * Test case for getAllocationAllAssetSizeAllUsingGet
     *
     * List all allocation asset sizes.
     *
     */
    public function testGetAllocationAllAssetSizeAllUsingGet()
    {
    }

    /**
     * Test case for getAllocationAllHoldingAllUsingGet
     *
     * List all allocation holdings.
     *
     */
    public function testGetAllocationAllHoldingAllUsingGet()
    {
    }

    /**
     * Test case for getAllocationAllTransactionAllUsingGet
     *
     * List all allocation transactions.
     *
     */
    public function testGetAllocationAllTransactionAllUsingGet()
    {
    }

    /**
     * Test case for getAllocationAllUsingGet
     *
     * List all allocations.
     *
     */
    public function testGetAllocationAllUsingGet()
    {
    }

    /**
     * Test case for getAllocationCompositionAllUsingGet
     *
     * List all allocations compositions.
     *
     */
    public function testGetAllocationCompositionAllUsingGet()
    {
    }

    /**
     * Test case for getAllocationCompositionUsingGet
     *
     * Retrieve an allocation composition.
     *
     */
    public function testGetAllocationCompositionUsingGet()
    {
    }

    /**
     * Test case for getAllocationUsingGet
     *
     * Retrieve an allocation.
     *
     */
    public function testGetAllocationUsingGet()
    {
    }

    /**
     * Test case for updateAllocationCompositionUsingPut
     *
     * Update an allocation composition.
     *
     */
    public function testUpdateAllocationCompositionUsingPut()
    {
    }

    /**
     * Test case for updateAllocationUsingPut
     *
     * Update an allocation.
     *
     */
    public function testUpdateAllocationUsingPut()
    {
    }
}
