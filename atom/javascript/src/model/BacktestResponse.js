/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/HoldingsDetail', 'model/RebalanceSignal', 'model/StatsDetail'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./HoldingsDetail'), require('./RebalanceSignal'), require('./StatsDetail'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.BacktestResponse = factory(root.atom_api.ApiClient, root.atom_api.HoldingsDetail, root.atom_api.RebalanceSignal, root.atom_api.StatsDetail);
  }
}(this, function(ApiClient, HoldingsDetail, RebalanceSignal, StatsDetail) {
  'use strict';




  /**
   * The BacktestResponse model module.
   * @module model/BacktestResponse
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>BacktestResponse</code>.
   * @alias module:model/BacktestResponse
   * @class
   * @param assetSizes {Object.<String, Number>} 
   * @param trades {Array.<module:model/RebalanceSignal>} 
   * @param holdings {Array.<module:model/HoldingsDetail>} 
   * @param stats {module:model/StatsDetail} 
   */
  var exports = function(assetSizes, trades, holdings, stats) {
    var _this = this;

    _this['asset_sizes'] = assetSizes;
    _this['trades'] = trades;
    _this['holdings'] = holdings;
    _this['stats'] = stats;
  };

  /**
   * Constructs a <code>BacktestResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BacktestResponse} obj Optional instance to populate.
   * @return {module:model/BacktestResponse} The populated <code>BacktestResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('asset_sizes')) {
        obj['asset_sizes'] = ApiClient.convertToType(data['asset_sizes'], {'String': 'Number'});
      }
      if (data.hasOwnProperty('trades')) {
        obj['trades'] = ApiClient.convertToType(data['trades'], [RebalanceSignal]);
      }
      if (data.hasOwnProperty('holdings')) {
        obj['holdings'] = ApiClient.convertToType(data['holdings'], [HoldingsDetail]);
      }
      if (data.hasOwnProperty('stats')) {
        obj['stats'] = StatsDetail.constructFromObject(data['stats']);
      }
    }
    return obj;
  }

  /**
   * @member {Object.<String, Number>} asset_sizes
   */
  exports.prototype['asset_sizes'] = undefined;
  /**
   * @member {Array.<module:model/RebalanceSignal>} trades
   */
  exports.prototype['trades'] = undefined;
  /**
   * @member {Array.<module:model/HoldingsDetail>} holdings
   */
  exports.prototype['holdings'] = undefined;
  /**
   * @member {module:model/StatsDetail} stats
   */
  exports.prototype['stats'] = undefined;



  return exports;
}));


