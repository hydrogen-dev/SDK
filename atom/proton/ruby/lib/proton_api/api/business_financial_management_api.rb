=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module ProtonApi
  class BusinessFinancialManagementApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Business Financial Health Check
    # Calculate a series of financial ratios to assess business financial health
    # @param business_financial_health_check_request Request payload for Business Financial Health Check
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def business_financial_health_check(business_financial_health_check_request, opts = {})
      data, _status_code, _headers = business_financial_health_check_with_http_info(business_financial_health_check_request, opts)
      data
    end

    # Business Financial Health Check
    # Calculate a series of financial ratios to assess business financial health
    # @param business_financial_health_check_request Request payload for Business Financial Health Check
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def business_financial_health_check_with_http_info(business_financial_health_check_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BusinessFinancialManagementApi.business_financial_health_check ...'
      end
      # verify the required parameter 'business_financial_health_check_request' is set
      if @api_client.config.client_side_validation && business_financial_health_check_request.nil?
        fail ArgumentError, "Missing the required parameter 'business_financial_health_check_request' when calling BusinessFinancialManagementApi.business_financial_health_check"
      end
      # resource path
      local_var_path = '/business/financial_health_check'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(business_financial_health_check_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessFinancialManagementApi#business_financial_health_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Cash Analysis
    # Analyze cash activity over time
    # @param cash_analysis_request Request payload for Cash Analysis
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def cash_analysis(cash_analysis_request, opts = {})
      data, _status_code, _headers = cash_analysis_with_http_info(cash_analysis_request, opts)
      data
    end

    # Cash Analysis
    # Analyze cash activity over time
    # @param cash_analysis_request Request payload for Cash Analysis
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def cash_analysis_with_http_info(cash_analysis_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BusinessFinancialManagementApi.cash_analysis ...'
      end
      # verify the required parameter 'cash_analysis_request' is set
      if @api_client.config.client_side_validation && cash_analysis_request.nil?
        fail ArgumentError, "Missing the required parameter 'cash_analysis_request' when calling BusinessFinancialManagementApi.cash_analysis"
      end
      # resource path
      local_var_path = '/business/cash_analysis'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(cash_analysis_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessFinancialManagementApi#cash_analysis\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Customer Analysis
    # Analyze customer revenues over a time period
    # @param customer_analysis_request Request payload for Customer Analysis
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def customer_analysis(customer_analysis_request, opts = {})
      data, _status_code, _headers = customer_analysis_with_http_info(customer_analysis_request, opts)
      data
    end

    # Customer Analysis
    # Analyze customer revenues over a time period
    # @param customer_analysis_request Request payload for Customer Analysis
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def customer_analysis_with_http_info(customer_analysis_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BusinessFinancialManagementApi.customer_analysis ...'
      end
      # verify the required parameter 'customer_analysis_request' is set
      if @api_client.config.client_side_validation && customer_analysis_request.nil?
        fail ArgumentError, "Missing the required parameter 'customer_analysis_request' when calling BusinessFinancialManagementApi.customer_analysis"
      end
      # resource path
      local_var_path = '/business/customer_analysis'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(customer_analysis_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessFinancialManagementApi#customer_analysis\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Financial Statement Analysis
    # Analyze financial statement accounting data for a business
    # @param financial_statement_analysis_request Request payload for Financial Statement Analysis
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def financial_statement_analysis(financial_statement_analysis_request, opts = {})
      data, _status_code, _headers = financial_statement_analysis_with_http_info(financial_statement_analysis_request, opts)
      data
    end

    # Financial Statement Analysis
    # Analyze financial statement accounting data for a business
    # @param financial_statement_analysis_request Request payload for Financial Statement Analysis
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def financial_statement_analysis_with_http_info(financial_statement_analysis_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BusinessFinancialManagementApi.financial_statement_analysis ...'
      end
      # verify the required parameter 'financial_statement_analysis_request' is set
      if @api_client.config.client_side_validation && financial_statement_analysis_request.nil?
        fail ArgumentError, "Missing the required parameter 'financial_statement_analysis_request' when calling BusinessFinancialManagementApi.financial_statement_analysis"
      end
      # resource path
      local_var_path = '/business/financial_statement_analysis'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(financial_statement_analysis_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessFinancialManagementApi#financial_statement_analysis\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Invoice Analysis
    # Analyze invoices to understand the context of money owed and paid to a business
    # @param invoice_analysis_request Request payload for Invoice Analysis
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def invoice_analysis(invoice_analysis_request, opts = {})
      data, _status_code, _headers = invoice_analysis_with_http_info(invoice_analysis_request, opts)
      data
    end

    # Invoice Analysis
    # Analyze invoices to understand the context of money owed and paid to a business
    # @param invoice_analysis_request Request payload for Invoice Analysis
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def invoice_analysis_with_http_info(invoice_analysis_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BusinessFinancialManagementApi.invoice_analysis ...'
      end
      # verify the required parameter 'invoice_analysis_request' is set
      if @api_client.config.client_side_validation && invoice_analysis_request.nil?
        fail ArgumentError, "Missing the required parameter 'invoice_analysis_request' when calling BusinessFinancialManagementApi.invoice_analysis"
      end
      # resource path
      local_var_path = '/business/invoice_analysis'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(invoice_analysis_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessFinancialManagementApi#invoice_analysis\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
