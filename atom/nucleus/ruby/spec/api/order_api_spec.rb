=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.9.5
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::OrderApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrderApi' do
  before do
    # run before each test
    @instance = NucleusApi::OrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrderApi' do
    it 'should create an instance of OrderApi' do
      expect(@instance).to be_instance_of(NucleusApi::OrderApi)
    end
  end

  # unit tests for create_account_order_bulk_using_post
  # Bulk orders for an account
  # Aggregates all orders on a given date for an account.
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<Order>]
  describe 'create_account_order_bulk_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_order_buy_only_using_post
  # Create buy-only account rebalance orders
  # Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_account_order_buy_only_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_order_rebalance_using_post
  # Create account rebalance orders
  # Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe. 
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_account_order_rebalance_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_order_reconciliation
  # Create account reconciliation order
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [OrderReconcileReturnObject]
  describe 'create_account_order_reconciliation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_order_sell_all_using_post
  # Sell all account order
  # Create order records necessary to entirely sell all the holdings within an account.
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_account_order_sell_all_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_order_sell_only_using_post
  # Create sell-only account rebalance orders
  # Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
  # @param account_id account_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_account_order_sell_only_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_client_order_bulk_using_post
  # Bulk orders for a client
  # Aggregates all orders on a given date for a client
  # @param client_id client_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<Order>]
  describe 'create_client_order_bulk_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_order_bulk_using_post
  # Bulk orders for your firm
  # Aggregates all orders on a given date for your firm.
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<Order>]
  describe 'create_order_bulk_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_order_status_using_post
  # Create an order status
  # Create an order status for your firm.
  # @param order_status_request orderStatusRequest
  # @param [Hash] opts the optional parameters
  # @return [OrderStatus]
  describe 'create_order_status_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_order_track_using_post
  # Create an order tracking record
  # Create a new order tracking record for an order.
  # @param order_track_request orderTrackRequest
  # @param [Hash] opts the optional parameters
  # @return [OrderTrack]
  describe 'create_order_track_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_order_using_post
  # Create an order record
  # Create an order record defined for your firm.
  # @param order_info_request orderInfoRequest
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'create_order_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_portfolio_order_buy_only_using_post
  # Create buy-only portfolio rebalance orders
  # Create order records necessary to rebalance a portfolio to the model to which it subscribes. However, these will only be buy transactions, and no securities will be sold.
  # @param portfolio_id portfolio_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_portfolio_order_buy_only_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_portfolio_order_rebalance_using_post
  # Create portfolio rebalance orders
  # Create order records necessary to rebalance a portfolio to the model to which it subscribes.
  # @param portfolio_id portfolio_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_portfolio_order_rebalance_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_portfolio_order_reconciliation
  # Create portfolio reconciliation order
  # @param portfolio_id portfolio_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [OrderReconcileReturnObject]
  describe 'create_portfolio_order_reconciliation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_portfolio_order_sell_all_using_post
  # Sell all portfolio order
  # Create order records necessary to entirely sell all the holdings within a portfolio.
  # @param portfolio_id portfolio_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_portfolio_order_sell_all_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_portfolio_order_sell_only_using_post
  # Create sell-only portfolio rebalance orders
  # Create order records necessary to rebalance a portfolio to the model to which it subscribes.
  # @param portfolio_id portfolio_id
  # @param req req
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderVoClone>]
  describe 'create_portfolio_order_sell_only_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_order_status_using_delete
  # Delete an order status
  # Permanently delete an order status defined for your firm.
  # @param order_status_id UUID order_status_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_order_status_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_order_track_using_delete
  # Delete an order tracking record
  # Permanently delete an order tracking record for an order.
  # @param order_track_id UUID order_track_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_order_track_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_order_using_delete
  # Delete an order record
  # Permanently delete an order record.
  # @param order_id UUID order_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_order_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_all_using_get
  # List all order records
  # Get the information for all order records defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageOrder]
  describe 'get_order_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_bulk_all_using_get
  # List all bulk orders
  # Get the information for all bulk order records.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageOrderBulk]
  describe 'get_order_bulk_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_status_all_using_get
  # List all order statuses
  # Get the information for all order statuses defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageOrderStatus]
  describe 'get_order_status_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_status_using_get
  # Retrieve an order status
  # Retrieve the information for an order status defined for your firm.
  # @param order_status_id UUID order_status_id
  # @param [Hash] opts the optional parameters
  # @return [OrderStatus]
  describe 'get_order_status_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_track_all_using_get
  # List all order tracking records
  # Get the information for all order tracking record for all order records.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageOrderTrack]
  describe 'get_order_track_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_track_using_get
  # Retrieve an order tracking record
  # Retrieve the information for an order tracking record for an order.
  # @param order_track_id UUID order_track_id
  # @param [Hash] opts the optional parameters
  # @return [OrderTrack]
  describe 'get_order_track_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_using_get
  # Retrieve an order record
  # Retrieve the information for an order record.
  # @param order_id UUID order_id
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'get_order_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_order_status_using_put
  # Update an order status
  # Update the information for an order status defined for your firm.
  # @param order_status order_status
  # @param order_status_id UUID order_status_id
  # @param [Hash] opts the optional parameters
  # @return [OrderStatus]
  describe 'update_order_status_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_order_track_using_put
  # Update an order tracking record
  # Update the information for an order tracking record for an order.
  # @param order_track order_track
  # @param order_track_id UUID order_track_id
  # @param [Hash] opts the optional parameters
  # @return [OrderTrack]
  describe 'update_order_track_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_order_using_put
  # Update an order record
  # Update the information for an order record.
  # @param order order
  # @param order_id UUID order_id
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'update_order_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
