/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.OrderTrackPayload = factory(root.atom_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The OrderTrackPayload model module.
   * @module model/OrderTrackPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>OrderTrackPayload</code>.
   * @alias module:model/OrderTrackPayload
   * @class
   * @param orderId {String} The ID of the order that the to which order track record belongs
   * @param orderStatusId {String} The ID of the order status currently assigned to the order track record
   * @param _date {Date} Date of the order track record
   */
  var exports = function(orderId, orderStatusId, _date) {
    var _this = this;

    _this['order_id'] = orderId;
    _this['order_status_id'] = orderStatusId;
    _this['date'] = _date;






  };

  /**
   * Constructs a <code>OrderTrackPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderTrackPayload} obj Optional instance to populate.
   * @return {module:model/OrderTrackPayload} The populated <code>OrderTrackPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('order_id')) {
        obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
      }
      if (data.hasOwnProperty('order_status_id')) {
        obj['order_status_id'] = ApiClient.convertToType(data['order_status_id'], 'String');
      }
      if (data.hasOwnProperty('date')) {
        obj['date'] = ApiClient.convertToType(data['date'], 'Date');
      }
      if (data.hasOwnProperty('commission')) {
        obj['commission'] = ApiClient.convertToType(data['commission'], 'Number');
      }
      if (data.hasOwnProperty('external_track_id')) {
        obj['external_track_id'] = ApiClient.convertToType(data['external_track_id'], 'String');
      }
      if (data.hasOwnProperty('fee')) {
        obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
    }
    return obj;
  }

  /**
   * The ID of the order that the to which order track record belongs
   * @member {String} order_id
   */
  exports.prototype['order_id'] = undefined;
  /**
   * The ID of the order status currently assigned to the order track record
   * @member {String} order_status_id
   */
  exports.prototype['order_status_id'] = undefined;
  /**
   * Date of the order track record
   * @member {Date} date
   */
  exports.prototype['date'] = undefined;
  /**
   * Commission earned by the agent on the order
   * @member {Number} commission
   */
  exports.prototype['commission'] = undefined;
  /**
   * The external ID used by the agent or other party executing the order to track the order ticket (if provided)
   * @member {String} external_track_id
   */
  exports.prototype['external_track_id'] = undefined;
  /**
   * Total fees associated with the order
   * @member {Number} fee
   */
  exports.prototype['fee'] = undefined;
  /**
   * Execution price at which the securities in the order were bought or sold
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Quantity of securities that were bought or sold
   * @member {Number} quantity
   */
  exports.prototype['quantity'] = undefined;
  /**
   * Custom information associated with the order tracking record in the format key:value
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;



  return exports;
}));


