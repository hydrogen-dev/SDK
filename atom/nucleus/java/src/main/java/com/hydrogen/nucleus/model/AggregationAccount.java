/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Aggregation Account Object
 */
@ApiModel(description = "Aggregation Account Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class AggregationAccount {
  @SerializedName("account_category_id")
  private UUID accountCategoryId = null;

  @SerializedName("account_holder")
  private String accountHolder = null;

  @SerializedName("account_name")
  private String accountName = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("apr")
  private Float apr = null;

  @SerializedName("apy")
  private Float apy = null;

  @SerializedName("bank_link_id")
  private UUID bankLinkId = null;

  @SerializedName("business_id")
  private UUID businessId = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("credit_limit")
  private Float creditLimit = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("death_benefit")
  private Float deathBenefit = null;

  @SerializedName("financial_offer_id")
  private UUID financialOfferId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("institution_id")
  private UUID institutionId = null;

  @SerializedName("institution_name")
  private String institutionName = null;

  @SerializedName("interest_rate")
  private Float interestRate = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("is_asset")
  private Boolean isAsset = null;

  @SerializedName("is_business")
  private Boolean isBusiness = null;

  @SerializedName("is_cash")
  private Boolean isCash = null;

  @SerializedName("is_investment")
  private Boolean isInvestment = null;

  @SerializedName("is_link_verified")
  private Boolean isLinkVerified = null;

  @SerializedName("is_manual")
  private Boolean isManual = null;

  @SerializedName("last_payment")
  private Float lastPayment = null;

  @SerializedName("last_payment_date")
  private OffsetDateTime lastPaymentDate = null;

  @SerializedName("mask")
  private String mask = null;

  @SerializedName("maturity_date")
  private OffsetDateTime maturityDate = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("minimum_payment")
  private Float minimumPayment = null;

  @SerializedName("next_payment_date")
  private OffsetDateTime nextPaymentDate = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("subcategory")
  private String subcategory = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public AggregationAccount accountCategoryId(UUID accountCategoryId) {
    this.accountCategoryId = accountCategoryId;
    return this;
  }

   /**
   * accountCategoryId
   * @return accountCategoryId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", value = "accountCategoryId")
  public UUID getAccountCategoryId() {
    return accountCategoryId;
  }

  public void setAccountCategoryId(UUID accountCategoryId) {
    this.accountCategoryId = accountCategoryId;
  }

  public AggregationAccount accountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
    return this;
  }

   /**
   * accountHolder
   * @return accountHolder
  **/
  @ApiModelProperty(value = "accountHolder")
  public String getAccountHolder() {
    return accountHolder;
  }

  public void setAccountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
  }

  public AggregationAccount accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * accountName
   * @return accountName
  **/
  @ApiModelProperty(example = "Bank Gold Checking", required = true, value = "accountName")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public AggregationAccount accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(value = "")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public AggregationAccount apr(Float apr) {
    this.apr = apr;
    return this;
  }

   /**
   * apr
   * @return apr
  **/
  @ApiModelProperty(example = "10.0", value = "apr")
  public Float getApr() {
    return apr;
  }

  public void setApr(Float apr) {
    this.apr = apr;
  }

  public AggregationAccount apy(Float apy) {
    this.apy = apy;
    return this;
  }

   /**
   * apy
   * @return apy
  **/
  @ApiModelProperty(example = "10.0", value = "apy")
  public Float getApy() {
    return apy;
  }

  public void setApy(Float apy) {
    this.apy = apy;
  }

  public AggregationAccount bankLinkId(UUID bankLinkId) {
    this.bankLinkId = bankLinkId;
    return this;
  }

   /**
   * bankLinkId
   * @return bankLinkId
  **/
  @ApiModelProperty(example = "02ec7d90-02fc-46c7-b201-def9b16ef65a", value = "bankLinkId")
  public UUID getBankLinkId() {
    return bankLinkId;
  }

  public void setBankLinkId(UUID bankLinkId) {
    this.bankLinkId = bankLinkId;
  }

  public AggregationAccount businessId(UUID businessId) {
    this.businessId = businessId;
    return this;
  }

   /**
   * businessId
   * @return businessId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", value = "businessId")
  public UUID getBusinessId() {
    return businessId;
  }

  public void setBusinessId(UUID businessId) {
    this.businessId = businessId;
  }

  public AggregationAccount category(String category) {
    this.category = category;
    return this;
  }

   /**
   * category
   * @return category
  **/
  @ApiModelProperty(example = "Bank Account", required = true, value = "category")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AggregationAccount clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * clientId
   * @return clientId
  **/
  @ApiModelProperty(example = "2035f52d-2c5b-4e07-8904-cb037bad7aff", value = "clientId")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public AggregationAccount createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public AggregationAccount creditLimit(Float creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * creditLimit
   * @return creditLimit
  **/
  @ApiModelProperty(example = "10.0", value = "creditLimit")
  public Float getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(Float creditLimit) {
    this.creditLimit = creditLimit;
  }

  public AggregationAccount currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", value = "currencyCode")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public AggregationAccount deathBenefit(Float deathBenefit) {
    this.deathBenefit = deathBenefit;
    return this;
  }

   /**
   * deathBenefit
   * @return deathBenefit
  **/
  @ApiModelProperty(example = "10.0", value = "deathBenefit")
  public Float getDeathBenefit() {
    return deathBenefit;
  }

  public void setDeathBenefit(Float deathBenefit) {
    this.deathBenefit = deathBenefit;
  }

  public AggregationAccount financialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
    return this;
  }

   /**
   * financialOfferId
   * @return financialOfferId
  **/
  @ApiModelProperty(example = "2035f52d-2c5b-4e07-8904-cb037bad7aff", value = "financialOfferId")
  public UUID getFinancialOfferId() {
    return financialOfferId;
  }

  public void setFinancialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
  }

  public AggregationAccount id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public AggregationAccount institutionId(UUID institutionId) {
    this.institutionId = institutionId;
    return this;
  }

   /**
   * institutionId
   * @return institutionId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", value = "institutionId")
  public UUID getInstitutionId() {
    return institutionId;
  }

  public void setInstitutionId(UUID institutionId) {
    this.institutionId = institutionId;
  }

  public AggregationAccount institutionName(String institutionName) {
    this.institutionName = institutionName;
    return this;
  }

   /**
   * institutionName
   * @return institutionName
  **/
  @ApiModelProperty(example = "Citywide Bank", required = true, value = "institutionName")
  public String getInstitutionName() {
    return institutionName;
  }

  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }

  public AggregationAccount interestRate(Float interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * interestRate
   * @return interestRate
  **/
  @ApiModelProperty(example = "10.0", value = "interestRate")
  public Float getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(Float interestRate) {
    this.interestRate = interestRate;
  }

  public AggregationAccount isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * isActive
   * @return isActive
  **/
  @ApiModelProperty(example = "true", value = "isActive")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public AggregationAccount isAsset(Boolean isAsset) {
    this.isAsset = isAsset;
    return this;
  }

   /**
   * Get isAsset
   * @return isAsset
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsAsset() {
    return isAsset;
  }

  public void setIsAsset(Boolean isAsset) {
    this.isAsset = isAsset;
  }

  public AggregationAccount isBusiness(Boolean isBusiness) {
    this.isBusiness = isBusiness;
    return this;
  }

   /**
   * Get isBusiness
   * @return isBusiness
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsBusiness() {
    return isBusiness;
  }

  public void setIsBusiness(Boolean isBusiness) {
    this.isBusiness = isBusiness;
  }

  public AggregationAccount isCash(Boolean isCash) {
    this.isCash = isCash;
    return this;
  }

   /**
   * Get isCash
   * @return isCash
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsCash() {
    return isCash;
  }

  public void setIsCash(Boolean isCash) {
    this.isCash = isCash;
  }

  public AggregationAccount isInvestment(Boolean isInvestment) {
    this.isInvestment = isInvestment;
    return this;
  }

   /**
   * Get isInvestment
   * @return isInvestment
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsInvestment() {
    return isInvestment;
  }

  public void setIsInvestment(Boolean isInvestment) {
    this.isInvestment = isInvestment;
  }

  public AggregationAccount isLinkVerified(Boolean isLinkVerified) {
    this.isLinkVerified = isLinkVerified;
    return this;
  }

   /**
   * isLinkVerified
   * @return isLinkVerified
  **/
  @ApiModelProperty(example = "true", value = "isLinkVerified")
  public Boolean isIsLinkVerified() {
    return isLinkVerified;
  }

  public void setIsLinkVerified(Boolean isLinkVerified) {
    this.isLinkVerified = isLinkVerified;
  }

  public AggregationAccount isManual(Boolean isManual) {
    this.isManual = isManual;
    return this;
  }

   /**
   * isManual
   * @return isManual
  **/
  @ApiModelProperty(example = "false", value = "isManual")
  public Boolean isIsManual() {
    return isManual;
  }

  public void setIsManual(Boolean isManual) {
    this.isManual = isManual;
  }

  public AggregationAccount lastPayment(Float lastPayment) {
    this.lastPayment = lastPayment;
    return this;
  }

   /**
   * lastPayment
   * @return lastPayment
  **/
  @ApiModelProperty(example = "10.0", value = "lastPayment")
  public Float getLastPayment() {
    return lastPayment;
  }

  public void setLastPayment(Float lastPayment) {
    this.lastPayment = lastPayment;
  }

  public AggregationAccount lastPaymentDate(OffsetDateTime lastPaymentDate) {
    this.lastPaymentDate = lastPaymentDate;
    return this;
  }

   /**
   * lastPaymentDate
   * @return lastPaymentDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "lastPaymentDate")
  public OffsetDateTime getLastPaymentDate() {
    return lastPaymentDate;
  }

  public void setLastPaymentDate(OffsetDateTime lastPaymentDate) {
    this.lastPaymentDate = lastPaymentDate;
  }

  public AggregationAccount mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * mask
   * @return mask
  **/
  @ApiModelProperty(value = "mask")
  public String getMask() {
    return mask;
  }

  public void setMask(String mask) {
    this.mask = mask;
  }

  public AggregationAccount maturityDate(OffsetDateTime maturityDate) {
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * maturityDate
   * @return maturityDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "maturityDate")
  public OffsetDateTime getMaturityDate() {
    return maturityDate;
  }

  public void setMaturityDate(OffsetDateTime maturityDate) {
    this.maturityDate = maturityDate;
  }

  public AggregationAccount metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public AggregationAccount putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "{}", value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public AggregationAccount minimumPayment(Float minimumPayment) {
    this.minimumPayment = minimumPayment;
    return this;
  }

   /**
   * minimumPayment
   * @return minimumPayment
  **/
  @ApiModelProperty(example = "10.0", value = "minimumPayment")
  public Float getMinimumPayment() {
    return minimumPayment;
  }

  public void setMinimumPayment(Float minimumPayment) {
    this.minimumPayment = minimumPayment;
  }

  public AggregationAccount nextPaymentDate(OffsetDateTime nextPaymentDate) {
    this.nextPaymentDate = nextPaymentDate;
    return this;
  }

   /**
   * nextPaymentDate
   * @return nextPaymentDate
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "nextPaymentDate")
  public OffsetDateTime getNextPaymentDate() {
    return nextPaymentDate;
  }

  public void setNextPaymentDate(OffsetDateTime nextPaymentDate) {
    this.nextPaymentDate = nextPaymentDate;
  }

  public AggregationAccount secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public AggregationAccount subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * subcategory
   * @return subcategory
  **/
  @ApiModelProperty(example = "Checking Account", value = "subcategory")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }

  public AggregationAccount updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationAccount aggregationAccount = (AggregationAccount) o;
    return Objects.equals(this.accountCategoryId, aggregationAccount.accountCategoryId) &&
        Objects.equals(this.accountHolder, aggregationAccount.accountHolder) &&
        Objects.equals(this.accountName, aggregationAccount.accountName) &&
        Objects.equals(this.accountNumber, aggregationAccount.accountNumber) &&
        Objects.equals(this.apr, aggregationAccount.apr) &&
        Objects.equals(this.apy, aggregationAccount.apy) &&
        Objects.equals(this.bankLinkId, aggregationAccount.bankLinkId) &&
        Objects.equals(this.businessId, aggregationAccount.businessId) &&
        Objects.equals(this.category, aggregationAccount.category) &&
        Objects.equals(this.clientId, aggregationAccount.clientId) &&
        Objects.equals(this.createDate, aggregationAccount.createDate) &&
        Objects.equals(this.creditLimit, aggregationAccount.creditLimit) &&
        Objects.equals(this.currencyCode, aggregationAccount.currencyCode) &&
        Objects.equals(this.deathBenefit, aggregationAccount.deathBenefit) &&
        Objects.equals(this.financialOfferId, aggregationAccount.financialOfferId) &&
        Objects.equals(this.id, aggregationAccount.id) &&
        Objects.equals(this.institutionId, aggregationAccount.institutionId) &&
        Objects.equals(this.institutionName, aggregationAccount.institutionName) &&
        Objects.equals(this.interestRate, aggregationAccount.interestRate) &&
        Objects.equals(this.isActive, aggregationAccount.isActive) &&
        Objects.equals(this.isAsset, aggregationAccount.isAsset) &&
        Objects.equals(this.isBusiness, aggregationAccount.isBusiness) &&
        Objects.equals(this.isCash, aggregationAccount.isCash) &&
        Objects.equals(this.isInvestment, aggregationAccount.isInvestment) &&
        Objects.equals(this.isLinkVerified, aggregationAccount.isLinkVerified) &&
        Objects.equals(this.isManual, aggregationAccount.isManual) &&
        Objects.equals(this.lastPayment, aggregationAccount.lastPayment) &&
        Objects.equals(this.lastPaymentDate, aggregationAccount.lastPaymentDate) &&
        Objects.equals(this.mask, aggregationAccount.mask) &&
        Objects.equals(this.maturityDate, aggregationAccount.maturityDate) &&
        Objects.equals(this.metadata, aggregationAccount.metadata) &&
        Objects.equals(this.minimumPayment, aggregationAccount.minimumPayment) &&
        Objects.equals(this.nextPaymentDate, aggregationAccount.nextPaymentDate) &&
        Objects.equals(this.secondaryId, aggregationAccount.secondaryId) &&
        Objects.equals(this.subcategory, aggregationAccount.subcategory) &&
        Objects.equals(this.updateDate, aggregationAccount.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCategoryId, accountHolder, accountName, accountNumber, apr, apy, bankLinkId, businessId, category, clientId, createDate, creditLimit, currencyCode, deathBenefit, financialOfferId, id, institutionId, institutionName, interestRate, isActive, isAsset, isBusiness, isCash, isInvestment, isLinkVerified, isManual, lastPayment, lastPaymentDate, mask, maturityDate, metadata, minimumPayment, nextPaymentDate, secondaryId, subcategory, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationAccount {\n");
    
    sb.append("    accountCategoryId: ").append(toIndentedString(accountCategoryId)).append("\n");
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    apr: ").append(toIndentedString(apr)).append("\n");
    sb.append("    apy: ").append(toIndentedString(apy)).append("\n");
    sb.append("    bankLinkId: ").append(toIndentedString(bankLinkId)).append("\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    deathBenefit: ").append(toIndentedString(deathBenefit)).append("\n");
    sb.append("    financialOfferId: ").append(toIndentedString(financialOfferId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAsset: ").append(toIndentedString(isAsset)).append("\n");
    sb.append("    isBusiness: ").append(toIndentedString(isBusiness)).append("\n");
    sb.append("    isCash: ").append(toIndentedString(isCash)).append("\n");
    sb.append("    isInvestment: ").append(toIndentedString(isInvestment)).append("\n");
    sb.append("    isLinkVerified: ").append(toIndentedString(isLinkVerified)).append("\n");
    sb.append("    isManual: ").append(toIndentedString(isManual)).append("\n");
    sb.append("    lastPayment: ").append(toIndentedString(lastPayment)).append("\n");
    sb.append("    lastPaymentDate: ").append(toIndentedString(lastPaymentDate)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    minimumPayment: ").append(toIndentedString(minimumPayment)).append("\n");
    sb.append("    nextPaymentDate: ").append(toIndentedString(nextPaymentDate)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

