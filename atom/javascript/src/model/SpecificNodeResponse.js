/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateNodeResponse', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CreateNodeResponse'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.SpecificNodeResponse = factory(root.atom_api.ApiClient, root.atom_api.CreateNodeResponse, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, CreateNodeResponse, SecondaryId) {
  'use strict';




  /**
   * The SpecificNodeResponse model module.
   * @module model/SpecificNodeResponse
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>SpecificNodeResponse</code>.
   * @alias module:model/SpecificNodeResponse
   * @class
   * @implements module:model/CreateNodeResponse
   * @param name {String} Name of the node
   * @param questionId {String} The ID of the question that corresponds to this node
   */
  var exports = function(name, questionId) {
    var _this = this;

    CreateNodeResponse.call(_this, name, questionId);

  };

  /**
   * Constructs a <code>SpecificNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SpecificNodeResponse} obj Optional instance to populate.
   * @return {module:model/SpecificNodeResponse} The populated <code>SpecificNodeResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      CreateNodeResponse.constructFromObject(data, obj);
      if (data.hasOwnProperty('update_date')) {
        obj['update_date'] = ApiClient.convertToType(data['update_date'], 'String');
      }
    }
    return obj;
  }

  /**
   * Datetime the node was last updated
   * @member {String} update_date
   */
  exports.prototype['update_date'] = undefined;

  // Implement CreateNodeResponse interface:
  /**
   * Name of the node
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * The ID of the question that corresponds to this node
   * @member {String} question_id
   */
exports.prototype['question_id'] = undefined;

  /**
   * Indicates if this is the first node of the decision tree. Defaults to false meaning it is not the first node
   * @member {Boolean} is_first
   * @default false
   */
exports.prototype['is_first'] = false;

  /**
   * @member {module:model/SecondaryId} secondary_id
   */
exports.prototype['secondary_id'] = undefined;

  /**
   * Custom information associated with the node in the format key:value
   * @member {Object} metadata
   */
exports.prototype['metadata'] = undefined;

  /**
   * ID of the node
   * @member {String} id
   */
exports.prototype['id'] = undefined;

  /**
   * Datetime the node was created
   * @member {String} create_date
   */
exports.prototype['create_date'] = undefined;



  return exports;
}));


