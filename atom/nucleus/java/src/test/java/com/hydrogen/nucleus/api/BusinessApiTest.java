/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.api;

import com.hydrogen.nucleus.ApiException;
import com.hydrogen.nucleus.model.AvailableDateDoubleVO;
import com.hydrogen.nucleus.model.Business;
import org.threeten.bp.LocalDate;
import com.hydrogen.nucleus.model.PageBusiness;
import com.hydrogen.nucleus.model.PagePortfolioHoldingAgg;
import com.hydrogen.nucleus.model.PagePortfolioTransaction;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BusinessApi
 */
@Ignore
public class BusinessApiTest {

    private final BusinessApi api = new BusinessApi();

    
    /**
     * Create a business
     *
     * Create a new business, or register a new business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBusinessUsingPostTest() throws ApiException {
        Business businessRequest = null;
        Business response = api.createBusinessUsingPost(businessRequest);

        // TODO: test validations
    }
    
    /**
     * Delete a business
     *
     * Permanently delete a business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBusinessUsingDeleteTest() throws ApiException {
        UUID businessId = null;
        api.deleteBusinessUsingDelete(businessId);

        // TODO: test validations
    }
    
    /**
     * List all business
     *
     * Get details for all business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBusinessAllUsingGetTest() throws ApiException {
        Boolean ascending = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        PageBusiness response = api.getBusinessAllUsingGet(ascending, filter, orderBy, page, size);

        // TODO: test validations
    }
    
    /**
     * List all business asset sizes
     *
     * Get a list of asset sizes per date for a business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBusinessAssetSizeUsingGetTest() throws ApiException {
        UUID businessId = null;
        String currencyConversion = null;
        LocalDate endDate = null;
        Boolean excludeSubledger = null;
        Boolean getLatest = null;
        String sortType = null;
        LocalDate startDate = null;
        List<AvailableDateDoubleVO> response = api.getBusinessAssetSizeUsingGet(businessId, currencyConversion, endDate, excludeSubledger, getLatest, sortType, startDate);

        // TODO: test validations
    }
    
    /**
     * List all business transactions
     *
     * Get the information for all transactions under all client registered with your business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBusinessClientTransactionAllUsingGetTest() throws ApiException {
        UUID businessId = null;
        Boolean ascending = null;
        String currencyConversion = null;
        String endDate = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        String startDate = null;
        PagePortfolioTransaction response = api.getBusinessClientTransactionAllUsingGet(businessId, ascending, currencyConversion, endDate, filter, orderBy, page, size, startDate);

        // TODO: test validations
    }
    
    /**
     * List all business holdings
     *
     * Get a list of holdings for a business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBusinessHoldingUsingGetTest() throws ApiException {
        UUID businessId = null;
        Boolean ascending = null;
        String currencyConversion = null;
        String endDate = null;
        String filter = null;
        Boolean getLatest = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        String startDate = null;
        PagePortfolioHoldingAgg response = api.getBusinessHoldingUsingGet(businessId, ascending, currencyConversion, endDate, filter, getLatest, orderBy, page, size, startDate);

        // TODO: test validations
    }
    
    /**
     * Retrieve a business
     *
     * Retrieve the information for a business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBusinessUsingGetTest() throws ApiException {
        UUID businessId = null;
        Business response = api.getBusinessUsingGet(businessId);

        // TODO: test validations
    }
    
    /**
     * Update a business
     *
     * Update the information for a business.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBusinessUsingPutTest() throws ApiException {
        Object business = null;
        UUID businessId = null;
        Business response = api.updateBusinessUsingPut(business, businessId);

        // TODO: test validations
    }
    
}
