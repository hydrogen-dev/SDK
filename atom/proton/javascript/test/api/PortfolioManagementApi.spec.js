/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenProtonApi);
  }
}(this, function(expect, HydrogenProtonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenProtonApi.PortfolioManagementApi();
  });

  describe('(package)', function() {
    describe('PortfolioManagementApi', function() {
      describe('rebalancingSignal', function() {
        it('should call rebalancingSignal successfully', function(done) {
          // TODO: uncomment, update parameter values for rebalancingSignal call and complete the assertions
          /*
          var rebalancingSignalRequest = new HydrogenProtonApi.RebalancingSignalRequest();
          rebalancingSignalRequest.endDate = new Date();
          rebalancingSignalRequest.updateModel = false;
          rebalancingSignalRequest.modelId = """00000000-0000-0000-0000-000000000000";
          rebalancingSignalRequest.startDate = new Date();
          rebalancingSignalRequest.initialWeights = ;
          rebalancingSignalRequest.settings = new HydrogenProtonApi.Settings();
          rebalancingSignalRequest.settings.defaultDriftFactor = 0.0;
          rebalancingSignalRequest.settings.driftRebal = false;
          rebalancingSignalRequest.settings.downside = false;
          rebalancingSignalRequest.settings.taxEfficiencyId = 0;
          rebalancingSignalRequest.settings.periodRebal = false;
          rebalancingSignalRequest.settings.rebalancePeriod = 0;

          instance.rebalancingSignal(rebalancingSignalRequest, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Object);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(Object);
              // expect(data).to.be(null);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
