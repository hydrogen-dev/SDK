/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnnuityDepositSchedule', 'model/GuaranteedRateBenefitSubpayload'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AnnuityDepositSchedule'), require('./GuaranteedRateBenefitSubpayload'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.VariableAnnuityPayload = factory(root.atom_api.ApiClient, root.atom_api.AnnuityDepositSchedule, root.atom_api.GuaranteedRateBenefitSubpayload);
  }
}(this, function(ApiClient, AnnuityDepositSchedule, GuaranteedRateBenefitSubpayload) {
  'use strict';




  /**
   * The VariableAnnuityPayload model module.
   * @module model/VariableAnnuityPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>VariableAnnuityPayload</code>.
   * @alias module:model/VariableAnnuityPayload
   * @class
   * @param portfolioTickers {Array.<String>} Portfolio tickers, referencing securities defined in the Nucleus API.
   * @param portfolioWeights {Array.<Number>} Portfolio weights, corresponding to portfolio_tickers. Must sum to 1.0.
   * @param accumulationHorizon {Number} The number of years until the payout phase begins.
   * @param decumulationHorizon {Number} The number of years in the payout or decumulation phase.
   * @param initialBalance {Number} The starting balance in the annuity plan, prior to any ongoing contributions. Must be greater than or equal to 0.
   */
  var exports = function(portfolioTickers, portfolioWeights, accumulationHorizon, decumulationHorizon, initialBalance) {
    var _this = this;

    _this['portfolio_tickers'] = portfolioTickers;
    _this['portfolio_weights'] = portfolioWeights;
    _this['accumulation_horizon'] = accumulationHorizon;
    _this['decumulation_horizon'] = decumulationHorizon;
    _this['initial_balance'] = initialBalance;















  };

  /**
   * Constructs a <code>VariableAnnuityPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VariableAnnuityPayload} obj Optional instance to populate.
   * @return {module:model/VariableAnnuityPayload} The populated <code>VariableAnnuityPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('portfolio_tickers')) {
        obj['portfolio_tickers'] = ApiClient.convertToType(data['portfolio_tickers'], ['String']);
      }
      if (data.hasOwnProperty('portfolio_weights')) {
        obj['portfolio_weights'] = ApiClient.convertToType(data['portfolio_weights'], ['Number']);
      }
      if (data.hasOwnProperty('accumulation_horizon')) {
        obj['accumulation_horizon'] = ApiClient.convertToType(data['accumulation_horizon'], 'Number');
      }
      if (data.hasOwnProperty('decumulation_horizon')) {
        obj['decumulation_horizon'] = ApiClient.convertToType(data['decumulation_horizon'], 'Number');
      }
      if (data.hasOwnProperty('initial_balance')) {
        obj['initial_balance'] = ApiClient.convertToType(data['initial_balance'], 'Number');
      }
      if (data.hasOwnProperty('frequency_interval')) {
        obj['frequency_interval'] = ApiClient.convertToType(data['frequency_interval'], 'String');
      }
      if (data.hasOwnProperty('deposit_schedule')) {
        obj['deposit_schedule'] = AnnuityDepositSchedule.constructFromObject(data['deposit_schedule']);
      }
      if (data.hasOwnProperty('inflation_rate')) {
        obj['inflation_rate'] = ApiClient.convertToType(data['inflation_rate'], 'Number');
      }
      if (data.hasOwnProperty('tax_rate')) {
        obj['tax_rate'] = ApiClient.convertToType(data['tax_rate'], 'Number');
      }
      if (data.hasOwnProperty('annuitization_rate')) {
        obj['annuitization_rate'] = ApiClient.convertToType(data['annuitization_rate'], 'Number');
      }
      if (data.hasOwnProperty('guaranteed_rate_benefit')) {
        obj['guaranteed_rate_benefit'] = ApiClient.convertToType(data['guaranteed_rate_benefit'], [GuaranteedRateBenefitSubpayload]);
      }
      if (data.hasOwnProperty('guaranteed_accumulation_benefit')) {
        obj['guaranteed_accumulation_benefit'] = ApiClient.convertToType(data['guaranteed_accumulation_benefit'], 'Number');
      }
      if (data.hasOwnProperty('n')) {
        obj['n'] = ApiClient.convertToType(data['n'], 'Number');
      }
      if (data.hasOwnProperty('result_type')) {
        obj['result_type'] = ApiClient.convertToType(data['result_type'], 'String');
      }
      if (data.hasOwnProperty('p')) {
        obj['p'] = ApiClient.convertToType(data['p'], 'Number');
      }
      if (data.hasOwnProperty('remove_outliers')) {
        obj['remove_outliers'] = ApiClient.convertToType(data['remove_outliers'], 'Boolean');
      }
      if (data.hasOwnProperty('start_date')) {
        obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
      }
      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
      }
      if (data.hasOwnProperty('trading_days_per_year')) {
        obj['trading_days_per_year'] = ApiClient.convertToType(data['trading_days_per_year'], 'Number');
      }
      if (data.hasOwnProperty('use_proxy_data')) {
        obj['use_proxy_data'] = ApiClient.convertToType(data['use_proxy_data'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Portfolio tickers, referencing securities defined in the Nucleus API.
   * @member {Array.<String>} portfolio_tickers
   */
  exports.prototype['portfolio_tickers'] = undefined;
  /**
   * Portfolio weights, corresponding to portfolio_tickers. Must sum to 1.0.
   * @member {Array.<Number>} portfolio_weights
   */
  exports.prototype['portfolio_weights'] = undefined;
  /**
   * The number of years until the payout phase begins.
   * @member {Number} accumulation_horizon
   */
  exports.prototype['accumulation_horizon'] = undefined;
  /**
   * The number of years in the payout or decumulation phase.
   * @member {Number} decumulation_horizon
   */
  exports.prototype['decumulation_horizon'] = undefined;
  /**
   * The starting balance in the annuity plan, prior to any ongoing contributions. Must be greater than or equal to 0.
   * @member {Number} initial_balance
   */
  exports.prototype['initial_balance'] = undefined;
  /**
   * Unit of time associated with accumulation_horizon, decumulation_horizon, start, end, and annuity payments.
   * @member {String} frequency_interval
   */
  exports.prototype['frequency_interval'] = undefined;
  /**
   * @member {module:model/AnnuityDepositSchedule} deposit_schedule
   */
  exports.prototype['deposit_schedule'] = undefined;
  /**
   * The annualized rate of inflation. Defaults to 0.
   * @member {Number} inflation_rate
   */
  exports.prototype['inflation_rate'] = undefined;
  /**
   * The tax rate applied to annuity payouts. Defaults to 0.
   * @member {Number} tax_rate
   */
  exports.prototype['tax_rate'] = undefined;
  /**
   * The discount rate used to calculate annuity payout amounts during decumulation_horizon. Defaults to 0.
   * @member {Number} annuitization_rate
   */
  exports.prototype['annuitization_rate'] = undefined;
  /**
   * Boundaries enforced on the plan's rate of return.
   * @member {Array.<module:model/GuaranteedRateBenefitSubpayload>} guaranteed_rate_benefit
   */
  exports.prototype['guaranteed_rate_benefit'] = undefined;
  /**
   * A guaranteed lower bound for the plan balance at the end of accumulation_horizon.
   * @member {Number} guaranteed_accumulation_benefit
   */
  exports.prototype['guaranteed_accumulation_benefit'] = undefined;
  /**
   * The number of Monte Carlo simulations to run. Defaults to 1000.
   * @member {Number} n
   */
  exports.prototype['n'] = undefined;
  /**
   * The type of Monte Carlo result to output. Must be one of mean, median, or custom. Defaults to median.
   * @member {module:model/VariableAnnuityPayload.ResultTypeEnum} result_type
   * @default 'median'
   */
  exports.prototype['result_type'] = 'median';
  /**
   * A result percentile to output, applicable when result_type is custom. Must be between 0 and 100 inclusive. Defaults to 50.
   * @member {Number} p
   */
  exports.prototype['p'] = undefined;
  /**
   * If true, remove outlying results. If true, outlier analysis is performed on a median absolute deviation (MAD) basis, at the 2.5 threshold. Defaults to false.
   * @member {Boolean} remove_outliers
   * @default false
   */
  exports.prototype['remove_outliers'] = false;
  /**
   * Start date used for ticker price history. Defaults to the earliest common date among portfolio_tickers prices.
   * @member {Date} start_date
   */
  exports.prototype['start_date'] = undefined;
  /**
   * End date used for ticker price history. Defaults to the latest common date among portfolio_tickers prices.
   * @member {Date} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * The number of days per year for which a portfolio is subject to market fluctuation. Defaults to 252.
   * @member {Number} trading_days_per_year
   */
  exports.prototype['trading_days_per_year'] = undefined;
  /**
   * If true, incorporate proxy price data as defined at the Security level in the Nucleus API. Proxy data is merged with base security data to form a continuous price history. Defaults to false.
   * @member {Boolean} use_proxy_data
   * @default false
   */
  exports.prototype['use_proxy_data'] = false;


  /**
   * Allowed values for the <code>result_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResultTypeEnum = {
    /**
     * value: "mean"
     * @const
     */
    "mean": "mean",
    /**
     * value: "median"
     * @const
     */
    "median": "median",
    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"  };


  return exports;
}));


