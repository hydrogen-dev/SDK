=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for ProtonApi::FinancialPlanningApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FinancialPlanningApi' do
  before do
    # run before each test
    @instance = ProtonApi::FinancialPlanningApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FinancialPlanningApi' do
    it 'should create an instance of FinancialPlanningApi' do
      expect(@instance).to be_instance_of(ProtonApi::FinancialPlanningApi)
    end
  end

  # unit tests for education_calculator_annual_cost
  # Education Calculator - Annual Cost
  # Calculate the achievable education costs
  # @param education_calculator_annual_cost_request Request payload for Education Calculator - Annual Cost
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'education_calculator_annual_cost test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for education_calculator_deposit_amount
  # Education Calculator - Deposit Amount
  # Calculate the necessary periodic deposit amount to achieve education costs
  # @param education_calculator_deposit_amount_request Request payload for Education Calculator - Deposit Amount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'education_calculator_deposit_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for education_calculator_percent_covered
  # Education Calculator - Percent Covered
  # Calculate the achievable percentage of education costs that can be covered
  # @param education_calculator_percent_covered_request Request payload for Education Calculator - Percent Covered
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'education_calculator_percent_covered test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mortgage_calculator_down_payment
  # Mortgage Calculator - Down Payment
  # Calculate the necessary down payment for the mortgage
  # @param mortgage_calculator_down_payment_request Request payload for Mortgage Calculator - Down Payment
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'mortgage_calculator_down_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mortgage_calculator_home_price
  # Mortgage Calculator - Home Price
  # Calculate the achievable home price for the mortgage
  # @param mortgage_calculator_home_price_request Request payload for Mortgage Calculator - Home Price
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'mortgage_calculator_home_price test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mortgage_calculator_periodic_payment
  # Mortgage Calculator - Periodic Payment
  # Calculate the periodic payment for the mortgage
  # @param mortgage_calculator_periodic_payment_request Request payload for Mortgage Calculator - Periodic Payment
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'mortgage_calculator_periodic_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for purchase_calculator_amount
  # Purchase Calculator - Amount
  # Calculate the achievable purchase amount
  # @param purchase_calculator_amount_request Request payload for Purchase Calculator - Amount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'purchase_calculator_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for purchase_calculator_deposit_amount
  # Purchase Calculator - Deposit Amount
  # Calculate the necessary periodic deposit amount to achieve the purchase amount
  # @param purchase_calculator_deposit_amount_request Request payload for Purchase Calculator - Deposit Amount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'purchase_calculator_deposit_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for purchase_calculator_horizon
  # Purchase Calculator - Horizon
  # Calculate the necessary time horizon to achieve the purchase amount
  # @param purchase_calculator_horizon_request Request payload for Purchase Calculator - Horizon
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'purchase_calculator_horizon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retirement_calculator_deposit_amount
  # Retirement Calculator - Deposit Amount
  # Calculate the necessary period deposit amount to achieve the retirement expenses
  # @param retirement_calculator_deposit_amount_request Request payload for Retirement Calculator - Deposit AMount
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'retirement_calculator_deposit_amount test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retirement_calculator_expenses
  # Retirement Calculator - Expenses
  # Calculate the achievable retirement expenses
  # @param retirement_calculator_expenses_request Request payload for Retirement Calculator - Expenses
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'retirement_calculator_expenses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retirement_calculator_percent_covered
  # Retirement Calculator - Percent Covered
  # Calculate the achievable percentage of retirement expenses that can be covered
  # @param retirement_calculator_percent_covered_request Request payload for Retirement Calculator - Percent Covered
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'retirement_calculator_percent_covered test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
