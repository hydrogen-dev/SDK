/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BudgetCalculatorResponseInnerBudgetComponents;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * BudgetCalculatorResponseInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class BudgetCalculatorResponseInner {
  @SerializedName("budget_id")
  private UUID budgetId = null;

  @SerializedName("budget_name")
  private String budgetName = null;

  @SerializedName("total_funds_available")
  private Double totalFundsAvailable = null;

  @SerializedName("total_funds_spent")
  private Double totalFundsSpent = null;

  @SerializedName("total_funds_remaining")
  private Double totalFundsRemaining = null;

  @SerializedName("budget_components")
  private List<BudgetCalculatorResponseInnerBudgetComponents> budgetComponents = null;

  @SerializedName("average_amount_budgeted")
  private Double averageAmountBudgeted = null;

  @SerializedName("average_amount_spent")
  private Double averageAmountSpent = null;

  public BudgetCalculatorResponseInner budgetId(UUID budgetId) {
    this.budgetId = budgetId;
    return this;
  }

   /**
   * The ID of the budget
   * @return budgetId
  **/
  @ApiModelProperty(value = "The ID of the budget")
  public UUID getBudgetId() {
    return budgetId;
  }

  public void setBudgetId(UUID budgetId) {
    this.budgetId = budgetId;
  }

  public BudgetCalculatorResponseInner budgetName(String budgetName) {
    this.budgetName = budgetName;
    return this;
  }

   /**
   * The name of the budget
   * @return budgetName
  **/
  @ApiModelProperty(value = "The name of the budget")
  public String getBudgetName() {
    return budgetName;
  }

  public void setBudgetName(String budgetName) {
    this.budgetName = budgetName;
  }

  public BudgetCalculatorResponseInner totalFundsAvailable(Double totalFundsAvailable) {
    this.totalFundsAvailable = totalFundsAvailable;
    return this;
  }

   /**
   * Total amount of funds originally available in the budget
   * @return totalFundsAvailable
  **/
  @ApiModelProperty(value = "Total amount of funds originally available in the budget")
  public Double getTotalFundsAvailable() {
    return totalFundsAvailable;
  }

  public void setTotalFundsAvailable(Double totalFundsAvailable) {
    this.totalFundsAvailable = totalFundsAvailable;
  }

  public BudgetCalculatorResponseInner totalFundsSpent(Double totalFundsSpent) {
    this.totalFundsSpent = totalFundsSpent;
    return this;
  }

   /**
   * Total amount of funds spent
   * @return totalFundsSpent
  **/
  @ApiModelProperty(value = "Total amount of funds spent")
  public Double getTotalFundsSpent() {
    return totalFundsSpent;
  }

  public void setTotalFundsSpent(Double totalFundsSpent) {
    this.totalFundsSpent = totalFundsSpent;
  }

  public BudgetCalculatorResponseInner totalFundsRemaining(Double totalFundsRemaining) {
    this.totalFundsRemaining = totalFundsRemaining;
    return this;
  }

   /**
   * Total amount of funds remaining; delta of total_funds_available - total_funds_spent
   * @return totalFundsRemaining
  **/
  @ApiModelProperty(value = "Total amount of funds remaining; delta of total_funds_available - total_funds_spent")
  public Double getTotalFundsRemaining() {
    return totalFundsRemaining;
  }

  public void setTotalFundsRemaining(Double totalFundsRemaining) {
    this.totalFundsRemaining = totalFundsRemaining;
  }

  public BudgetCalculatorResponseInner budgetComponents(List<BudgetCalculatorResponseInnerBudgetComponents> budgetComponents) {
    this.budgetComponents = budgetComponents;
    return this;
  }

  public BudgetCalculatorResponseInner addBudgetComponentsItem(BudgetCalculatorResponseInnerBudgetComponents budgetComponentsItem) {
    if (this.budgetComponents == null) {
      this.budgetComponents = new ArrayList<BudgetCalculatorResponseInnerBudgetComponents>();
    }
    this.budgetComponents.add(budgetComponentsItem);
    return this;
  }

   /**
   * Total funds spent per category
   * @return budgetComponents
  **/
  @ApiModelProperty(value = "Total funds spent per category")
  public List<BudgetCalculatorResponseInnerBudgetComponents> getBudgetComponents() {
    return budgetComponents;
  }

  public void setBudgetComponents(List<BudgetCalculatorResponseInnerBudgetComponents> budgetComponents) {
    this.budgetComponents = budgetComponents;
  }

  public BudgetCalculatorResponseInner averageAmountBudgeted(Double averageAmountBudgeted) {
    this.averageAmountBudgeted = averageAmountBudgeted;
    return this;
  }

   /**
   * Average amount budgeted for each budget component
   * @return averageAmountBudgeted
  **/
  @ApiModelProperty(value = "Average amount budgeted for each budget component")
  public Double getAverageAmountBudgeted() {
    return averageAmountBudgeted;
  }

  public void setAverageAmountBudgeted(Double averageAmountBudgeted) {
    this.averageAmountBudgeted = averageAmountBudgeted;
  }

  public BudgetCalculatorResponseInner averageAmountSpent(Double averageAmountSpent) {
    this.averageAmountSpent = averageAmountSpent;
    return this;
  }

   /**
   * Average amount spent for each budget component
   * @return averageAmountSpent
  **/
  @ApiModelProperty(value = "Average amount spent for each budget component")
  public Double getAverageAmountSpent() {
    return averageAmountSpent;
  }

  public void setAverageAmountSpent(Double averageAmountSpent) {
    this.averageAmountSpent = averageAmountSpent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BudgetCalculatorResponseInner budgetCalculatorResponseInner = (BudgetCalculatorResponseInner) o;
    return Objects.equals(this.budgetId, budgetCalculatorResponseInner.budgetId) &&
        Objects.equals(this.budgetName, budgetCalculatorResponseInner.budgetName) &&
        Objects.equals(this.totalFundsAvailable, budgetCalculatorResponseInner.totalFundsAvailable) &&
        Objects.equals(this.totalFundsSpent, budgetCalculatorResponseInner.totalFundsSpent) &&
        Objects.equals(this.totalFundsRemaining, budgetCalculatorResponseInner.totalFundsRemaining) &&
        Objects.equals(this.budgetComponents, budgetCalculatorResponseInner.budgetComponents) &&
        Objects.equals(this.averageAmountBudgeted, budgetCalculatorResponseInner.averageAmountBudgeted) &&
        Objects.equals(this.averageAmountSpent, budgetCalculatorResponseInner.averageAmountSpent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(budgetId, budgetName, totalFundsAvailable, totalFundsSpent, totalFundsRemaining, budgetComponents, averageAmountBudgeted, averageAmountSpent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BudgetCalculatorResponseInner {\n");
    
    sb.append("    budgetId: ").append(toIndentedString(budgetId)).append("\n");
    sb.append("    budgetName: ").append(toIndentedString(budgetName)).append("\n");
    sb.append("    totalFundsAvailable: ").append(toIndentedString(totalFundsAvailable)).append("\n");
    sb.append("    totalFundsSpent: ").append(toIndentedString(totalFundsSpent)).append("\n");
    sb.append("    totalFundsRemaining: ").append(toIndentedString(totalFundsRemaining)).append("\n");
    sb.append("    budgetComponents: ").append(toIndentedString(budgetComponents)).append("\n");
    sb.append("    averageAmountBudgeted: ").append(toIndentedString(averageAmountBudgeted)).append("\n");
    sb.append("    averageAmountSpent: ").append(toIndentedString(averageAmountSpent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

