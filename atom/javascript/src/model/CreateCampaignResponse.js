/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CampaignManagementPayload', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CampaignManagementPayload'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.CreateCampaignResponse = factory(root.atom_api.ApiClient, root.atom_api.CampaignManagementPayload, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, CampaignManagementPayload, SecondaryId) {
  'use strict';




  /**
   * The CreateCampaignResponse model module.
   * @module model/CreateCampaignResponse
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>CreateCampaignResponse</code>.
   * @alias module:model/CreateCampaignResponse
   * @class
   * @implements module:model/CampaignManagementPayload
   * @param title {String} Title of the campaign
   * @param description {String} Description of the campaign such as its purpose
   * @param startDate {Date} Date that the marketing campaign begins
   * @param endDate {Date} Date that the marketing campaign ends
   */
  var exports = function(title, description, startDate, endDate) {
    var _this = this;

    CampaignManagementPayload.call(_this, title, description, startDate, endDate);


  };

  /**
   * Constructs a <code>CreateCampaignResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateCampaignResponse} obj Optional instance to populate.
   * @return {module:model/CreateCampaignResponse} The populated <code>CreateCampaignResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      CampaignManagementPayload.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('create_date')) {
        obj['create_date'] = ApiClient.convertToType(data['create_date'], 'String');
      }
    }
    return obj;
  }

  /**
   * ID of the marketing campaign
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Datetime the marketing campaign was created
   * @member {String} create_date
   */
  exports.prototype['create_date'] = undefined;

  // Implement CampaignManagementPayload interface:
  /**
   * Title of the campaign
   * @member {String} title
   */
exports.prototype['title'] = undefined;

  /**
   * Description of the campaign such as its purpose
   * @member {String} description
   */
exports.prototype['description'] = undefined;

  /**
   * Date that the marketing campaign begins
   * @member {Date} start_date
   */
exports.prototype['start_date'] = undefined;

  /**
   * Date that the marketing campaign ends
   * @member {Date} end_date
   */
exports.prototype['end_date'] = undefined;

  /**
   * Indicates if the campaign is an acquisition campaign, such as affiliate. Defaults to false meaning it is not an acquisition campaign
   * @member {Boolean} is_acquisition
   * @default false
   */
exports.prototype['is_acquisition'] = false;

  /**
   * The category assigned to the campaign
   * @member {String} campaign_category
   */
exports.prototype['campaign_category'] = undefined;

  /**
   * The ID of a campaign plan associated with a campaign
   * @member {String} campaign_plan_id
   */
exports.prototype['campaign_plan_id'] = undefined;

  /**
   * Cookie code associated with the campaign used for tracking purposes
   * @member {String} cookie_code
   */
exports.prototype['cookie_code'] = undefined;

  /**
   * Indicates if the campaign is currently active. Defaults to true which indicates that it is active
   * @member {Boolean} is_active
   * @default true
   */
exports.prototype['is_active'] = true;

  /**
   * Name for the landing page of the campaign
   * @member {String} landing_page
   */
exports.prototype['landing_page'] = undefined;

  /**
   * Rate of client/user registration for the campaign
   * @member {Number} rate
   */
exports.prototype['rate'] = undefined;

  /**
   * Name of an Urchin Tracking Module (UTM) for a marketing feature used in the campaign
   * @member {String} utm_campaign
   */
exports.prototype['utm_campaign'] = undefined;

  /**
   * Content of an Urchin Tracking Module (UTM) for a marketing campaign feature used in the campaign. For example, content in a site banner
   * @member {String} utm_content
   */
exports.prototype['utm_content'] = undefined;

  /**
   * Platform of an Urchin Tracking Module (UTM) for a marketing campaign feature such as Social Media
   * @member {String} utm_medium
   */
exports.prototype['utm_medium'] = undefined;

  /**
   * Feature Urchin Tracking Module (UTM) for a marketing campaign such as a banner advertisement
   * @member {String} utm_source
   */
exports.prototype['utm_source'] = undefined;

  /**
   * Term of an Urchin Tracking Module (UTM) for a marketing campaign
   * @member {String} utm_term
   */
exports.prototype['utm_term'] = undefined;

  /**
   * @member {module:model/SecondaryId} secondary_id
   */
exports.prototype['secondary_id'] = undefined;



  return exports;
}));


