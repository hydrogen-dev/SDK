/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelCompositionPayloadHoldings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ModelCompositionPayloadHoldings'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.ModelCompositionPayload = factory(root.atom_api.ApiClient, root.atom_api.ModelCompositionPayloadHoldings);
  }
}(this, function(ApiClient, ModelCompositionPayloadHoldings) {
  'use strict';




  /**
   * The ModelCompositionPayload model module.
   * @module model/ModelCompositionPayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>ModelCompositionPayload</code>.
   * @alias module:model/ModelCompositionPayload
   * @class
   * @param modelId {String} The ID of the model whose holdings are to be updated
   * @param holdings {Array.<module:model/ModelCompositionPayloadHoldings>} The information for the new holding records to be created
   * @param sellTransactionCodeId {String} The transaction_code_id to be populated in any model transaction to sell securities
   * @param buyTransactionCodeId {String} The transaction_code_id to be populated in any model transaction to buy securities
   */
  var exports = function(modelId, holdings, sellTransactionCodeId, buyTransactionCodeId) {
    var _this = this;

    _this['model_id'] = modelId;
    _this['holdings'] = holdings;
    _this['sell_transaction_code_id'] = sellTransactionCodeId;
    _this['buy_transaction_code_id'] = buyTransactionCodeId;
  };

  /**
   * Constructs a <code>ModelCompositionPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelCompositionPayload} obj Optional instance to populate.
   * @return {module:model/ModelCompositionPayload} The populated <code>ModelCompositionPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('model_id')) {
        obj['model_id'] = ApiClient.convertToType(data['model_id'], 'String');
      }
      if (data.hasOwnProperty('holdings')) {
        obj['holdings'] = ApiClient.convertToType(data['holdings'], [ModelCompositionPayloadHoldings]);
      }
      if (data.hasOwnProperty('sell_transaction_code_id')) {
        obj['sell_transaction_code_id'] = ApiClient.convertToType(data['sell_transaction_code_id'], 'String');
      }
      if (data.hasOwnProperty('buy_transaction_code_id')) {
        obj['buy_transaction_code_id'] = ApiClient.convertToType(data['buy_transaction_code_id'], 'String');
      }
    }
    return obj;
  }

  /**
   * The ID of the model whose holdings are to be updated
   * @member {String} model_id
   */
  exports.prototype['model_id'] = undefined;
  /**
   * The information for the new holding records to be created
   * @member {Array.<module:model/ModelCompositionPayloadHoldings>} holdings
   */
  exports.prototype['holdings'] = undefined;
  /**
   * The transaction_code_id to be populated in any model transaction to sell securities
   * @member {String} sell_transaction_code_id
   */
  exports.prototype['sell_transaction_code_id'] = undefined;
  /**
   * The transaction_code_id to be populated in any model transaction to buy securities
   * @member {String} buy_transaction_code_id
   */
  exports.prototype['buy_transaction_code_id'] = undefined;



  return exports;
}));


