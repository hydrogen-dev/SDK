/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * PerformanceCalculatorRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-28T09:20:08.129Z")
public class PerformanceCalculatorRequest {
  /**
   * Gets or Sets annualizedReturnPeriod
   */
  @JsonAdapter(AnnualizedReturnPeriodEnum.Adapter.class)
  public enum AnnualizedReturnPeriodEnum {
    Y("Y"),
    
    Q("Q"),
    
    M("M"),
    
    D("D");

    private String value;

    AnnualizedReturnPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AnnualizedReturnPeriodEnum fromValue(String text) {
      for (AnnualizedReturnPeriodEnum b : AnnualizedReturnPeriodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AnnualizedReturnPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AnnualizedReturnPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AnnualizedReturnPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AnnualizedReturnPeriodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("annualized_return_period")
  private AnnualizedReturnPeriodEnum annualizedReturnPeriod = AnnualizedReturnPeriodEnum.D;

  @SerializedName("risk_free_alpha")
  private Float riskFreeAlpha = 0.0f;

  @SerializedName("allocation_id")
  private UUID allocationId = null;

  @SerializedName("mean_percentile_monte_carlo")
  private Float meanPercentileMonteCarlo = 50.0f;

  @SerializedName("model_id")
  private UUID modelId = null;

  @SerializedName("mar_downside_deviation")
  private Float marDownsideDeviation = 0.0f;

  @SerializedName("risk_free_sharpe")
  private Float riskFreeSharpe = 0.0f;

  @SerializedName("benchmark_id")
  private UUID benchmarkId = null;

  @SerializedName("risk_free_sortino")
  private Float riskFreeSortino = 0.0f;

  @SerializedName("household_id")
  private UUID householdId = null;

  @SerializedName("min_percentile_monte_carlo")
  private Float minPercentileMonteCarlo = 20.0f;

  @SerializedName("moving_average_n_day")
  private Integer movingAverageNDay = 7;

  /**
   * Gets or Sets activePremiumPeriod
   */
  @JsonAdapter(ActivePremiumPeriodEnum.Adapter.class)
  public enum ActivePremiumPeriodEnum {
    Y("Y"),
    
    Q("Q"),
    
    M("M"),
    
    D("D");

    private String value;

    ActivePremiumPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActivePremiumPeriodEnum fromValue(String text) {
      for (ActivePremiumPeriodEnum b : ActivePremiumPeriodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ActivePremiumPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActivePremiumPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActivePremiumPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActivePremiumPeriodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("active_premium_period")
  private ActivePremiumPeriodEnum activePremiumPeriod = ActivePremiumPeriodEnum.D;

  @SerializedName("stat_name")
  private String statName = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("n_day_returns")
  private Integer nDayReturns = 7;

  @SerializedName("var_conf_interval")
  private Float varConfInterval = 95.0f;

  /**
   * Gets or Sets periodType
   */
  @JsonAdapter(PeriodTypeEnum.Adapter.class)
  public enum PeriodTypeEnum {
    Y("Y"),
    
    Q("Q"),
    
    M("M"),
    
    D("D");

    private String value;

    PeriodTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PeriodTypeEnum fromValue(String text) {
      for (PeriodTypeEnum b : PeriodTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PeriodTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PeriodTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PeriodTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("period_type")
  private PeriodTypeEnum periodType = PeriodTypeEnum.D;

  @SerializedName("risk_free_treynor")
  private Float riskFreeTreynor = 0.0f;

  @SerializedName("n_rolling_max_drawdown")
  private Integer nRollingMaxDrawdown = 7;

  @SerializedName("portfolio_id")
  private UUID portfolioId = null;

  @SerializedName("num_sim_monte_carlo")
  private Integer numSimMonteCarlo = 1000;

  @SerializedName("goal_id")
  private UUID goalId = null;

  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("security_id")
  private UUID securityId = null;

  @SerializedName("n_path_monte_carlo")
  private Integer nPathMonteCarlo = 100;

  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("n_rolling_volatility")
  private Integer nRollingVolatility = 7;

  @SerializedName("hist_factor")
  private Float histFactor = 5.0f;

  @SerializedName("max_percentile_monte_carlo")
  private Float maxPercentileMonteCarlo = 80.0f;

  public PerformanceCalculatorRequest annualizedReturnPeriod(AnnualizedReturnPeriodEnum annualizedReturnPeriod) {
    this.annualizedReturnPeriod = annualizedReturnPeriod;
    return this;
  }

   /**
   * Get annualizedReturnPeriod
   * @return annualizedReturnPeriod
  **/
  @ApiModelProperty(value = "")
  public AnnualizedReturnPeriodEnum getAnnualizedReturnPeriod() {
    return annualizedReturnPeriod;
  }

  public void setAnnualizedReturnPeriod(AnnualizedReturnPeriodEnum annualizedReturnPeriod) {
    this.annualizedReturnPeriod = annualizedReturnPeriod;
  }

  public PerformanceCalculatorRequest riskFreeAlpha(Float riskFreeAlpha) {
    this.riskFreeAlpha = riskFreeAlpha;
    return this;
  }

   /**
   * Get riskFreeAlpha
   * @return riskFreeAlpha
  **/
  @ApiModelProperty(value = "")
  public Float getRiskFreeAlpha() {
    return riskFreeAlpha;
  }

  public void setRiskFreeAlpha(Float riskFreeAlpha) {
    this.riskFreeAlpha = riskFreeAlpha;
  }

  public PerformanceCalculatorRequest allocationId(UUID allocationId) {
    this.allocationId = allocationId;
    return this;
  }

   /**
   * Get allocationId
   * @return allocationId
  **/
  @ApiModelProperty(value = "")
  public UUID getAllocationId() {
    return allocationId;
  }

  public void setAllocationId(UUID allocationId) {
    this.allocationId = allocationId;
  }

  public PerformanceCalculatorRequest meanPercentileMonteCarlo(Float meanPercentileMonteCarlo) {
    this.meanPercentileMonteCarlo = meanPercentileMonteCarlo;
    return this;
  }

   /**
   * Get meanPercentileMonteCarlo
   * minimum: 0
   * @return meanPercentileMonteCarlo
  **/
  @ApiModelProperty(value = "")
  public Float getMeanPercentileMonteCarlo() {
    return meanPercentileMonteCarlo;
  }

  public void setMeanPercentileMonteCarlo(Float meanPercentileMonteCarlo) {
    this.meanPercentileMonteCarlo = meanPercentileMonteCarlo;
  }

  public PerformanceCalculatorRequest modelId(UUID modelId) {
    this.modelId = modelId;
    return this;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @ApiModelProperty(value = "")
  public UUID getModelId() {
    return modelId;
  }

  public void setModelId(UUID modelId) {
    this.modelId = modelId;
  }

  public PerformanceCalculatorRequest marDownsideDeviation(Float marDownsideDeviation) {
    this.marDownsideDeviation = marDownsideDeviation;
    return this;
  }

   /**
   * Get marDownsideDeviation
   * @return marDownsideDeviation
  **/
  @ApiModelProperty(value = "")
  public Float getMarDownsideDeviation() {
    return marDownsideDeviation;
  }

  public void setMarDownsideDeviation(Float marDownsideDeviation) {
    this.marDownsideDeviation = marDownsideDeviation;
  }

  public PerformanceCalculatorRequest riskFreeSharpe(Float riskFreeSharpe) {
    this.riskFreeSharpe = riskFreeSharpe;
    return this;
  }

   /**
   * Get riskFreeSharpe
   * @return riskFreeSharpe
  **/
  @ApiModelProperty(value = "")
  public Float getRiskFreeSharpe() {
    return riskFreeSharpe;
  }

  public void setRiskFreeSharpe(Float riskFreeSharpe) {
    this.riskFreeSharpe = riskFreeSharpe;
  }

  public PerformanceCalculatorRequest benchmarkId(UUID benchmarkId) {
    this.benchmarkId = benchmarkId;
    return this;
  }

   /**
   * Get benchmarkId
   * @return benchmarkId
  **/
  @ApiModelProperty(value = "")
  public UUID getBenchmarkId() {
    return benchmarkId;
  }

  public void setBenchmarkId(UUID benchmarkId) {
    this.benchmarkId = benchmarkId;
  }

  public PerformanceCalculatorRequest riskFreeSortino(Float riskFreeSortino) {
    this.riskFreeSortino = riskFreeSortino;
    return this;
  }

   /**
   * Get riskFreeSortino
   * @return riskFreeSortino
  **/
  @ApiModelProperty(value = "")
  public Float getRiskFreeSortino() {
    return riskFreeSortino;
  }

  public void setRiskFreeSortino(Float riskFreeSortino) {
    this.riskFreeSortino = riskFreeSortino;
  }

  public PerformanceCalculatorRequest householdId(UUID householdId) {
    this.householdId = householdId;
    return this;
  }

   /**
   * Get householdId
   * @return householdId
  **/
  @ApiModelProperty(value = "")
  public UUID getHouseholdId() {
    return householdId;
  }

  public void setHouseholdId(UUID householdId) {
    this.householdId = householdId;
  }

  public PerformanceCalculatorRequest minPercentileMonteCarlo(Float minPercentileMonteCarlo) {
    this.minPercentileMonteCarlo = minPercentileMonteCarlo;
    return this;
  }

   /**
   * Get minPercentileMonteCarlo
   * minimum: 0
   * @return minPercentileMonteCarlo
  **/
  @ApiModelProperty(value = "")
  public Float getMinPercentileMonteCarlo() {
    return minPercentileMonteCarlo;
  }

  public void setMinPercentileMonteCarlo(Float minPercentileMonteCarlo) {
    this.minPercentileMonteCarlo = minPercentileMonteCarlo;
  }

  public PerformanceCalculatorRequest movingAverageNDay(Integer movingAverageNDay) {
    this.movingAverageNDay = movingAverageNDay;
    return this;
  }

   /**
   * Get movingAverageNDay
   * minimum: 1
   * @return movingAverageNDay
  **/
  @ApiModelProperty(value = "")
  public Integer getMovingAverageNDay() {
    return movingAverageNDay;
  }

  public void setMovingAverageNDay(Integer movingAverageNDay) {
    this.movingAverageNDay = movingAverageNDay;
  }

  public PerformanceCalculatorRequest activePremiumPeriod(ActivePremiumPeriodEnum activePremiumPeriod) {
    this.activePremiumPeriod = activePremiumPeriod;
    return this;
  }

   /**
   * Get activePremiumPeriod
   * @return activePremiumPeriod
  **/
  @ApiModelProperty(value = "")
  public ActivePremiumPeriodEnum getActivePremiumPeriod() {
    return activePremiumPeriod;
  }

  public void setActivePremiumPeriod(ActivePremiumPeriodEnum activePremiumPeriod) {
    this.activePremiumPeriod = activePremiumPeriod;
  }

  public PerformanceCalculatorRequest statName(String statName) {
    this.statName = statName;
    return this;
  }

   /**
   * Get statName
   * @return statName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStatName() {
    return statName;
  }

  public void setStatName(String statName) {
    this.statName = statName;
  }

  public PerformanceCalculatorRequest endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public PerformanceCalculatorRequest startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public PerformanceCalculatorRequest nDayReturns(Integer nDayReturns) {
    this.nDayReturns = nDayReturns;
    return this;
  }

   /**
   * Get nDayReturns
   * minimum: 1
   * @return nDayReturns
  **/
  @ApiModelProperty(value = "")
  public Integer getNDayReturns() {
    return nDayReturns;
  }

  public void setNDayReturns(Integer nDayReturns) {
    this.nDayReturns = nDayReturns;
  }

  public PerformanceCalculatorRequest varConfInterval(Float varConfInterval) {
    this.varConfInterval = varConfInterval;
    return this;
  }

   /**
   * Get varConfInterval
   * @return varConfInterval
  **/
  @ApiModelProperty(value = "")
  public Float getVarConfInterval() {
    return varConfInterval;
  }

  public void setVarConfInterval(Float varConfInterval) {
    this.varConfInterval = varConfInterval;
  }

  public PerformanceCalculatorRequest periodType(PeriodTypeEnum periodType) {
    this.periodType = periodType;
    return this;
  }

   /**
   * Get periodType
   * @return periodType
  **/
  @ApiModelProperty(value = "")
  public PeriodTypeEnum getPeriodType() {
    return periodType;
  }

  public void setPeriodType(PeriodTypeEnum periodType) {
    this.periodType = periodType;
  }

  public PerformanceCalculatorRequest riskFreeTreynor(Float riskFreeTreynor) {
    this.riskFreeTreynor = riskFreeTreynor;
    return this;
  }

   /**
   * Get riskFreeTreynor
   * @return riskFreeTreynor
  **/
  @ApiModelProperty(value = "")
  public Float getRiskFreeTreynor() {
    return riskFreeTreynor;
  }

  public void setRiskFreeTreynor(Float riskFreeTreynor) {
    this.riskFreeTreynor = riskFreeTreynor;
  }

  public PerformanceCalculatorRequest nRollingMaxDrawdown(Integer nRollingMaxDrawdown) {
    this.nRollingMaxDrawdown = nRollingMaxDrawdown;
    return this;
  }

   /**
   * Get nRollingMaxDrawdown
   * minimum: 1
   * @return nRollingMaxDrawdown
  **/
  @ApiModelProperty(value = "")
  public Integer getNRollingMaxDrawdown() {
    return nRollingMaxDrawdown;
  }

  public void setNRollingMaxDrawdown(Integer nRollingMaxDrawdown) {
    this.nRollingMaxDrawdown = nRollingMaxDrawdown;
  }

  public PerformanceCalculatorRequest portfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public UUID getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
  }

  public PerformanceCalculatorRequest numSimMonteCarlo(Integer numSimMonteCarlo) {
    this.numSimMonteCarlo = numSimMonteCarlo;
    return this;
  }

   /**
   * Get numSimMonteCarlo
   * minimum: 1
   * @return numSimMonteCarlo
  **/
  @ApiModelProperty(value = "")
  public Integer getNumSimMonteCarlo() {
    return numSimMonteCarlo;
  }

  public void setNumSimMonteCarlo(Integer numSimMonteCarlo) {
    this.numSimMonteCarlo = numSimMonteCarlo;
  }

  public PerformanceCalculatorRequest goalId(UUID goalId) {
    this.goalId = goalId;
    return this;
  }

   /**
   * Get goalId
   * @return goalId
  **/
  @ApiModelProperty(value = "")
  public UUID getGoalId() {
    return goalId;
  }

  public void setGoalId(UUID goalId) {
    this.goalId = goalId;
  }

  public PerformanceCalculatorRequest accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(value = "")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public PerformanceCalculatorRequest securityId(UUID securityId) {
    this.securityId = securityId;
    return this;
  }

   /**
   * Get securityId
   * @return securityId
  **/
  @ApiModelProperty(value = "")
  public UUID getSecurityId() {
    return securityId;
  }

  public void setSecurityId(UUID securityId) {
    this.securityId = securityId;
  }

  public PerformanceCalculatorRequest nPathMonteCarlo(Integer nPathMonteCarlo) {
    this.nPathMonteCarlo = nPathMonteCarlo;
    return this;
  }

   /**
   * Get nPathMonteCarlo
   * minimum: 1
   * @return nPathMonteCarlo
  **/
  @ApiModelProperty(value = "")
  public Integer getNPathMonteCarlo() {
    return nPathMonteCarlo;
  }

  public void setNPathMonteCarlo(Integer nPathMonteCarlo) {
    this.nPathMonteCarlo = nPathMonteCarlo;
  }

  public PerformanceCalculatorRequest clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public PerformanceCalculatorRequest nRollingVolatility(Integer nRollingVolatility) {
    this.nRollingVolatility = nRollingVolatility;
    return this;
  }

   /**
   * Get nRollingVolatility
   * minimum: 1
   * @return nRollingVolatility
  **/
  @ApiModelProperty(value = "")
  public Integer getNRollingVolatility() {
    return nRollingVolatility;
  }

  public void setNRollingVolatility(Integer nRollingVolatility) {
    this.nRollingVolatility = nRollingVolatility;
  }

  public PerformanceCalculatorRequest histFactor(Float histFactor) {
    this.histFactor = histFactor;
    return this;
  }

   /**
   * Get histFactor
   * @return histFactor
  **/
  @ApiModelProperty(value = "")
  public Float getHistFactor() {
    return histFactor;
  }

  public void setHistFactor(Float histFactor) {
    this.histFactor = histFactor;
  }

  public PerformanceCalculatorRequest maxPercentileMonteCarlo(Float maxPercentileMonteCarlo) {
    this.maxPercentileMonteCarlo = maxPercentileMonteCarlo;
    return this;
  }

   /**
   * Get maxPercentileMonteCarlo
   * minimum: 0
   * @return maxPercentileMonteCarlo
  **/
  @ApiModelProperty(value = "")
  public Float getMaxPercentileMonteCarlo() {
    return maxPercentileMonteCarlo;
  }

  public void setMaxPercentileMonteCarlo(Float maxPercentileMonteCarlo) {
    this.maxPercentileMonteCarlo = maxPercentileMonteCarlo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceCalculatorRequest performanceCalculatorRequest = (PerformanceCalculatorRequest) o;
    return Objects.equals(this.annualizedReturnPeriod, performanceCalculatorRequest.annualizedReturnPeriod) &&
        Objects.equals(this.riskFreeAlpha, performanceCalculatorRequest.riskFreeAlpha) &&
        Objects.equals(this.allocationId, performanceCalculatorRequest.allocationId) &&
        Objects.equals(this.meanPercentileMonteCarlo, performanceCalculatorRequest.meanPercentileMonteCarlo) &&
        Objects.equals(this.modelId, performanceCalculatorRequest.modelId) &&
        Objects.equals(this.marDownsideDeviation, performanceCalculatorRequest.marDownsideDeviation) &&
        Objects.equals(this.riskFreeSharpe, performanceCalculatorRequest.riskFreeSharpe) &&
        Objects.equals(this.benchmarkId, performanceCalculatorRequest.benchmarkId) &&
        Objects.equals(this.riskFreeSortino, performanceCalculatorRequest.riskFreeSortino) &&
        Objects.equals(this.householdId, performanceCalculatorRequest.householdId) &&
        Objects.equals(this.minPercentileMonteCarlo, performanceCalculatorRequest.minPercentileMonteCarlo) &&
        Objects.equals(this.movingAverageNDay, performanceCalculatorRequest.movingAverageNDay) &&
        Objects.equals(this.activePremiumPeriod, performanceCalculatorRequest.activePremiumPeriod) &&
        Objects.equals(this.statName, performanceCalculatorRequest.statName) &&
        Objects.equals(this.endDate, performanceCalculatorRequest.endDate) &&
        Objects.equals(this.startDate, performanceCalculatorRequest.startDate) &&
        Objects.equals(this.nDayReturns, performanceCalculatorRequest.nDayReturns) &&
        Objects.equals(this.varConfInterval, performanceCalculatorRequest.varConfInterval) &&
        Objects.equals(this.periodType, performanceCalculatorRequest.periodType) &&
        Objects.equals(this.riskFreeTreynor, performanceCalculatorRequest.riskFreeTreynor) &&
        Objects.equals(this.nRollingMaxDrawdown, performanceCalculatorRequest.nRollingMaxDrawdown) &&
        Objects.equals(this.portfolioId, performanceCalculatorRequest.portfolioId) &&
        Objects.equals(this.numSimMonteCarlo, performanceCalculatorRequest.numSimMonteCarlo) &&
        Objects.equals(this.goalId, performanceCalculatorRequest.goalId) &&
        Objects.equals(this.accountId, performanceCalculatorRequest.accountId) &&
        Objects.equals(this.securityId, performanceCalculatorRequest.securityId) &&
        Objects.equals(this.nPathMonteCarlo, performanceCalculatorRequest.nPathMonteCarlo) &&
        Objects.equals(this.clientId, performanceCalculatorRequest.clientId) &&
        Objects.equals(this.nRollingVolatility, performanceCalculatorRequest.nRollingVolatility) &&
        Objects.equals(this.histFactor, performanceCalculatorRequest.histFactor) &&
        Objects.equals(this.maxPercentileMonteCarlo, performanceCalculatorRequest.maxPercentileMonteCarlo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annualizedReturnPeriod, riskFreeAlpha, allocationId, meanPercentileMonteCarlo, modelId, marDownsideDeviation, riskFreeSharpe, benchmarkId, riskFreeSortino, householdId, minPercentileMonteCarlo, movingAverageNDay, activePremiumPeriod, statName, endDate, startDate, nDayReturns, varConfInterval, periodType, riskFreeTreynor, nRollingMaxDrawdown, portfolioId, numSimMonteCarlo, goalId, accountId, securityId, nPathMonteCarlo, clientId, nRollingVolatility, histFactor, maxPercentileMonteCarlo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceCalculatorRequest {\n");
    
    sb.append("    annualizedReturnPeriod: ").append(toIndentedString(annualizedReturnPeriod)).append("\n");
    sb.append("    riskFreeAlpha: ").append(toIndentedString(riskFreeAlpha)).append("\n");
    sb.append("    allocationId: ").append(toIndentedString(allocationId)).append("\n");
    sb.append("    meanPercentileMonteCarlo: ").append(toIndentedString(meanPercentileMonteCarlo)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    marDownsideDeviation: ").append(toIndentedString(marDownsideDeviation)).append("\n");
    sb.append("    riskFreeSharpe: ").append(toIndentedString(riskFreeSharpe)).append("\n");
    sb.append("    benchmarkId: ").append(toIndentedString(benchmarkId)).append("\n");
    sb.append("    riskFreeSortino: ").append(toIndentedString(riskFreeSortino)).append("\n");
    sb.append("    householdId: ").append(toIndentedString(householdId)).append("\n");
    sb.append("    minPercentileMonteCarlo: ").append(toIndentedString(minPercentileMonteCarlo)).append("\n");
    sb.append("    movingAverageNDay: ").append(toIndentedString(movingAverageNDay)).append("\n");
    sb.append("    activePremiumPeriod: ").append(toIndentedString(activePremiumPeriod)).append("\n");
    sb.append("    statName: ").append(toIndentedString(statName)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    nDayReturns: ").append(toIndentedString(nDayReturns)).append("\n");
    sb.append("    varConfInterval: ").append(toIndentedString(varConfInterval)).append("\n");
    sb.append("    periodType: ").append(toIndentedString(periodType)).append("\n");
    sb.append("    riskFreeTreynor: ").append(toIndentedString(riskFreeTreynor)).append("\n");
    sb.append("    nRollingMaxDrawdown: ").append(toIndentedString(nRollingMaxDrawdown)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    numSimMonteCarlo: ").append(toIndentedString(numSimMonteCarlo)).append("\n");
    sb.append("    goalId: ").append(toIndentedString(goalId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    securityId: ").append(toIndentedString(securityId)).append("\n");
    sb.append("    nPathMonteCarlo: ").append(toIndentedString(nPathMonteCarlo)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    nRollingVolatility: ").append(toIndentedString(nRollingVolatility)).append("\n");
    sb.append("    histFactor: ").append(toIndentedString(histFactor)).append("\n");
    sb.append("    maxPercentileMonteCarlo: ").append(toIndentedString(maxPercentileMonteCarlo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

