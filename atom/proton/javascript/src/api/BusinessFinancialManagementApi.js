/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BusinessFinancialHealthCheckRequest', 'model/BusinessInvoiceAnalysisRequest', 'model/CashAnalysisRequest', 'model/CustomerAnalysisRequest', 'model/FinancialStatementAnalysisRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BusinessFinancialHealthCheckRequest'), require('../model/BusinessInvoiceAnalysisRequest'), require('../model/CashAnalysisRequest'), require('../model/CustomerAnalysisRequest'), require('../model/FinancialStatementAnalysisRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenProtonApi) {
      root.HydrogenProtonApi = {};
    }
    root.HydrogenProtonApi.BusinessFinancialManagementApi = factory(root.HydrogenProtonApi.ApiClient, root.HydrogenProtonApi.BusinessFinancialHealthCheckRequest, root.HydrogenProtonApi.BusinessInvoiceAnalysisRequest, root.HydrogenProtonApi.CashAnalysisRequest, root.HydrogenProtonApi.CustomerAnalysisRequest, root.HydrogenProtonApi.FinancialStatementAnalysisRequest);
  }
}(this, function(ApiClient, BusinessFinancialHealthCheckRequest, BusinessInvoiceAnalysisRequest, CashAnalysisRequest, CustomerAnalysisRequest, FinancialStatementAnalysisRequest) {
  'use strict';

  /**
   * BusinessFinancialManagement service.
   * @module api/BusinessFinancialManagementApi
   * @version 1.9.2
   */

  /**
   * Constructs a new BusinessFinancialManagementApi. 
   * @alias module:api/BusinessFinancialManagementApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the businessFinancialHealthCheck operation.
     * @callback module:api/BusinessFinancialManagementApi~businessFinancialHealthCheckCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Business Financial Health Check
     * Calculate a series of financial ratios to assess business financial health
     * @param {module:model/BusinessFinancialHealthCheckRequest} businessFinancialHealthCheckRequest Request payload for Business Financial Health Check
     * @param {module:api/BusinessFinancialManagementApi~businessFinancialHealthCheckCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.businessFinancialHealthCheck = function(businessFinancialHealthCheckRequest, callback) {
      var postBody = businessFinancialHealthCheckRequest;

      // verify the required parameter 'businessFinancialHealthCheckRequest' is set
      if (businessFinancialHealthCheckRequest === undefined || businessFinancialHealthCheckRequest === null) {
        throw new Error("Missing the required parameter 'businessFinancialHealthCheckRequest' when calling businessFinancialHealthCheck");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/business/financial_health_check', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the cashAnalysis operation.
     * @callback module:api/BusinessFinancialManagementApi~cashAnalysisCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cash Analysis
     * Analyze cash activity over time
     * @param {module:model/CashAnalysisRequest} cashAnalysisRequest Request payload for Cash Analysis
     * @param {module:api/BusinessFinancialManagementApi~cashAnalysisCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.cashAnalysis = function(cashAnalysisRequest, callback) {
      var postBody = cashAnalysisRequest;

      // verify the required parameter 'cashAnalysisRequest' is set
      if (cashAnalysisRequest === undefined || cashAnalysisRequest === null) {
        throw new Error("Missing the required parameter 'cashAnalysisRequest' when calling cashAnalysis");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/business/cash_analysis', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the customerAnalysis operation.
     * @callback module:api/BusinessFinancialManagementApi~customerAnalysisCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Customer Analysis
     * Analyze customer revenues over a time period
     * @param {module:model/CustomerAnalysisRequest} customerAnalysisRequest Request payload for Customer Analysis
     * @param {module:api/BusinessFinancialManagementApi~customerAnalysisCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.customerAnalysis = function(customerAnalysisRequest, callback) {
      var postBody = customerAnalysisRequest;

      // verify the required parameter 'customerAnalysisRequest' is set
      if (customerAnalysisRequest === undefined || customerAnalysisRequest === null) {
        throw new Error("Missing the required parameter 'customerAnalysisRequest' when calling customerAnalysis");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/business/customer_analysis', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the financialStatementAnalysis operation.
     * @callback module:api/BusinessFinancialManagementApi~financialStatementAnalysisCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Financial Statement Analysis
     * Analyze financial statement accounting data for a business
     * @param {module:model/FinancialStatementAnalysisRequest} financialStatementAnalysisRequest Request payload for Financial Statement Analysis
     * @param {module:api/BusinessFinancialManagementApi~financialStatementAnalysisCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.financialStatementAnalysis = function(financialStatementAnalysisRequest, callback) {
      var postBody = financialStatementAnalysisRequest;

      // verify the required parameter 'financialStatementAnalysisRequest' is set
      if (financialStatementAnalysisRequest === undefined || financialStatementAnalysisRequest === null) {
        throw new Error("Missing the required parameter 'financialStatementAnalysisRequest' when calling financialStatementAnalysis");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/business/financial_statement_analysis', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceAnalysis operation.
     * @callback module:api/BusinessFinancialManagementApi~invoiceAnalysisCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Invoice Analysis
     * Analyze invoices to understand the context of money owed and paid to a business
     * @param {module:model/BusinessInvoiceAnalysisRequest} invoiceAnalysisRequest Request payload for Invoice Analysis
     * @param {module:api/BusinessFinancialManagementApi~invoiceAnalysisCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': Object}>}
     */
    this.invoiceAnalysis = function(invoiceAnalysisRequest, callback) {
      var postBody = invoiceAnalysisRequest;

      // verify the required parameter 'invoiceAnalysisRequest' is set
      if (invoiceAnalysisRequest === undefined || invoiceAnalysisRequest === null) {
        throw new Error("Missing the required parameter 'invoiceAnalysisRequest' when calling invoiceAnalysis");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': Object};

      return this.apiClient.callApi(
        '/business/invoice_analysis', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
