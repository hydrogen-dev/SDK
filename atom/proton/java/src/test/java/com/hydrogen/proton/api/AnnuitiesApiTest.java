/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.api;

import com.hydrogen.proton.ApiException;
import com.hydrogen.proton.model.AnnuityCalculatorAccumulationHorizonRequest;
import com.hydrogen.proton.model.AnnuityCalculatorAnnuityAmountRequest;
import com.hydrogen.proton.model.AnnuityCalculatorDecumulationHorizonRequest;
import com.hydrogen.proton.model.AnnuityCalculatorDepositAmountRequest;
import com.hydrogen.proton.model.AnnuityCalculatorInitialBalanceRequest;
import com.hydrogen.proton.model.VariableAnnuityRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.Map;

/**
 * API tests for AnnuitiesApi
 */
@Ignore
public class AnnuitiesApiTest {

    private final AnnuitiesApi api = new AnnuitiesApi();

    
    /**
     * Annuity Calculator - Accumulation Horizon
     *
     * Calculate the necessary fixed annuity contribution period
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annuityCalculatorAccumulationHorizonTest() throws ApiException {
        AnnuityCalculatorAccumulationHorizonRequest annuityCalculatorAccumulationHorizonRequest = null;
        Map<String, Object> response = api.annuityCalculatorAccumulationHorizon(annuityCalculatorAccumulationHorizonRequest);

        // TODO: test validations
    }
    
    /**
     * Annuity Calculator - Annuity Amount
     *
     * Calculate the achievable fixed annuity amount
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annuityCalculatorAnnuityAmountTest() throws ApiException {
        AnnuityCalculatorAnnuityAmountRequest annuityCalculatorAnnuityAmountRequest = null;
        Map<String, Object> response = api.annuityCalculatorAnnuityAmount(annuityCalculatorAnnuityAmountRequest);

        // TODO: test validations
    }
    
    /**
     * Annuity Calculator - Decumulation Horizon
     *
     * Calculate the achievable fixed annuity payout period
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annuityCalculatorDecumulationHorizonTest() throws ApiException {
        AnnuityCalculatorDecumulationHorizonRequest annuityCalculatorDecumulationHorizonRequest = null;
        Map<String, Object> response = api.annuityCalculatorDecumulationHorizon(annuityCalculatorDecumulationHorizonRequest);

        // TODO: test validations
    }
    
    /**
     * Annuity Calculator - Deposit Amount
     *
     * Calculate the necessary periodic deposit amount for a fixed annuity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annuityCalculatorDepositAmountTest() throws ApiException {
        AnnuityCalculatorDepositAmountRequest annuityCalculatorDepositAmountRequest = null;
        Map<String, Object> response = api.annuityCalculatorDepositAmount(annuityCalculatorDepositAmountRequest);

        // TODO: test validations
    }
    
    /**
     * Annuity Calculator - Initial Balance
     *
     * Calculate the necessary initial balance for a fixed annuity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annuityCalculatorInitialBalanceTest() throws ApiException {
        AnnuityCalculatorInitialBalanceRequest annuityCalculatorInitialBalanceRequest = null;
        Map<String, Object> response = api.annuityCalculatorInitialBalance(annuityCalculatorInitialBalanceRequest);

        // TODO: test validations
    }
    
    /**
     * Variable Annuity
     *
     * Project the behavior of a variable annuity over time
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void variableAnnuityTest() throws ApiException {
        VariableAnnuityRequest variableAnnuityRequest = null;
        Map<String, Object> response = api.variableAnnuity(variableAnnuityRequest);

        // TODO: test validations
    }
    
}
