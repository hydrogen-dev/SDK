/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SpendingAnalysisResponseOutlierTransactions;
import io.swagger.client.model.SpendingAnalysisResponseSpendingByMerchant;
import io.swagger.client.model.SpendingAnalysisResponseSubcategories;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * SpendingAnalysisResponseSpendingByCategory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class SpendingAnalysisResponseSpendingByCategory {
  @SerializedName("category")
  private String category = null;

  @SerializedName("value")
  private BigDecimal value = null;

  @SerializedName("weight")
  private BigDecimal weight = null;

  @SerializedName("benchmark_value")
  private BigDecimal benchmarkValue = null;

  @SerializedName("benchmark_weight")
  private BigDecimal benchmarkWeight = null;

  @SerializedName("subcategories")
  private List<SpendingAnalysisResponseSubcategories> subcategories = null;

  @SerializedName("spending_by_merchant")
  private List<SpendingAnalysisResponseSpendingByMerchant> spendingByMerchant = null;

  @SerializedName("outlier_transactions")
  private List<SpendingAnalysisResponseOutlierTransactions> outlierTransactions = null;

  public SpendingAnalysisResponseSpendingByCategory category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Spending category as defined in the Nucleus transactions
   * @return category
  **/
  @ApiModelProperty(value = "Spending category as defined in the Nucleus transactions")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public SpendingAnalysisResponseSpendingByCategory value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Sum of all transactions over the period for the given category
   * @return value
  **/
  @ApiModelProperty(value = "Sum of all transactions over the period for the given category")
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }

  public SpendingAnalysisResponseSpendingByCategory weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

   /**
   * The proportion of all spending over the period related to this category
   * @return weight
  **/
  @ApiModelProperty(value = "The proportion of all spending over the period related to this category")
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }

  public SpendingAnalysisResponseSpendingByCategory benchmarkValue(BigDecimal benchmarkValue) {
    this.benchmarkValue = benchmarkValue;
    return this;
  }

   /**
   * Sum of all transactions over the benchmark period for the given category
   * @return benchmarkValue
  **/
  @ApiModelProperty(value = "Sum of all transactions over the benchmark period for the given category")
  public BigDecimal getBenchmarkValue() {
    return benchmarkValue;
  }

  public void setBenchmarkValue(BigDecimal benchmarkValue) {
    this.benchmarkValue = benchmarkValue;
  }

  public SpendingAnalysisResponseSpendingByCategory benchmarkWeight(BigDecimal benchmarkWeight) {
    this.benchmarkWeight = benchmarkWeight;
    return this;
  }

   /**
   * The proportion of all spending over the benchmark period related to this category
   * @return benchmarkWeight
  **/
  @ApiModelProperty(value = "The proportion of all spending over the benchmark period related to this category")
  public BigDecimal getBenchmarkWeight() {
    return benchmarkWeight;
  }

  public void setBenchmarkWeight(BigDecimal benchmarkWeight) {
    this.benchmarkWeight = benchmarkWeight;
  }

  public SpendingAnalysisResponseSpendingByCategory subcategories(List<SpendingAnalysisResponseSubcategories> subcategories) {
    this.subcategories = subcategories;
    return this;
  }

  public SpendingAnalysisResponseSpendingByCategory addSubcategoriesItem(SpendingAnalysisResponseSubcategories subcategoriesItem) {
    if (this.subcategories == null) {
      this.subcategories = new ArrayList<SpendingAnalysisResponseSubcategories>();
    }
    this.subcategories.add(subcategoriesItem);
    return this;
  }

   /**
   * Get subcategories
   * @return subcategories
  **/
  @ApiModelProperty(value = "")
  public List<SpendingAnalysisResponseSubcategories> getSubcategories() {
    return subcategories;
  }

  public void setSubcategories(List<SpendingAnalysisResponseSubcategories> subcategories) {
    this.subcategories = subcategories;
  }

  public SpendingAnalysisResponseSpendingByCategory spendingByMerchant(List<SpendingAnalysisResponseSpendingByMerchant> spendingByMerchant) {
    this.spendingByMerchant = spendingByMerchant;
    return this;
  }

  public SpendingAnalysisResponseSpendingByCategory addSpendingByMerchantItem(SpendingAnalysisResponseSpendingByMerchant spendingByMerchantItem) {
    if (this.spendingByMerchant == null) {
      this.spendingByMerchant = new ArrayList<SpendingAnalysisResponseSpendingByMerchant>();
    }
    this.spendingByMerchant.add(spendingByMerchantItem);
    return this;
  }

   /**
   * Get spendingByMerchant
   * @return spendingByMerchant
  **/
  @ApiModelProperty(value = "")
  public List<SpendingAnalysisResponseSpendingByMerchant> getSpendingByMerchant() {
    return spendingByMerchant;
  }

  public void setSpendingByMerchant(List<SpendingAnalysisResponseSpendingByMerchant> spendingByMerchant) {
    this.spendingByMerchant = spendingByMerchant;
  }

  public SpendingAnalysisResponseSpendingByCategory outlierTransactions(List<SpendingAnalysisResponseOutlierTransactions> outlierTransactions) {
    this.outlierTransactions = outlierTransactions;
    return this;
  }

  public SpendingAnalysisResponseSpendingByCategory addOutlierTransactionsItem(SpendingAnalysisResponseOutlierTransactions outlierTransactionsItem) {
    if (this.outlierTransactions == null) {
      this.outlierTransactions = new ArrayList<SpendingAnalysisResponseOutlierTransactions>();
    }
    this.outlierTransactions.add(outlierTransactionsItem);
    return this;
  }

   /**
   * Get outlierTransactions
   * @return outlierTransactions
  **/
  @ApiModelProperty(value = "")
  public List<SpendingAnalysisResponseOutlierTransactions> getOutlierTransactions() {
    return outlierTransactions;
  }

  public void setOutlierTransactions(List<SpendingAnalysisResponseOutlierTransactions> outlierTransactions) {
    this.outlierTransactions = outlierTransactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpendingAnalysisResponseSpendingByCategory spendingAnalysisResponseSpendingByCategory = (SpendingAnalysisResponseSpendingByCategory) o;
    return Objects.equals(this.category, spendingAnalysisResponseSpendingByCategory.category) &&
        Objects.equals(this.value, spendingAnalysisResponseSpendingByCategory.value) &&
        Objects.equals(this.weight, spendingAnalysisResponseSpendingByCategory.weight) &&
        Objects.equals(this.benchmarkValue, spendingAnalysisResponseSpendingByCategory.benchmarkValue) &&
        Objects.equals(this.benchmarkWeight, spendingAnalysisResponseSpendingByCategory.benchmarkWeight) &&
        Objects.equals(this.subcategories, spendingAnalysisResponseSpendingByCategory.subcategories) &&
        Objects.equals(this.spendingByMerchant, spendingAnalysisResponseSpendingByCategory.spendingByMerchant) &&
        Objects.equals(this.outlierTransactions, spendingAnalysisResponseSpendingByCategory.outlierTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, value, weight, benchmarkValue, benchmarkWeight, subcategories, spendingByMerchant, outlierTransactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpendingAnalysisResponseSpendingByCategory {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    benchmarkValue: ").append(toIndentedString(benchmarkValue)).append("\n");
    sb.append("    benchmarkWeight: ").append(toIndentedString(benchmarkWeight)).append("\n");
    sb.append("    subcategories: ").append(toIndentedString(subcategories)).append("\n");
    sb.append("    spendingByMerchant: ").append(toIndentedString(spendingByMerchant)).append("\n");
    sb.append("    outlierTransactions: ").append(toIndentedString(outlierTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

