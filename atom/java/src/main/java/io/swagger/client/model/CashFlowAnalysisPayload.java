/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * CashFlowAnalysisPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-12T10:03:00.746-04:00")
public class CashFlowAnalysisPayload {
  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("benchmark_start_date")
  private LocalDate benchmarkStartDate = null;

  @SerializedName("benchmark_end_date")
  private LocalDate benchmarkEndDate = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("show_history")
  private Boolean showHistory = false;

  @SerializedName("show_spending_details")
  private Boolean showSpendingDetails = false;

  public CashFlowAnalysisPayload clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The ID of the client’s cash flows
   * @return clientId
  **/
  @ApiModelProperty(required = true, value = "The ID of the client’s cash flows")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public CashFlowAnalysisPayload startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date of the analysis period
   * @return startDate
  **/
  @ApiModelProperty(value = "Start date of the analysis period")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public CashFlowAnalysisPayload endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End date of the analysis period
   * @return endDate
  **/
  @ApiModelProperty(value = "End date of the analysis period")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public CashFlowAnalysisPayload benchmarkStartDate(LocalDate benchmarkStartDate) {
    this.benchmarkStartDate = benchmarkStartDate;
    return this;
  }

   /**
   * Start date of the benchmark analysis period
   * @return benchmarkStartDate
  **/
  @ApiModelProperty(value = "Start date of the benchmark analysis period")
  public LocalDate getBenchmarkStartDate() {
    return benchmarkStartDate;
  }

  public void setBenchmarkStartDate(LocalDate benchmarkStartDate) {
    this.benchmarkStartDate = benchmarkStartDate;
  }

  public CashFlowAnalysisPayload benchmarkEndDate(LocalDate benchmarkEndDate) {
    this.benchmarkEndDate = benchmarkEndDate;
    return this;
  }

   /**
   * End date of the benchmark analysis period
   * @return benchmarkEndDate
  **/
  @ApiModelProperty(value = "End date of the benchmark analysis period")
  public LocalDate getBenchmarkEndDate() {
    return benchmarkEndDate;
  }

  public void setBenchmarkEndDate(LocalDate benchmarkEndDate) {
    this.benchmarkEndDate = benchmarkEndDate;
  }

  public CashFlowAnalysisPayload currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Currency code used conduct the analysis. Only aggregation account records with this currency code will be considered
   * @return currencyCode
  **/
  @ApiModelProperty(value = "Currency code used conduct the analysis. Only aggregation account records with this currency code will be considered")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public CashFlowAnalysisPayload showHistory(Boolean showHistory) {
    this.showHistory = showHistory;
    return this;
  }

   /**
   * If true, return a daily history of cash flow values
   * @return showHistory
  **/
  @ApiModelProperty(value = "If true, return a daily history of cash flow values")
  public Boolean isShowHistory() {
    return showHistory;
  }

  public void setShowHistory(Boolean showHistory) {
    this.showHistory = showHistory;
  }

  public CashFlowAnalysisPayload showSpendingDetails(Boolean showSpendingDetails) {
    this.showSpendingDetails = showSpendingDetails;
    return this;
  }

   /**
   * If true, return advanced details on spending over the analysis period
   * @return showSpendingDetails
  **/
  @ApiModelProperty(value = "If true, return advanced details on spending over the analysis period")
  public Boolean isShowSpendingDetails() {
    return showSpendingDetails;
  }

  public void setShowSpendingDetails(Boolean showSpendingDetails) {
    this.showSpendingDetails = showSpendingDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashFlowAnalysisPayload cashFlowAnalysisPayload = (CashFlowAnalysisPayload) o;
    return Objects.equals(this.clientId, cashFlowAnalysisPayload.clientId) &&
        Objects.equals(this.startDate, cashFlowAnalysisPayload.startDate) &&
        Objects.equals(this.endDate, cashFlowAnalysisPayload.endDate) &&
        Objects.equals(this.benchmarkStartDate, cashFlowAnalysisPayload.benchmarkStartDate) &&
        Objects.equals(this.benchmarkEndDate, cashFlowAnalysisPayload.benchmarkEndDate) &&
        Objects.equals(this.currencyCode, cashFlowAnalysisPayload.currencyCode) &&
        Objects.equals(this.showHistory, cashFlowAnalysisPayload.showHistory) &&
        Objects.equals(this.showSpendingDetails, cashFlowAnalysisPayload.showSpendingDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, startDate, endDate, benchmarkStartDate, benchmarkEndDate, currencyCode, showHistory, showSpendingDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashFlowAnalysisPayload {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    benchmarkStartDate: ").append(toIndentedString(benchmarkStartDate)).append("\n");
    sb.append("    benchmarkEndDate: ").append(toIndentedString(benchmarkEndDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    showHistory: ").append(toIndentedString(showHistory)).append("\n");
    sb.append("    showSpendingDetails: ").append(toIndentedString(showSpendingDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

