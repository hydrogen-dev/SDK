/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * DiversificationScore
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class DiversificationScore {
  @SerializedName("portfolio_tickers")
  private List<String> portfolioTickers = new ArrayList<String>();

  @SerializedName("portfolio_weights")
  private List<BigDecimal> portfolioWeights = new ArrayList<BigDecimal>();

  @SerializedName("start_date")
  private OffsetDateTime startDate = null;

  @SerializedName("end_date")
  private OffsetDateTime endDate = null;

  @SerializedName("use_proxy_data")
  private Boolean useProxyData = false;

  public DiversificationScore portfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
    return this;
  }

  public DiversificationScore addPortfolioTickersItem(String portfolioTickersItem) {
    this.portfolioTickers.add(portfolioTickersItem);
    return this;
  }

   /**
   * List of portfolio tickers
   * @return portfolioTickers
  **/
  @ApiModelProperty(required = true, value = "List of portfolio tickers")
  public List<String> getPortfolioTickers() {
    return portfolioTickers;
  }

  public void setPortfolioTickers(List<String> portfolioTickers) {
    this.portfolioTickers = portfolioTickers;
  }

  public DiversificationScore portfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
    return this;
  }

  public DiversificationScore addPortfolioWeightsItem(BigDecimal portfolioWeightsItem) {
    this.portfolioWeights.add(portfolioWeightsItem);
    return this;
  }

   /**
   * List of portfolio weights
   * @return portfolioWeights
  **/
  @ApiModelProperty(required = true, value = "List of portfolio weights")
  public List<BigDecimal> getPortfolioWeights() {
    return portfolioWeights;
  }

  public void setPortfolioWeights(List<BigDecimal> portfolioWeights) {
    this.portfolioWeights = portfolioWeights;
  }

  public DiversificationScore startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public DiversificationScore endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public DiversificationScore useProxyData(Boolean useProxyData) {
    this.useProxyData = useProxyData;
    return this;
  }

   /**
   * If true, incorporate proxy price data as defined at the Security level in the Nucleus API. Proxy data is merged with base security data to form a continuous price history. Defaults to false.
   * @return useProxyData
  **/
  @ApiModelProperty(value = "If true, incorporate proxy price data as defined at the Security level in the Nucleus API. Proxy data is merged with base security data to form a continuous price history. Defaults to false.")
  public Boolean isUseProxyData() {
    return useProxyData;
  }

  public void setUseProxyData(Boolean useProxyData) {
    this.useProxyData = useProxyData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiversificationScore diversificationScore = (DiversificationScore) o;
    return Objects.equals(this.portfolioTickers, diversificationScore.portfolioTickers) &&
        Objects.equals(this.portfolioWeights, diversificationScore.portfolioWeights) &&
        Objects.equals(this.startDate, diversificationScore.startDate) &&
        Objects.equals(this.endDate, diversificationScore.endDate) &&
        Objects.equals(this.useProxyData, diversificationScore.useProxyData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioTickers, portfolioWeights, startDate, endDate, useProxyData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiversificationScore {\n");
    
    sb.append("    portfolioTickers: ").append(toIndentedString(portfolioTickers)).append("\n");
    sb.append("    portfolioWeights: ").append(toIndentedString(portfolioWeights)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    useProxyData: ").append(toIndentedString(useProxyData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

