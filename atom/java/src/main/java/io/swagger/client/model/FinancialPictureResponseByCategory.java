/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FinancialPictureResponseSubcategories;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * FinancialPictureResponseByCategory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T14:10:50.140-04:00")
public class FinancialPictureResponseByCategory {
  @SerializedName("category")
  private String category = null;

  @SerializedName("balance")
  private Double balance = null;

  @SerializedName("subcategories")
  private List<FinancialPictureResponseSubcategories> subcategories = null;

  public FinancialPictureResponseByCategory category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Category of the aggregation accounts. These accounts are dependent on the &#x60;category&#x60; fields within the Nucleus Aggregation Account.
   * @return category
  **/
  @ApiModelProperty(value = "Category of the aggregation accounts. These accounts are dependent on the `category` fields within the Nucleus Aggregation Account.")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public FinancialPictureResponseByCategory balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Total balance for this category on this date
   * @return balance
  **/
  @ApiModelProperty(value = "Total balance for this category on this date")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public FinancialPictureResponseByCategory subcategories(List<FinancialPictureResponseSubcategories> subcategories) {
    this.subcategories = subcategories;
    return this;
  }

  public FinancialPictureResponseByCategory addSubcategoriesItem(FinancialPictureResponseSubcategories subcategoriesItem) {
    if (this.subcategories == null) {
      this.subcategories = new ArrayList<FinancialPictureResponseSubcategories>();
    }
    this.subcategories.add(subcategoriesItem);
    return this;
  }

   /**
   * Get subcategories
   * @return subcategories
  **/
  @ApiModelProperty(value = "")
  public List<FinancialPictureResponseSubcategories> getSubcategories() {
    return subcategories;
  }

  public void setSubcategories(List<FinancialPictureResponseSubcategories> subcategories) {
    this.subcategories = subcategories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialPictureResponseByCategory financialPictureResponseByCategory = (FinancialPictureResponseByCategory) o;
    return Objects.equals(this.category, financialPictureResponseByCategory.category) &&
        Objects.equals(this.balance, financialPictureResponseByCategory.balance) &&
        Objects.equals(this.subcategories, financialPictureResponseByCategory.subcategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, balance, subcategories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialPictureResponseByCategory {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    subcategories: ").append(toIndentedString(subcategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

