/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.UUID;

/**
 * FinancialHealthCheckRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-28T09:20:08.129Z")
public class FinancialHealthCheckRequest {
  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("ratio_targets")
  private RatioTargets ratioTargets = null;

  @SerializedName("liquid_assets")
  private Float liquidAssets = null;

  @SerializedName("total_liabilities")
  private Float totalLiabilities = null;

  @SerializedName("gross_annual_income")
  private Float grossAnnualIncome = null;

  @SerializedName("short_term_liabilities")
  private Float shortTermLiabilities = null;

  @SerializedName("lookback_periods")
  private Integer lookbackPeriods = 3;

  @SerializedName("non_liquid_assets")
  private Float nonLiquidAssets = null;

  @SerializedName("monthly_expenses")
  private Float monthlyExpenses = null;

  @SerializedName("net_monthly_income")
  private Float netMonthlyIncome = null;

  public FinancialHealthCheckRequest clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public FinancialHealthCheckRequest ratioTargets(RatioTargets ratioTargets) {
    this.ratioTargets = ratioTargets;
    return this;
  }

   /**
   * Get ratioTargets
   * @return ratioTargets
  **/
  @ApiModelProperty(value = "")
  public RatioTargets getRatioTargets() {
    return ratioTargets;
  }

  public void setRatioTargets(RatioTargets ratioTargets) {
    this.ratioTargets = ratioTargets;
  }

  public FinancialHealthCheckRequest liquidAssets(Float liquidAssets) {
    this.liquidAssets = liquidAssets;
    return this;
  }

   /**
   * Get liquidAssets
   * minimum: 0
   * @return liquidAssets
  **/
  @ApiModelProperty(value = "")
  public Float getLiquidAssets() {
    return liquidAssets;
  }

  public void setLiquidAssets(Float liquidAssets) {
    this.liquidAssets = liquidAssets;
  }

  public FinancialHealthCheckRequest totalLiabilities(Float totalLiabilities) {
    this.totalLiabilities = totalLiabilities;
    return this;
  }

   /**
   * Get totalLiabilities
   * minimum: 0
   * @return totalLiabilities
  **/
  @ApiModelProperty(value = "")
  public Float getTotalLiabilities() {
    return totalLiabilities;
  }

  public void setTotalLiabilities(Float totalLiabilities) {
    this.totalLiabilities = totalLiabilities;
  }

  public FinancialHealthCheckRequest grossAnnualIncome(Float grossAnnualIncome) {
    this.grossAnnualIncome = grossAnnualIncome;
    return this;
  }

   /**
   * Get grossAnnualIncome
   * minimum: 0
   * @return grossAnnualIncome
  **/
  @ApiModelProperty(value = "")
  public Float getGrossAnnualIncome() {
    return grossAnnualIncome;
  }

  public void setGrossAnnualIncome(Float grossAnnualIncome) {
    this.grossAnnualIncome = grossAnnualIncome;
  }

  public FinancialHealthCheckRequest shortTermLiabilities(Float shortTermLiabilities) {
    this.shortTermLiabilities = shortTermLiabilities;
    return this;
  }

   /**
   * Get shortTermLiabilities
   * minimum: 0
   * @return shortTermLiabilities
  **/
  @ApiModelProperty(value = "")
  public Float getShortTermLiabilities() {
    return shortTermLiabilities;
  }

  public void setShortTermLiabilities(Float shortTermLiabilities) {
    this.shortTermLiabilities = shortTermLiabilities;
  }

  public FinancialHealthCheckRequest lookbackPeriods(Integer lookbackPeriods) {
    this.lookbackPeriods = lookbackPeriods;
    return this;
  }

   /**
   * Get lookbackPeriods
   * minimum: 1
   * @return lookbackPeriods
  **/
  @ApiModelProperty(value = "")
  public Integer getLookbackPeriods() {
    return lookbackPeriods;
  }

  public void setLookbackPeriods(Integer lookbackPeriods) {
    this.lookbackPeriods = lookbackPeriods;
  }

  public FinancialHealthCheckRequest nonLiquidAssets(Float nonLiquidAssets) {
    this.nonLiquidAssets = nonLiquidAssets;
    return this;
  }

   /**
   * Get nonLiquidAssets
   * minimum: 0
   * @return nonLiquidAssets
  **/
  @ApiModelProperty(value = "")
  public Float getNonLiquidAssets() {
    return nonLiquidAssets;
  }

  public void setNonLiquidAssets(Float nonLiquidAssets) {
    this.nonLiquidAssets = nonLiquidAssets;
  }

  public FinancialHealthCheckRequest monthlyExpenses(Float monthlyExpenses) {
    this.monthlyExpenses = monthlyExpenses;
    return this;
  }

   /**
   * Get monthlyExpenses
   * minimum: 0
   * @return monthlyExpenses
  **/
  @ApiModelProperty(value = "")
  public Float getMonthlyExpenses() {
    return monthlyExpenses;
  }

  public void setMonthlyExpenses(Float monthlyExpenses) {
    this.monthlyExpenses = monthlyExpenses;
  }

  public FinancialHealthCheckRequest netMonthlyIncome(Float netMonthlyIncome) {
    this.netMonthlyIncome = netMonthlyIncome;
    return this;
  }

   /**
   * Get netMonthlyIncome
   * minimum: 0
   * @return netMonthlyIncome
  **/
  @ApiModelProperty(value = "")
  public Float getNetMonthlyIncome() {
    return netMonthlyIncome;
  }

  public void setNetMonthlyIncome(Float netMonthlyIncome) {
    this.netMonthlyIncome = netMonthlyIncome;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialHealthCheckRequest financialHealthCheckRequest = (FinancialHealthCheckRequest) o;
    return Objects.equals(this.clientId, financialHealthCheckRequest.clientId) &&
        Objects.equals(this.ratioTargets, financialHealthCheckRequest.ratioTargets) &&
        Objects.equals(this.liquidAssets, financialHealthCheckRequest.liquidAssets) &&
        Objects.equals(this.totalLiabilities, financialHealthCheckRequest.totalLiabilities) &&
        Objects.equals(this.grossAnnualIncome, financialHealthCheckRequest.grossAnnualIncome) &&
        Objects.equals(this.shortTermLiabilities, financialHealthCheckRequest.shortTermLiabilities) &&
        Objects.equals(this.lookbackPeriods, financialHealthCheckRequest.lookbackPeriods) &&
        Objects.equals(this.nonLiquidAssets, financialHealthCheckRequest.nonLiquidAssets) &&
        Objects.equals(this.monthlyExpenses, financialHealthCheckRequest.monthlyExpenses) &&
        Objects.equals(this.netMonthlyIncome, financialHealthCheckRequest.netMonthlyIncome);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, ratioTargets, liquidAssets, totalLiabilities, grossAnnualIncome, shortTermLiabilities, lookbackPeriods, nonLiquidAssets, monthlyExpenses, netMonthlyIncome);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialHealthCheckRequest {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    ratioTargets: ").append(toIndentedString(ratioTargets)).append("\n");
    sb.append("    liquidAssets: ").append(toIndentedString(liquidAssets)).append("\n");
    sb.append("    totalLiabilities: ").append(toIndentedString(totalLiabilities)).append("\n");
    sb.append("    grossAnnualIncome: ").append(toIndentedString(grossAnnualIncome)).append("\n");
    sb.append("    shortTermLiabilities: ").append(toIndentedString(shortTermLiabilities)).append("\n");
    sb.append("    lookbackPeriods: ").append(toIndentedString(lookbackPeriods)).append("\n");
    sb.append("    nonLiquidAssets: ").append(toIndentedString(nonLiquidAssets)).append("\n");
    sb.append("    monthlyExpenses: ").append(toIndentedString(monthlyExpenses)).append("\n");
    sb.append("    netMonthlyIncome: ").append(toIndentedString(netMonthlyIncome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

