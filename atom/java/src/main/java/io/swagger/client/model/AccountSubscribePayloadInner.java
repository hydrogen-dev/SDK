/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * AccountSubscribePayloadInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T14:10:50.140-04:00")
public class AccountSubscribePayloadInner {
  @SerializedName("current_weight")
  private Double currentWeight = null;

  @SerializedName("strategic_weight")
  private Double strategicWeight = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("allocation_id")
  private UUID allocationId = null;

  @SerializedName("goal_id")
  private UUID goalId = null;

  public AccountSubscribePayloadInner currentWeight(Double currentWeight) {
    this.currentWeight = currentWeight;
    return this;
  }

   /**
   * Current weight of the security as a percentage of the model’s total value; ex. 20 representing 20%. If the security is the only one, enter 100
   * @return currentWeight
  **/
  @ApiModelProperty(required = true, value = "Current weight of the security as a percentage of the model’s total value; ex. 20 representing 20%. If the security is the only one, enter 100")
  public Double getCurrentWeight() {
    return currentWeight;
  }

  public void setCurrentWeight(Double currentWeight) {
    this.currentWeight = currentWeight;
  }

  public AccountSubscribePayloadInner strategicWeight(Double strategicWeight) {
    this.strategicWeight = strategicWeight;
    return this;
  }

   /**
   * Strategic weight of the security as a percentage of the model’s total value; ex. 20 representing 20%. If the security is the only one, enter 100
   * @return strategicWeight
  **/
  @ApiModelProperty(required = true, value = "Strategic weight of the security as a percentage of the model’s total value; ex. 20 representing 20%. If the security is the only one, enter 100")
  public Double getStrategicWeight() {
    return strategicWeight;
  }

  public void setStrategicWeight(Double strategicWeight) {
    this.strategicWeight = strategicWeight;
  }

  public AccountSubscribePayloadInner date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the account-allocation mapping used for historical tracking
   * @return date
  **/
  @ApiModelProperty(required = true, value = "Date of the account-allocation mapping used for historical tracking")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public AccountSubscribePayloadInner allocationId(UUID allocationId) {
    this.allocationId = allocationId;
    return this;
  }

   /**
   * The ID of the allocation that is part of the account-allocation mapping
   * @return allocationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the allocation that is part of the account-allocation mapping")
  public UUID getAllocationId() {
    return allocationId;
  }

  public void setAllocationId(UUID allocationId) {
    this.allocationId = allocationId;
  }

  public AccountSubscribePayloadInner goalId(UUID goalId) {
    this.goalId = goalId;
    return this;
  }

   /**
   * The ID of the goal that is associated with this account-allocation mapping
   * @return goalId
  **/
  @ApiModelProperty(value = "The ID of the goal that is associated with this account-allocation mapping")
  public UUID getGoalId() {
    return goalId;
  }

  public void setGoalId(UUID goalId) {
    this.goalId = goalId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountSubscribePayloadInner accountSubscribePayloadInner = (AccountSubscribePayloadInner) o;
    return Objects.equals(this.currentWeight, accountSubscribePayloadInner.currentWeight) &&
        Objects.equals(this.strategicWeight, accountSubscribePayloadInner.strategicWeight) &&
        Objects.equals(this.date, accountSubscribePayloadInner.date) &&
        Objects.equals(this.allocationId, accountSubscribePayloadInner.allocationId) &&
        Objects.equals(this.goalId, accountSubscribePayloadInner.goalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentWeight, strategicWeight, date, allocationId, goalId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountSubscribePayloadInner {\n");
    
    sb.append("    currentWeight: ").append(toIndentedString(currentWeight)).append("\n");
    sb.append("    strategicWeight: ").append(toIndentedString(strategicWeight)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    allocationId: ").append(toIndentedString(allocationId)).append("\n");
    sb.append("    goalId: ").append(toIndentedString(goalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

