package main

import (
	sw "go-client"
	"golang.org/x/net/context"
	"encoding/json"
    "bytes"
	"fmt"
	 "github.com/lunux2008/xulu"
)

const (
    empty = ""
    tab   = "\t"
)

func PrettyJson(data interface{}) (string, error) {
    buffer := new(bytes.Buffer)
    encoder := json.NewEncoder(buffer)
    encoder.SetIndent(empty, tab)

    err := encoder.Encode(data)
    if err != nil {
       return empty, err
    }
    return buffer.String(), nil
}
func main() {
	// Hello world, the web server

    auth := context.WithValue(context.Background(), sw.ContextAccessToken, nil)
	var a = sw.AutoGenerateAppTokenApiService{}
	var appTokenConfig = sw.AppTokenConfig{};
	var appConfig = sw.AppConfig{};
	appConfig.AppName = "card_issuance";
	appConfig.AuthType = "client_credentials";
	var tagAttributes = sw.TagAttributes{};
	tagAttributes.Name = "<IntegrationTest>";
	tagAttributes.Value = "<IntegrationTest>";
	appTokenConfig.BasePath = "https://api.hydrogenplatform.com/admin/v1";
	appTokenConfig.ClientId = "IntegrationTest";
	appTokenConfig.ClientSecret = "IntegrationTest";
	appTokenConfig.AppNames = []sw.AppConfig{appConfig}
	appTokenConfig.Attributes = []sw.TagAttributes{tagAttributes}
	appTokenConfig.IsEmbed = true;
	appTokenConfig.IsCredsPassed = false;
	// appTokenConfig.Username = nil;
	// appTokenConfig.Password = nil;
	appTokenConfig.IsEmbed = true;

	r, res, err :=a.GetAppTokenUsingGET(auth, appTokenConfig)
	fmt.Printf("%s",err)
	fmt.Printf("%s",res)
	var result = r[0]
	b, _ := PrettyJson(result["card_issuance"])
        fmt.Printf("%s",result["card_issuance"])
	xulu.Use(res, err, b)
}