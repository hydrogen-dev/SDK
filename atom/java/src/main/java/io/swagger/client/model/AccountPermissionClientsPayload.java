/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * AccountPermissionClientsPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class AccountPermissionClientsPayload {
  @SerializedName("client_id")
  private UUID clientId = null;

  /**
   * The permission type for the client. Available values are INQUIRY_ACCESS, LIMTIED_AUTHORITY, FULL_AUTHORITY, and POWER_OF_ATTORNEY.
   */
  @JsonAdapter(PermissionTypeEnum.Adapter.class)
  public enum PermissionTypeEnum {
    INQUIRY_ACCESS("INQUIRY_ACCESS"),
    
    LIMTIED_AUTHORITY("LIMTIED_AUTHORITY"),
    
    FULL_AUTHORITY("FULL_AUTHORITY"),
    
    POWER_OF_ATTORNEY("POWER_OF_ATTORNEY");

    private String value;

    PermissionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionTypeEnum fromValue(String text) {
      for (PermissionTypeEnum b : PermissionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PermissionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PermissionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("permission_type")
  private PermissionTypeEnum permissionType = null;

  @SerializedName("acl_exist")
  private Boolean aclExist = null;

  public AccountPermissionClientsPayload clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The id of the client being granted permissions to the account. Must also be included in the clients.client_id field of the account
   * @return clientId
  **/
  @ApiModelProperty(required = true, value = "The id of the client being granted permissions to the account. Must also be included in the clients.client_id field of the account")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public AccountPermissionClientsPayload permissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
    return this;
  }

   /**
   * The permission type for the client. Available values are INQUIRY_ACCESS, LIMTIED_AUTHORITY, FULL_AUTHORITY, and POWER_OF_ATTORNEY.
   * @return permissionType
  **/
  @ApiModelProperty(required = true, value = "The permission type for the client. Available values are INQUIRY_ACCESS, LIMTIED_AUTHORITY, FULL_AUTHORITY, and POWER_OF_ATTORNEY.")
  public PermissionTypeEnum getPermissionType() {
    return permissionType;
  }

  public void setPermissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
  }

  public AccountPermissionClientsPayload aclExist(Boolean aclExist) {
    this.aclExist = aclExist;
    return this;
  }

   /**
   * Indicator used for existing clients mapped to an account (upon implementation) in the database to indicate if permissioning has been applied for them. true indicates it has. After implementation of data access controls, this field would no longer be necessary
   * @return aclExist
  **/
  @ApiModelProperty(value = "Indicator used for existing clients mapped to an account (upon implementation) in the database to indicate if permissioning has been applied for them. true indicates it has. After implementation of data access controls, this field would no longer be necessary")
  public Boolean isAclExist() {
    return aclExist;
  }

  public void setAclExist(Boolean aclExist) {
    this.aclExist = aclExist;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountPermissionClientsPayload accountPermissionClientsPayload = (AccountPermissionClientsPayload) o;
    return Objects.equals(this.clientId, accountPermissionClientsPayload.clientId) &&
        Objects.equals(this.permissionType, accountPermissionClientsPayload.permissionType) &&
        Objects.equals(this.aclExist, accountPermissionClientsPayload.aclExist);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, permissionType, aclExist);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountPermissionClientsPayload {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    permissionType: ").append(toIndentedString(permissionType)).append("\n");
    sb.append("    aclExist: ").append(toIndentedString(aclExist)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

