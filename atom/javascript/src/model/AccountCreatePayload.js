/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountCreateClient', 'model/AccountCreateGoal', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountCreateClient'), require('./AccountCreateGoal'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.AccountCreatePayload = factory(root.atom_api.ApiClient, root.atom_api.AccountCreateClient, root.atom_api.AccountCreateGoal, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, AccountCreateClient, AccountCreateGoal, SecondaryId) {
  'use strict';




  /**
   * The AccountCreatePayload model module.
   * @module model/AccountCreatePayload
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>AccountCreatePayload</code>.
   * @alias module:model/AccountCreatePayload
   * @class
   * @param name {String} Name of the account
   * @param accountTypeId {String} The ID of the account type for the account. Account types are defined by your firm
   */
  var exports = function(name, accountTypeId) {
    var _this = this;

    _this['name'] = name;
    _this['account_type_id'] = accountTypeId;






  };

  /**
   * Constructs a <code>AccountCreatePayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountCreatePayload} obj Optional instance to populate.
   * @return {module:model/AccountCreatePayload} The populated <code>AccountCreatePayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('account_type_id')) {
        obj['account_type_id'] = ApiClient.convertToType(data['account_type_id'], 'String');
      }
      if (data.hasOwnProperty('managed')) {
        obj['managed'] = ApiClient.convertToType(data['managed'], 'Boolean');
      }
      if (data.hasOwnProperty('clients')) {
        obj['clients'] = ApiClient.convertToType(data['clients'], [AccountCreateClient]);
      }
      if (data.hasOwnProperty('goals')) {
        obj['goals'] = ApiClient.convertToType(data['goals'], [AccountCreateGoal]);
      }
      if (data.hasOwnProperty('currency_code')) {
        obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
      if (data.hasOwnProperty('secondary_id')) {
        obj['secondary_id'] = SecondaryId.constructFromObject(data['secondary_id']);
      }
    }
    return obj;
  }

  /**
   * Name of the account
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The ID of the account type for the account. Account types are defined by your firm
   * @member {String} account_type_id
   */
  exports.prototype['account_type_id'] = undefined;
  /**
   * Indicates if the account is managed or self directed. Defaults to true, or that itâ€™s managed
   * @member {Boolean} managed
   * @default true
   */
  exports.prototype['managed'] = true;
  /**
   * List of clients associated with the account and their association type as well as signature data
   * @member {Array.<module:model/AccountCreateClient>} clients
   */
  exports.prototype['clients'] = undefined;
  /**
   * List of goals mapped to the account with information such as goal amount and horizon
   * @member {Array.<module:model/AccountCreateGoal>} goals
   */
  exports.prototype['goals'] = undefined;
  /**
   * Alphabetic currency code for the base currency of the account, limited to 3 characters
   * @member {String} currency_code
   */
  exports.prototype['currency_code'] = undefined;
  /**
   * Custom information associated with the account in the format key:value
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * @member {module:model/SecondaryId} secondary_id
   */
  exports.prototype['secondary_id'] = undefined;



  return exports;
}));


