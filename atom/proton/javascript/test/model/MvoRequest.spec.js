/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenProtonApi);
  }
}(this, function(expect, HydrogenProtonApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MvoRequest', function() {
      beforeEach(function() {
        instance = new HydrogenProtonApi.MvoRequest();
      });

      it('should create an instance of MvoRequest', function() {
        // TODO: update the code to test MvoRequest
        expect(instance).to.be.a(HydrogenProtonApi.MvoRequest);
      });

      it('should have the property tickers (base name: "tickers")', function() {
        // TODO: update the code to test the property tickers
        expect(instance).to.have.property('tickers');
        // expect(instance.tickers).to.be(expectedValueLiteral);
      });

      it('should have the property wConfig (base name: "w_config")', function() {
        // TODO: update the code to test the property wConfig
        expect(instance).to.have.property('wConfig');
        // expect(instance.wConfig).to.be(expectedValueLiteral);
      });

      it('should have the property minAssets (base name: "min_assets")', function() {
        // TODO: update the code to test the property minAssets
        expect(instance).to.have.property('minAssets');
        // expect(instance.minAssets).to.be(expectedValueLiteral);
      });

      it('should have the property endDate (base name: "end_date")', function() {
        // TODO: update the code to test the property endDate
        expect(instance).to.have.property('endDate');
        // expect(instance.endDate).to.be(expectedValueLiteral);
      });

      it('should have the property marketDataSource (base name: "market_data_source")', function() {
        // TODO: update the code to test the property marketDataSource
        expect(instance).to.have.property('marketDataSource');
        // expect(instance.marketDataSource).to.be(expectedValueLiteral);
      });

      it('should have the property wAssetConfig (base name: "w_asset_config")', function() {
        // TODO: update the code to test the property wAssetConfig
        expect(instance).to.have.property('wAssetConfig');
        // expect(instance.wAssetConfig).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "start_date")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property tgtType (base name: "tgt_type")', function() {
        // TODO: update the code to test the property tgtType
        expect(instance).to.have.property('tgtType');
        // expect(instance.tgtType).to.be(expectedValueLiteral);
      });

      it('should have the property useProxyData (base name: "use_proxy_data")', function() {
        // TODO: update the code to test the property useProxyData
        expect(instance).to.have.property('useProxyData');
        // expect(instance.useProxyData).to.be(expectedValueLiteral);
      });

      it('should have the property tgtVal (base name: "tgt_val")', function() {
        // TODO: update the code to test the property tgtVal
        expect(instance).to.have.property('tgtVal');
        // expect(instance.tgtVal).to.be(expectedValueLiteral);
      });

      it('should have the property secTypes (base name: "sec_types")', function() {
        // TODO: update the code to test the property secTypes
        expect(instance).to.have.property('secTypes');
        // expect(instance.secTypes).to.be(expectedValueLiteral);
      });

    });
  });

}));
