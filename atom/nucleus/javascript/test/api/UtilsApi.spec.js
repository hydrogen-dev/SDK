/**
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenNucleusApi);
  }
}(this, function(expect, HydrogenNucleusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenNucleusApi.UtilsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UtilsApi', function() {
    describe('createApplicationUsingPost', function() {
      it('should call createApplicationUsingPost successfully', function(done) {
        //uncomment below and update the code to test createApplicationUsingPost
        //instance.createApplicationUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuditLogUsingPost', function() {
      it('should call createAuditLogUsingPost successfully', function(done) {
        //uncomment below and update the code to test createAuditLogUsingPost
        //instance.createAuditLogUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeatureTrackUsingPost', function() {
      it('should call createFeatureTrackUsingPost successfully', function(done) {
        //uncomment below and update the code to test createFeatureTrackUsingPost
        //instance.createFeatureTrackUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeatureUsingPost', function() {
      it('should call createFeatureUsingPost successfully', function(done) {
        //uncomment below and update the code to test createFeatureUsingPost
        //instance.createFeatureUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotificationClientUsingPost', function() {
      it('should call createNotificationClientUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationClientUsingPost
        //instance.createNotificationClientUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotificationSettingUsingPost', function() {
      it('should call createNotificationSettingUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationSettingUsingPost
        //instance.createNotificationSettingUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotificationUsingPost', function() {
      it('should call createNotificationUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationUsingPost
        //instance.createNotificationUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReasonCodeUsingPost', function() {
      it('should call createReasonCodeUsingPost successfully', function(done) {
        //uncomment below and update the code to test createReasonCodeUsingPost
        //instance.createReasonCodeUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStageUsingPost', function() {
      it('should call createStageUsingPost successfully', function(done) {
        //uncomment below and update the code to test createStageUsingPost
        //instance.createStageUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTransactionCodeUsingPost', function() {
      it('should call createTransactionCodeUsingPost successfully', function(done) {
        //uncomment below and update the code to test createTransactionCodeUsingPost
        //instance.createTransactionCodeUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApplicationUsingDelete', function() {
      it('should call deleteApplicationUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteApplicationUsingDelete
        //instance.deleteApplicationUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFeatureTrackUsingDelete', function() {
      it('should call deleteFeatureTrackUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteFeatureTrackUsingDelete
        //instance.deleteFeatureTrackUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFeatureUsingDelete', function() {
      it('should call deleteFeatureUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteFeatureUsingDelete
        //instance.deleteFeatureUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationClientUsingDelete', function() {
      it('should call deleteNotificationClientUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationClientUsingDelete
        //instance.deleteNotificationClientUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationSettingUsingDelete', function() {
      it('should call deleteNotificationSettingUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationSettingUsingDelete
        //instance.deleteNotificationSettingUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationUsingDelete', function() {
      it('should call deleteNotificationUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationUsingDelete
        //instance.deleteNotificationUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReasonCodeUsingDelete', function() {
      it('should call deleteReasonCodeUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteReasonCodeUsingDelete
        //instance.deleteReasonCodeUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStageUsingDelete', function() {
      it('should call deleteStageUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteStageUsingDelete
        //instance.deleteStageUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransactionCodeUsingDelete', function() {
      it('should call deleteTransactionCodeUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteTransactionCodeUsingDelete
        //instance.deleteTransactionCodeUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationAllUsingGet', function() {
      it('should call getApplicationAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getApplicationAllUsingGet
        //instance.getApplicationAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationUsingGet', function() {
      it('should call getApplicationUsingGet successfully', function(done) {
        //uncomment below and update the code to test getApplicationUsingGet
        //instance.getApplicationUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuditLogAllUsingGet', function() {
      it('should call getAuditLogAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getAuditLogAllUsingGet
        //instance.getAuditLogAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuditLogUsingGet', function() {
      it('should call getAuditLogUsingGet successfully', function(done) {
        //uncomment below and update the code to test getAuditLogUsingGet
        //instance.getAuditLogUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeatureAllUsingGet', function() {
      it('should call getFeatureAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getFeatureAllUsingGet
        //instance.getFeatureAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeatureTrackAllUsingGet', function() {
      it('should call getFeatureTrackAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getFeatureTrackAllUsingGet
        //instance.getFeatureTrackAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeatureTrackUsingGet', function() {
      it('should call getFeatureTrackUsingGet successfully', function(done) {
        //uncomment below and update the code to test getFeatureTrackUsingGet
        //instance.getFeatureTrackUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeatureUsingGet', function() {
      it('should call getFeatureUsingGet successfully', function(done) {
        //uncomment below and update the code to test getFeatureUsingGet
        //instance.getFeatureUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationAllUsingGet', function() {
      it('should call getNotificationAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationAllUsingGet
        //instance.getNotificationAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationClientAllUsingGet', function() {
      it('should call getNotificationClientAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationClientAllUsingGet
        //instance.getNotificationClientAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationClientUsingGet', function() {
      it('should call getNotificationClientUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationClientUsingGet
        //instance.getNotificationClientUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationSettingAllUsingGet', function() {
      it('should call getNotificationSettingAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationSettingAllUsingGet
        //instance.getNotificationSettingAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationSettingUsingGet', function() {
      it('should call getNotificationSettingUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationSettingUsingGet
        //instance.getNotificationSettingUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationUsingGet', function() {
      it('should call getNotificationUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationUsingGet
        //instance.getNotificationUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReasonCodeAllUsingGet', function() {
      it('should call getReasonCodeAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getReasonCodeAllUsingGet
        //instance.getReasonCodeAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReasonCodeUsingGet', function() {
      it('should call getReasonCodeUsingGet successfully', function(done) {
        //uncomment below and update the code to test getReasonCodeUsingGet
        //instance.getReasonCodeUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStageAllUsingGet', function() {
      it('should call getStageAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getStageAllUsingGet
        //instance.getStageAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStageUsingGet', function() {
      it('should call getStageUsingGet successfully', function(done) {
        //uncomment below and update the code to test getStageUsingGet
        //instance.getStageUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCodeAllUsingGet', function() {
      it('should call getTransactionCodeAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getTransactionCodeAllUsingGet
        //instance.getTransactionCodeAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCodeUsingGet', function() {
      it('should call getTransactionCodeUsingGet successfully', function(done) {
        //uncomment below and update the code to test getTransactionCodeUsingGet
        //instance.getTransactionCodeUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplicationUsingPut', function() {
      it('should call updateApplicationUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateApplicationUsingPut
        //instance.updateApplicationUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFeatureTrackUsingPut', function() {
      it('should call updateFeatureTrackUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateFeatureTrackUsingPut
        //instance.updateFeatureTrackUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFeatureUsingPut', function() {
      it('should call updateFeatureUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateFeatureUsingPut
        //instance.updateFeatureUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationClientUsingPut', function() {
      it('should call updateNotificationClientUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationClientUsingPut
        //instance.updateNotificationClientUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationSettingUsingPut', function() {
      it('should call updateNotificationSettingUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationSettingUsingPut
        //instance.updateNotificationSettingUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationUsingPut', function() {
      it('should call updateNotificationUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationUsingPut
        //instance.updateNotificationUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateReasonCodeUsingPut', function() {
      it('should call updateReasonCodeUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateReasonCodeUsingPut
        //instance.updateReasonCodeUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStageUsingPut', function() {
      it('should call updateStageUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateStageUsingPut
        //instance.updateStageUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransactionCodeUsingPut', function() {
      it('should call updateTransactionCodeUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateTransactionCodeUsingPut
        //instance.updateTransactionCodeUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
