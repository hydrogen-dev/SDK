/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DepositSchedule'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DepositSchedule'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.RetirementCalculatorDepositAmount = factory(root.atom_api.ApiClient, root.atom_api.DepositSchedule);
  }
}(this, function(ApiClient, DepositSchedule) {
  'use strict';




  /**
   * The RetirementCalculatorDepositAmount model module.
   * @module model/RetirementCalculatorDepositAmount
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>RetirementCalculatorDepositAmount</code>.
   * @alias module:model/RetirementCalculatorDepositAmount
   * @class
   * @param currentAge {Number} Current age of the user
   * @param deathAge {Number} Expected death age
   * @param retirementExpenses {Number} Annual retirement expenses
   * @param portfolioReturn {Number} The annualized portfolio return
   */
  var exports = function(currentAge, deathAge, retirementExpenses, portfolioReturn) {
    var _this = this;

    _this['current_age'] = currentAge;
    _this['death_age'] = deathAge;
    _this['retirement_expenses'] = retirementExpenses;
    _this['portfolio_return'] = portfolioReturn;







  };

  /**
   * Constructs a <code>RetirementCalculatorDepositAmount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RetirementCalculatorDepositAmount} obj Optional instance to populate.
   * @return {module:model/RetirementCalculatorDepositAmount} The populated <code>RetirementCalculatorDepositAmount</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('current_age')) {
        obj['current_age'] = ApiClient.convertToType(data['current_age'], 'Number');
      }
      if (data.hasOwnProperty('death_age')) {
        obj['death_age'] = ApiClient.convertToType(data['death_age'], 'Number');
      }
      if (data.hasOwnProperty('retirement_expenses')) {
        obj['retirement_expenses'] = ApiClient.convertToType(data['retirement_expenses'], 'Number');
      }
      if (data.hasOwnProperty('portfolio_return')) {
        obj['portfolio_return'] = ApiClient.convertToType(data['portfolio_return'], 'Number');
      }
      if (data.hasOwnProperty('retirement_age')) {
        obj['retirement_age'] = ApiClient.convertToType(data['retirement_age'], 'Number');
      }
      if (data.hasOwnProperty('percent_of_expenses_covered')) {
        obj['percent_of_expenses_covered'] = ApiClient.convertToType(data['percent_of_expenses_covered'], 'Number');
      }
      if (data.hasOwnProperty('retirement_savings')) {
        obj['retirement_savings'] = ApiClient.convertToType(data['retirement_savings'], 'Number');
      }
      if (data.hasOwnProperty('retirement_income')) {
        obj['retirement_income'] = ApiClient.convertToType(data['retirement_income'], 'Number');
      }
      if (data.hasOwnProperty('deposit_schedule')) {
        obj['deposit_schedule'] = DepositSchedule.constructFromObject(data['deposit_schedule']);
      }
      if (data.hasOwnProperty('inflation_rate')) {
        obj['inflation_rate'] = ApiClient.convertToType(data['inflation_rate'], 'Number');
      }
      if (data.hasOwnProperty('retirement_tax')) {
        obj['retirement_tax'] = ApiClient.convertToType(data['retirement_tax'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Current age of the user
   * @member {Number} current_age
   */
  exports.prototype['current_age'] = undefined;
  /**
   * Expected death age
   * @member {Number} death_age
   */
  exports.prototype['death_age'] = undefined;
  /**
   * Annual retirement expenses
   * @member {Number} retirement_expenses
   */
  exports.prototype['retirement_expenses'] = undefined;
  /**
   * The annualized portfolio return
   * @member {Number} portfolio_return
   */
  exports.prototype['portfolio_return'] = undefined;
  /**
   * The age of retirement
   * @member {Number} retirement_age
   */
  exports.prototype['retirement_age'] = undefined;
  /**
   * Percentage of current expenses needed during retirement
   * @member {Number} percent_of_expenses_covered
   */
  exports.prototype['percent_of_expenses_covered'] = undefined;
  /**
   * Current amount of retirement savings
   * @member {Number} retirement_savings
   */
  exports.prototype['retirement_savings'] = undefined;
  /**
   * Expected retirement income
   * @member {Number} retirement_income
   */
  exports.prototype['retirement_income'] = undefined;
  /**
   * @member {module:model/DepositSchedule} deposit_schedule
   */
  exports.prototype['deposit_schedule'] = undefined;
  /**
   * The annualized inflation rate
   * @member {Number} inflation_rate
   */
  exports.prototype['inflation_rate'] = undefined;
  /**
   * The expected tax rate in retirement
   * @member {Number} retirement_tax
   */
  exports.prototype['retirement_tax'] = undefined;



  return exports;
}));


