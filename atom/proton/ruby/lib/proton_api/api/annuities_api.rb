=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module ProtonApi
  class AnnuitiesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Annuity Calculator - Accumulation Horizon
    # Calculate the necessary fixed annuity contribution period
    # @param annuity_calculator_accumulation_horizon_request Request payload for Annuity Calculator - Accumulation Horizon
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def annuity_calculator_accumulation_horizon(annuity_calculator_accumulation_horizon_request, opts = {})
      data, _status_code, _headers = annuity_calculator_accumulation_horizon_with_http_info(annuity_calculator_accumulation_horizon_request, opts)
      data
    end

    # Annuity Calculator - Accumulation Horizon
    # Calculate the necessary fixed annuity contribution period
    # @param annuity_calculator_accumulation_horizon_request Request payload for Annuity Calculator - Accumulation Horizon
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def annuity_calculator_accumulation_horizon_with_http_info(annuity_calculator_accumulation_horizon_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.annuity_calculator_accumulation_horizon ...'
      end
      # verify the required parameter 'annuity_calculator_accumulation_horizon_request' is set
      if @api_client.config.client_side_validation && annuity_calculator_accumulation_horizon_request.nil?
        fail ArgumentError, "Missing the required parameter 'annuity_calculator_accumulation_horizon_request' when calling AnnuitiesApi.annuity_calculator_accumulation_horizon"
      end
      # resource path
      local_var_path = '/annuity_calculator/accumulation_horizon'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(annuity_calculator_accumulation_horizon_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#annuity_calculator_accumulation_horizon\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Annuity Calculator - Annuity Amount
    # Calculate the achievable fixed annuity amount
    # @param annuity_calculator_annuity_amount_request Request payload for Annuity Calculator - Annuity Amount
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def annuity_calculator_annuity_amount(annuity_calculator_annuity_amount_request, opts = {})
      data, _status_code, _headers = annuity_calculator_annuity_amount_with_http_info(annuity_calculator_annuity_amount_request, opts)
      data
    end

    # Annuity Calculator - Annuity Amount
    # Calculate the achievable fixed annuity amount
    # @param annuity_calculator_annuity_amount_request Request payload for Annuity Calculator - Annuity Amount
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def annuity_calculator_annuity_amount_with_http_info(annuity_calculator_annuity_amount_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.annuity_calculator_annuity_amount ...'
      end
      # verify the required parameter 'annuity_calculator_annuity_amount_request' is set
      if @api_client.config.client_side_validation && annuity_calculator_annuity_amount_request.nil?
        fail ArgumentError, "Missing the required parameter 'annuity_calculator_annuity_amount_request' when calling AnnuitiesApi.annuity_calculator_annuity_amount"
      end
      # resource path
      local_var_path = '/annuity_calculator/annuity_amount'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(annuity_calculator_annuity_amount_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#annuity_calculator_annuity_amount\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Annuity Calculator - Decumulation Horizon
    # Calculate the achievable fixed annuity payout period
    # @param annuity_calculator_decumulation_horizon_request Request payload for Annuity Calculator - Decumulation Horizon
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def annuity_calculator_decumulation_horizon(annuity_calculator_decumulation_horizon_request, opts = {})
      data, _status_code, _headers = annuity_calculator_decumulation_horizon_with_http_info(annuity_calculator_decumulation_horizon_request, opts)
      data
    end

    # Annuity Calculator - Decumulation Horizon
    # Calculate the achievable fixed annuity payout period
    # @param annuity_calculator_decumulation_horizon_request Request payload for Annuity Calculator - Decumulation Horizon
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def annuity_calculator_decumulation_horizon_with_http_info(annuity_calculator_decumulation_horizon_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.annuity_calculator_decumulation_horizon ...'
      end
      # verify the required parameter 'annuity_calculator_decumulation_horizon_request' is set
      if @api_client.config.client_side_validation && annuity_calculator_decumulation_horizon_request.nil?
        fail ArgumentError, "Missing the required parameter 'annuity_calculator_decumulation_horizon_request' when calling AnnuitiesApi.annuity_calculator_decumulation_horizon"
      end
      # resource path
      local_var_path = '/annuity_calculator/decumulation_horizon'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(annuity_calculator_decumulation_horizon_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#annuity_calculator_decumulation_horizon\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Annuity Calculator - Deposit Amount
    # Calculate the necessary periodic deposit amount for a fixed annuity
    # @param annuity_calculator_deposit_amount_request Request payload for Annuity Calculator - Deposit Amount
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def annuity_calculator_deposit_amount(annuity_calculator_deposit_amount_request, opts = {})
      data, _status_code, _headers = annuity_calculator_deposit_amount_with_http_info(annuity_calculator_deposit_amount_request, opts)
      data
    end

    # Annuity Calculator - Deposit Amount
    # Calculate the necessary periodic deposit amount for a fixed annuity
    # @param annuity_calculator_deposit_amount_request Request payload for Annuity Calculator - Deposit Amount
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def annuity_calculator_deposit_amount_with_http_info(annuity_calculator_deposit_amount_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.annuity_calculator_deposit_amount ...'
      end
      # verify the required parameter 'annuity_calculator_deposit_amount_request' is set
      if @api_client.config.client_side_validation && annuity_calculator_deposit_amount_request.nil?
        fail ArgumentError, "Missing the required parameter 'annuity_calculator_deposit_amount_request' when calling AnnuitiesApi.annuity_calculator_deposit_amount"
      end
      # resource path
      local_var_path = '/annuity_calculator/deposit_amount'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(annuity_calculator_deposit_amount_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#annuity_calculator_deposit_amount\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Annuity Calculator - Initial Balance
    # Calculate the necessary initial balance for a fixed annuity
    # @param annuity_calculator_initial_balance_request Request payload for Annuity Calculator - Initial Balance
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def annuity_calculator_initial_balance(annuity_calculator_initial_balance_request, opts = {})
      data, _status_code, _headers = annuity_calculator_initial_balance_with_http_info(annuity_calculator_initial_balance_request, opts)
      data
    end

    # Annuity Calculator - Initial Balance
    # Calculate the necessary initial balance for a fixed annuity
    # @param annuity_calculator_initial_balance_request Request payload for Annuity Calculator - Initial Balance
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def annuity_calculator_initial_balance_with_http_info(annuity_calculator_initial_balance_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.annuity_calculator_initial_balance ...'
      end
      # verify the required parameter 'annuity_calculator_initial_balance_request' is set
      if @api_client.config.client_side_validation && annuity_calculator_initial_balance_request.nil?
        fail ArgumentError, "Missing the required parameter 'annuity_calculator_initial_balance_request' when calling AnnuitiesApi.annuity_calculator_initial_balance"
      end
      # resource path
      local_var_path = '/annuity_calculator/initial_balance'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(annuity_calculator_initial_balance_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#annuity_calculator_initial_balance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Variable Annuity
    # Project the behavior of a variable annuity over time
    # @param variable_annuity_request Request payload for Variable Annuity
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def variable_annuity(variable_annuity_request, opts = {})
      data, _status_code, _headers = variable_annuity_with_http_info(variable_annuity_request, opts)
      data
    end

    # Variable Annuity
    # Project the behavior of a variable annuity over time
    # @param variable_annuity_request Request payload for Variable Annuity
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def variable_annuity_with_http_info(variable_annuity_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AnnuitiesApi.variable_annuity ...'
      end
      # verify the required parameter 'variable_annuity_request' is set
      if @api_client.config.client_side_validation && variable_annuity_request.nil?
        fail ArgumentError, "Missing the required parameter 'variable_annuity_request' when calling AnnuitiesApi.variable_annuity"
      end
      # resource path
      local_var_path = '/variable_annuity'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(variable_annuity_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AnnuitiesApi#variable_annuity\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
