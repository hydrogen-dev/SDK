/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/ClientPayload', 'model/SecondaryId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Address'), require('./ClientPayload'), require('./SecondaryId'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.CreateClientResponse = factory(root.atom_api.ApiClient, root.atom_api.Address, root.atom_api.ClientPayload, root.atom_api.SecondaryId);
  }
}(this, function(ApiClient, Address, ClientPayload, SecondaryId) {
  'use strict';




  /**
   * The CreateClientResponse model module.
   * @module model/CreateClientResponse
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>CreateClientResponse</code>.
   * @alias module:model/CreateClientResponse
   * @class
   * @implements module:model/ClientPayload
   * @param username {String} Username for the client used on the firm’s platform
   * @param clientType {module:model/ClientPayload.ClientTypeEnum} 
   */
  var exports = function(username, clientType) {
    var _this = this;

    ClientPayload.call(_this, username, clientType);


  };

  /**
   * Constructs a <code>CreateClientResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateClientResponse} obj Optional instance to populate.
   * @return {module:model/CreateClientResponse} The populated <code>CreateClientResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      ClientPayload.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('create_date')) {
        obj['create_date'] = ApiClient.convertToType(data['create_date'], 'String');
      }
    }
    return obj;
  }

  /**
   * ID of the client record
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Datetime the client record was created
   * @member {String} create_date
   */
  exports.prototype['create_date'] = undefined;

  // Implement ClientPayload interface:
  /**
   * Username for the client used on the firm’s platform
   * @member {String} username
   */
exports.prototype['username'] = undefined;

  /**
   * @member {module:model/ClientPayload.ClientTypeEnum} client_type
   */
exports.prototype['client_type'] = undefined;

  /**
   * Contact email for the client in the format sample@example.com
   * @member {String} email
   */
exports.prototype['email'] = undefined;

  /**
   * The title of the client such as “Mr.”, “Ms.”, “Miss”, “Mx.”, etc.
   * @member {String} title
   */
exports.prototype['title'] = undefined;

  /**
   * First name or given name of the client
   * @member {String} first_name
   */
exports.prototype['first_name'] = undefined;

  /**
   * Middle name of the client
   * @member {String} middle_name
   */
exports.prototype['middle_name'] = undefined;

  /**
   * Last name or surname of the client
   * @member {String} last_name
   */
exports.prototype['last_name'] = undefined;

  /**
   * Phone number associated with the client
   * @member {String} phone_number
   */
exports.prototype['phone_number'] = undefined;

  /**
   * Date of birth of the client in the ISO 8601 format YYYY-MM-DD
   * @member {Date} date_of_birth
   */
exports.prototype['date_of_birth'] = undefined;

  /**
   * National or local identification number for a client such as Social Security Number, frequently used for Know-Your-Customer (KYC) purposes
   * @member {String} identification_number
   */
exports.prototype['identification_number'] = undefined;

  /**
   * The country of residence of a client, often corresponding to the country issuing the identification number provided above using the ISO ALPHA-2 Code, frequently used for Know-Your-Customer (KYC) purposes
   * @member {String} country_of_residence
   */
exports.prototype['country_of_residence'] = undefined;

  /**
   * Indicator if the identifying details provided by the client have been verified by a Know-Your-Customer (KYC) vendor. Defaults to false which indicates it is not verified
   * @member {Boolean} is_verified
   * @default false
   */
exports.prototype['is_verified'] = false;

  /**
   * The Hydro ID associated with the client (if applicable). Corresponds to the Client Hydro entity
   * @member {String} hydro_id
   */
exports.prototype['hydro_id'] = undefined;

  /**
   * Indicates if the client is currently active. Defaults to true which indicates it is active
   * @member {Boolean} is_active
   * @default true
   */
exports.prototype['is_active'] = true;

  /**
   * @member {Array.<module:model/Address>} address
   */
exports.prototype['address'] = undefined;

  /**
   * Custom information associated with the client in the format key:value
   * @member {Object} metadata
   */
exports.prototype['metadata'] = undefined;

  /**
   * @member {module:model/SecondaryId} secondary_id
   */
exports.prototype['secondary_id'] = undefined;



  return exports;
}));


