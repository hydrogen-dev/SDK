=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module ProtonApi
  class RiskScoringApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Dimensional Risk Score
    # Calculate a dimensional risk score based on questionnaire responses
    # @param dimensional_risk_score_request Request payload for Dimensional Risk Score
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def dimensional_risk_score(dimensional_risk_score_request, opts = {})
      data, _status_code, _headers = dimensional_risk_score_with_http_info(dimensional_risk_score_request, opts)
      data
    end

    # Dimensional Risk Score
    # Calculate a dimensional risk score based on questionnaire responses
    # @param dimensional_risk_score_request Request payload for Dimensional Risk Score
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def dimensional_risk_score_with_http_info(dimensional_risk_score_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: RiskScoringApi.dimensional_risk_score ...'
      end
      # verify the required parameter 'dimensional_risk_score_request' is set
      if @api_client.config.client_side_validation && dimensional_risk_score_request.nil?
        fail ArgumentError, "Missing the required parameter 'dimensional_risk_score_request' when calling RiskScoringApi.dimensional_risk_score"
      end
      # resource path
      local_var_path = '/dimensional_risk_score'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(dimensional_risk_score_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: RiskScoringApi#dimensional_risk_score\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Risk Allocation
    # Allocate based on a risk score
    # @param risk_allocation_request Request payload for Risk Allocation
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def risk_allocation(risk_allocation_request, opts = {})
      data, _status_code, _headers = risk_allocation_with_http_info(risk_allocation_request, opts)
      data
    end

    # Risk Allocation
    # Allocate based on a risk score
    # @param risk_allocation_request Request payload for Risk Allocation
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def risk_allocation_with_http_info(risk_allocation_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: RiskScoringApi.risk_allocation ...'
      end
      # verify the required parameter 'risk_allocation_request' is set
      if @api_client.config.client_side_validation && risk_allocation_request.nil?
        fail ArgumentError, "Missing the required parameter 'risk_allocation_request' when calling RiskScoringApi.risk_allocation"
      end
      # resource path
      local_var_path = '/risk_allocation'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(risk_allocation_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: RiskScoringApi#risk_allocation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Risk Score
    # Calculate a risk score based on questionnaire responses
    # @param risk_score_request Request payload for Risk Score
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def risk_score(risk_score_request, opts = {})
      data, _status_code, _headers = risk_score_with_http_info(risk_score_request, opts)
      data
    end

    # Risk Score
    # Calculate a risk score based on questionnaire responses
    # @param risk_score_request Request payload for Risk Score
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def risk_score_with_http_info(risk_score_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: RiskScoringApi.risk_score ...'
      end
      # verify the required parameter 'risk_score_request' is set
      if @api_client.config.client_side_validation && risk_score_request.nil?
        fail ArgumentError, "Missing the required parameter 'risk_score_request' when calling RiskScoringApi.risk_score"
      end
      # resource path
      local_var_path = '/risk_score'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(risk_score_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: RiskScoringApi#risk_score\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
