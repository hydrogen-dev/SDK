=begin
#Hydrogen Proton API

#Financial engineering module of Hydrogen Atom

OpenAPI spec version: 1.9.2
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for ProtonApi::FinancialStatementAnalysisRequest
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FinancialStatementAnalysisRequest' do
  before do
    # run before each test
    @instance = ProtonApi::FinancialStatementAnalysisRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FinancialStatementAnalysisRequest' do
    it 'should create an instance of FinancialStatementAnalysisRequest' do
      expect(@instance).to be_instance_of(ProtonApi::FinancialStatementAnalysisRequest)
    end
  end
  describe 'test attribute "currency_code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "client_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "show_history"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "accounting_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["accrual", "cash"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.accounting_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "end_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "history_frequency_interval"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["day", "week", "month", "quarter", "year"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.history_frequency_interval = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "currency_conversion"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "period_quarter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "statement_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["income_statement", "balance_sheet", "all"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.statement_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "period_month"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "start_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "business_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "period_year"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "period_length"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["annual", "quarterly", "monthly", "ytd", "qtd", "mtd"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.period_length = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "stat_names"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["cash", "accounts_receivable", "total_assets", "accounts_payable", "total_liabilities", "total_equity", "total_revenue", "cogs", "total_expenses", "operating_income", "gross_profit", "net_income", "ebitda"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.stat_names = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "period_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["calendar", "fiscal"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.period_type = value }.not_to raise_error
      # end
    end
  end

end
