/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * RetirementCalculatorExpensesRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-28T09:20:08.129Z")
public class RetirementCalculatorExpensesRequest {
  @SerializedName("retirement_savings")
  private Float retirementSavings = 0.0f;

  @SerializedName("current_age")
  private Integer currentAge = null;

  @SerializedName("account_ids")
  private List<UUID> accountIds = null;

  @SerializedName("retirement_income")
  private Float retirementIncome = 0.0f;

  @SerializedName("retirement_tax")
  private Float retirementTax = 0.0f;

  @SerializedName("death_age")
  private Integer deathAge = null;

  @SerializedName("retirement_age")
  private Integer retirementAge = 65;

  @SerializedName("percent_of_expenses_covered")
  private Float percentOfExpensesCovered = 1.0f;

  @SerializedName("portfolio_return")
  private Float portfolioReturn = null;

  @SerializedName("deposit_schedule")
  private CalculatorDepositSchedule1 depositSchedule = null;

  @SerializedName("inflation_rate")
  private Float inflationRate = 0.0f;

  @SerializedName("aggregation_account_ids")
  private List<UUID> aggregationAccountIds = null;

  public RetirementCalculatorExpensesRequest retirementSavings(Float retirementSavings) {
    this.retirementSavings = retirementSavings;
    return this;
  }

   /**
   * Get retirementSavings
   * minimum: 0
   * @return retirementSavings
  **/
  @ApiModelProperty(value = "")
  public Float getRetirementSavings() {
    return retirementSavings;
  }

  public void setRetirementSavings(Float retirementSavings) {
    this.retirementSavings = retirementSavings;
  }

  public RetirementCalculatorExpensesRequest currentAge(Integer currentAge) {
    this.currentAge = currentAge;
    return this;
  }

   /**
   * Get currentAge
   * minimum: 0
   * @return currentAge
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getCurrentAge() {
    return currentAge;
  }

  public void setCurrentAge(Integer currentAge) {
    this.currentAge = currentAge;
  }

  public RetirementCalculatorExpensesRequest accountIds(List<UUID> accountIds) {
    this.accountIds = accountIds;
    return this;
  }

  public RetirementCalculatorExpensesRequest addAccountIdsItem(UUID accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<UUID>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * Get accountIds
   * @return accountIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getAccountIds() {
    return accountIds;
  }

  public void setAccountIds(List<UUID> accountIds) {
    this.accountIds = accountIds;
  }

  public RetirementCalculatorExpensesRequest retirementIncome(Float retirementIncome) {
    this.retirementIncome = retirementIncome;
    return this;
  }

   /**
   * Get retirementIncome
   * minimum: 0
   * @return retirementIncome
  **/
  @ApiModelProperty(value = "")
  public Float getRetirementIncome() {
    return retirementIncome;
  }

  public void setRetirementIncome(Float retirementIncome) {
    this.retirementIncome = retirementIncome;
  }

  public RetirementCalculatorExpensesRequest retirementTax(Float retirementTax) {
    this.retirementTax = retirementTax;
    return this;
  }

   /**
   * Get retirementTax
   * minimum: 0
   * maximum: 1
   * @return retirementTax
  **/
  @ApiModelProperty(value = "")
  public Float getRetirementTax() {
    return retirementTax;
  }

  public void setRetirementTax(Float retirementTax) {
    this.retirementTax = retirementTax;
  }

  public RetirementCalculatorExpensesRequest deathAge(Integer deathAge) {
    this.deathAge = deathAge;
    return this;
  }

   /**
   * Get deathAge
   * minimum: 0
   * @return deathAge
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getDeathAge() {
    return deathAge;
  }

  public void setDeathAge(Integer deathAge) {
    this.deathAge = deathAge;
  }

  public RetirementCalculatorExpensesRequest retirementAge(Integer retirementAge) {
    this.retirementAge = retirementAge;
    return this;
  }

   /**
   * Get retirementAge
   * minimum: 0
   * @return retirementAge
  **/
  @ApiModelProperty(value = "")
  public Integer getRetirementAge() {
    return retirementAge;
  }

  public void setRetirementAge(Integer retirementAge) {
    this.retirementAge = retirementAge;
  }

  public RetirementCalculatorExpensesRequest percentOfExpensesCovered(Float percentOfExpensesCovered) {
    this.percentOfExpensesCovered = percentOfExpensesCovered;
    return this;
  }

   /**
   * Get percentOfExpensesCovered
   * minimum: 0
   * maximum: 1
   * @return percentOfExpensesCovered
  **/
  @ApiModelProperty(value = "")
  public Float getPercentOfExpensesCovered() {
    return percentOfExpensesCovered;
  }

  public void setPercentOfExpensesCovered(Float percentOfExpensesCovered) {
    this.percentOfExpensesCovered = percentOfExpensesCovered;
  }

  public RetirementCalculatorExpensesRequest portfolioReturn(Float portfolioReturn) {
    this.portfolioReturn = portfolioReturn;
    return this;
  }

   /**
   * Get portfolioReturn
   * minimum: -1
   * @return portfolioReturn
  **/
  @ApiModelProperty(required = true, value = "")
  public Float getPortfolioReturn() {
    return portfolioReturn;
  }

  public void setPortfolioReturn(Float portfolioReturn) {
    this.portfolioReturn = portfolioReturn;
  }

  public RetirementCalculatorExpensesRequest depositSchedule(CalculatorDepositSchedule1 depositSchedule) {
    this.depositSchedule = depositSchedule;
    return this;
  }

   /**
   * Get depositSchedule
   * @return depositSchedule
  **/
  @ApiModelProperty(value = "")
  public CalculatorDepositSchedule1 getDepositSchedule() {
    return depositSchedule;
  }

  public void setDepositSchedule(CalculatorDepositSchedule1 depositSchedule) {
    this.depositSchedule = depositSchedule;
  }

  public RetirementCalculatorExpensesRequest inflationRate(Float inflationRate) {
    this.inflationRate = inflationRate;
    return this;
  }

   /**
   * Get inflationRate
   * minimum: -1
   * @return inflationRate
  **/
  @ApiModelProperty(value = "")
  public Float getInflationRate() {
    return inflationRate;
  }

  public void setInflationRate(Float inflationRate) {
    this.inflationRate = inflationRate;
  }

  public RetirementCalculatorExpensesRequest aggregationAccountIds(List<UUID> aggregationAccountIds) {
    this.aggregationAccountIds = aggregationAccountIds;
    return this;
  }

  public RetirementCalculatorExpensesRequest addAggregationAccountIdsItem(UUID aggregationAccountIdsItem) {
    if (this.aggregationAccountIds == null) {
      this.aggregationAccountIds = new ArrayList<UUID>();
    }
    this.aggregationAccountIds.add(aggregationAccountIdsItem);
    return this;
  }

   /**
   * Get aggregationAccountIds
   * @return aggregationAccountIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getAggregationAccountIds() {
    return aggregationAccountIds;
  }

  public void setAggregationAccountIds(List<UUID> aggregationAccountIds) {
    this.aggregationAccountIds = aggregationAccountIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetirementCalculatorExpensesRequest retirementCalculatorExpensesRequest = (RetirementCalculatorExpensesRequest) o;
    return Objects.equals(this.retirementSavings, retirementCalculatorExpensesRequest.retirementSavings) &&
        Objects.equals(this.currentAge, retirementCalculatorExpensesRequest.currentAge) &&
        Objects.equals(this.accountIds, retirementCalculatorExpensesRequest.accountIds) &&
        Objects.equals(this.retirementIncome, retirementCalculatorExpensesRequest.retirementIncome) &&
        Objects.equals(this.retirementTax, retirementCalculatorExpensesRequest.retirementTax) &&
        Objects.equals(this.deathAge, retirementCalculatorExpensesRequest.deathAge) &&
        Objects.equals(this.retirementAge, retirementCalculatorExpensesRequest.retirementAge) &&
        Objects.equals(this.percentOfExpensesCovered, retirementCalculatorExpensesRequest.percentOfExpensesCovered) &&
        Objects.equals(this.portfolioReturn, retirementCalculatorExpensesRequest.portfolioReturn) &&
        Objects.equals(this.depositSchedule, retirementCalculatorExpensesRequest.depositSchedule) &&
        Objects.equals(this.inflationRate, retirementCalculatorExpensesRequest.inflationRate) &&
        Objects.equals(this.aggregationAccountIds, retirementCalculatorExpensesRequest.aggregationAccountIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(retirementSavings, currentAge, accountIds, retirementIncome, retirementTax, deathAge, retirementAge, percentOfExpensesCovered, portfolioReturn, depositSchedule, inflationRate, aggregationAccountIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetirementCalculatorExpensesRequest {\n");
    
    sb.append("    retirementSavings: ").append(toIndentedString(retirementSavings)).append("\n");
    sb.append("    currentAge: ").append(toIndentedString(currentAge)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    retirementIncome: ").append(toIndentedString(retirementIncome)).append("\n");
    sb.append("    retirementTax: ").append(toIndentedString(retirementTax)).append("\n");
    sb.append("    deathAge: ").append(toIndentedString(deathAge)).append("\n");
    sb.append("    retirementAge: ").append(toIndentedString(retirementAge)).append("\n");
    sb.append("    percentOfExpensesCovered: ").append(toIndentedString(percentOfExpensesCovered)).append("\n");
    sb.append("    portfolioReturn: ").append(toIndentedString(portfolioReturn)).append("\n");
    sb.append("    depositSchedule: ").append(toIndentedString(depositSchedule)).append("\n");
    sb.append("    inflationRate: ").append(toIndentedString(inflationRate)).append("\n");
    sb.append("    aggregationAccountIds: ").append(toIndentedString(aggregationAccountIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

