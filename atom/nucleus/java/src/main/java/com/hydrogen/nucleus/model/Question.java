/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.hydrogen.nucleus.model.Answer;
import com.hydrogen.nucleus.model.Questionnaire;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Question Object
 */
@ApiModel(description = "Question Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class Question {
  @SerializedName("answers")
  private List<Answer> answers = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("document")
  private String document = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("is_account")
  private Boolean isAccount = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("order_index")
  private String orderIndex = null;

  @SerializedName("question_type")
  private String questionType = null;

  @SerializedName("questionnaire")
  private Questionnaire questionnaire = null;

  @SerializedName("questionnaire_id")
  private UUID questionnaireId = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("subcategory")
  private String subcategory = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("tooltip")
  private String tooltip = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  @SerializedName("weight")
  private Double weight = null;

  public Question answers(List<Answer> answers) {
    this.answers = answers;
    return this;
  }

  public Question addAnswersItem(Answer answersItem) {
    if (this.answers == null) {
      this.answers = new ArrayList<Answer>();
    }
    this.answers.add(answersItem);
    return this;
  }

   /**
   * Get answers
   * @return answers
  **/
  @ApiModelProperty(value = "")
  public List<Answer> getAnswers() {
    return answers;
  }

  public void setAnswers(List<Answer> answers) {
    this.answers = answers;
  }

  public Question category(String category) {
    this.category = category;
    return this;
  }

   /**
   * category
   * @return category
  **/
  @ApiModelProperty(example = "title", value = "category")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Question createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public Question description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @ApiModelProperty(example = "description", value = "description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Question document(String document) {
    this.document = document;
    return this;
  }

   /**
   * document
   * @return document
  **/
  @ApiModelProperty(example = "document", value = "document")
  public String getDocument() {
    return document;
  }

  public void setDocument(String document) {
    this.document = document;
  }

  public Question id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Question image(String image) {
    this.image = image;
    return this;
  }

   /**
   * image
   * @return image
  **/
  @ApiModelProperty(example = "image", value = "image")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public Question isAccount(Boolean isAccount) {
    this.isAccount = isAccount;
    return this;
  }

   /**
   * is_account
   * @return isAccount
  **/
  @ApiModelProperty(example = "true", value = "is_account")
  public Boolean isIsAccount() {
    return isAccount;
  }

  public void setIsAccount(Boolean isAccount) {
    this.isAccount = isAccount;
  }

  public Question metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public Question putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "{}", value = "metadata")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public Question orderIndex(String orderIndex) {
    this.orderIndex = orderIndex;
    return this;
  }

   /**
   * order_index
   * @return orderIndex
  **/
  @ApiModelProperty(example = "order_index", value = "order_index")
  public String getOrderIndex() {
    return orderIndex;
  }

  public void setOrderIndex(String orderIndex) {
    this.orderIndex = orderIndex;
  }

  public Question questionType(String questionType) {
    this.questionType = questionType;
    return this;
  }

   /**
   * question_type
   * @return questionType
  **/
  @ApiModelProperty(example = "question_type", value = "question_type")
  public String getQuestionType() {
    return questionType;
  }

  public void setQuestionType(String questionType) {
    this.questionType = questionType;
  }

  public Question questionnaire(Questionnaire questionnaire) {
    this.questionnaire = questionnaire;
    return this;
  }

   /**
   * Get questionnaire
   * @return questionnaire
  **/
  @ApiModelProperty(value = "")
  public Questionnaire getQuestionnaire() {
    return questionnaire;
  }

  public void setQuestionnaire(Questionnaire questionnaire) {
    this.questionnaire = questionnaire;
  }

  public Question questionnaireId(UUID questionnaireId) {
    this.questionnaireId = questionnaireId;
    return this;
  }

   /**
   * questionnaireId
   * @return questionnaireId
  **/
  @ApiModelProperty(example = "2feae367-77be-4613-9cd0-f62fd5b3cff9", value = "questionnaireId")
  public UUID getQuestionnaireId() {
    return questionnaireId;
  }

  public void setQuestionnaireId(UUID questionnaireId) {
    this.questionnaireId = questionnaireId;
  }

  public Question secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public Question subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * subcategory
   * @return subcategory
  **/
  @ApiModelProperty(example = "subcategory", value = "subcategory")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }

  public Question title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title
   * @return title
  **/
  @ApiModelProperty(example = "title", value = "title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Question tooltip(String tooltip) {
    this.tooltip = tooltip;
    return this;
  }

   /**
   * tooltip
   * @return tooltip
  **/
  @ApiModelProperty(example = "label", value = "tooltip")
  public String getTooltip() {
    return tooltip;
  }

  public void setTooltip(String tooltip) {
    this.tooltip = tooltip;
  }

  public Question updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }

  public Question weight(Double weight) {
    this.weight = weight;
    return this;
  }

   /**
   * weight
   * @return weight
  **/
  @ApiModelProperty(example = "0.0", value = "weight")
  public Double getWeight() {
    return weight;
  }

  public void setWeight(Double weight) {
    this.weight = weight;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Question question = (Question) o;
    return Objects.equals(this.answers, question.answers) &&
        Objects.equals(this.category, question.category) &&
        Objects.equals(this.createDate, question.createDate) &&
        Objects.equals(this.description, question.description) &&
        Objects.equals(this.document, question.document) &&
        Objects.equals(this.id, question.id) &&
        Objects.equals(this.image, question.image) &&
        Objects.equals(this.isAccount, question.isAccount) &&
        Objects.equals(this.metadata, question.metadata) &&
        Objects.equals(this.orderIndex, question.orderIndex) &&
        Objects.equals(this.questionType, question.questionType) &&
        Objects.equals(this.questionnaire, question.questionnaire) &&
        Objects.equals(this.questionnaireId, question.questionnaireId) &&
        Objects.equals(this.secondaryId, question.secondaryId) &&
        Objects.equals(this.subcategory, question.subcategory) &&
        Objects.equals(this.title, question.title) &&
        Objects.equals(this.tooltip, question.tooltip) &&
        Objects.equals(this.updateDate, question.updateDate) &&
        Objects.equals(this.weight, question.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answers, category, createDate, description, document, id, image, isAccount, metadata, orderIndex, questionType, questionnaire, questionnaireId, secondaryId, subcategory, title, tooltip, updateDate, weight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Question {\n");
    
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    isAccount: ").append(toIndentedString(isAccount)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    orderIndex: ").append(toIndentedString(orderIndex)).append("\n");
    sb.append("    questionType: ").append(toIndentedString(questionType)).append("\n");
    sb.append("    questionnaire: ").append(toIndentedString(questionnaire)).append("\n");
    sb.append("    questionnaireId: ").append(toIndentedString(questionnaireId)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    tooltip: ").append(toIndentedString(tooltip)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

