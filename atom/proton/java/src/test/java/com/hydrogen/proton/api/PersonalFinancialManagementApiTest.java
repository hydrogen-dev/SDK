/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.9.2
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.proton.api;

import com.hydrogen.proton.ApiException;
import com.hydrogen.proton.model.BudgetCalculatorRequest;
import com.hydrogen.proton.model.CashFlowAnalysisRequest;
import com.hydrogen.proton.model.FeeAnalysisRequest;
import com.hydrogen.proton.model.FinancialPictureRequest;
import com.hydrogen.proton.model.RecurringTransactionAnalysisRequest;
import com.hydrogen.proton.model.SpendingAnalysisRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.Map;

/**
 * API tests for PersonalFinancialManagementApi
 */
@Ignore
public class PersonalFinancialManagementApiTest {

    private final PersonalFinancialManagementApi api = new PersonalFinancialManagementApi();

    
    /**
     * Budget Calculator
     *
     * Analyze spending against a defined budget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void budgetCalculatorTest() throws ApiException {
        BudgetCalculatorRequest budgetCalculatorRequest = null;
        Map<String, Object> response = api.budgetCalculator(budgetCalculatorRequest);

        // TODO: test validations
    }
    
    /**
     * Cash Flow Analysis
     *
     * Analyze income, expenses, and net income
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashFlowAnalysisTest() throws ApiException {
        CashFlowAnalysisRequest cashFlowAnalysisRequest = null;
        Map<String, Object> response = api.cashFlowAnalysis(cashFlowAnalysisRequest);

        // TODO: test validations
    }
    
    /**
     * RFee Analysis
     *
     * Analyze fee data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void feeAnalysisTest() throws ApiException {
        FeeAnalysisRequest feeAnalysisRequest = null;
        Map<String, Object> response = api.feeAnalysis(feeAnalysisRequest);

        // TODO: test validations
    }
    
    /**
     * Financial Picture
     *
     * Assess assets, liabilities, and net worth
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void financialPictureTest() throws ApiException {
        FinancialPictureRequest financialPictureRequest = null;
        Map<String, Object> response = api.financialPicture(financialPictureRequest);

        // TODO: test validations
    }
    
    /**
     * Recurring Transaction Analysis
     *
     * Analyze recurring transactions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void recurringTransactionAnalysisTest() throws ApiException {
        RecurringTransactionAnalysisRequest recurringTransactionAnalysisRequest = null;
        Map<String, Object> response = api.recurringTransactionAnalysis(recurringTransactionAnalysisRequest);

        // TODO: test validations
    }
    
    /**
     * Spending Analysis
     *
     * Analyze spending transaction activity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void spendingAnalysisTest() throws ApiException {
        SpendingAnalysisRequest spendingAnalysisRequest = null;
        Map<String, Object> response = api.spendingAnalysis(spendingAnalysisRequest);

        // TODO: test validations
    }
    
}
