/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.LocalDate;

/**
 * Rebalance
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T14:10:50.140-04:00")
public class Rebalance {
  @SerializedName("model_id")
  private String modelId = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("initial_weights")
  private Map<String, BigDecimal> initialWeights = null;

  public Rebalance modelId(String modelId) {
    this.modelId = modelId;
    return this;
  }

   /**
   * Identifier of the model to rebalance
   * @return modelId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the model to rebalance")
  public String getModelId() {
    return modelId;
  }

  public void setModelId(String modelId) {
    this.modelId = modelId;
  }

  public Rebalance startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date for analysis
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "Start date for analysis")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public Rebalance endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End date for analysis
   * @return endDate
  **/
  @ApiModelProperty(required = true, value = "End date for analysis")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public Rebalance initialWeights(Map<String, BigDecimal> initialWeights) {
    this.initialWeights = initialWeights;
    return this;
  }

  public Rebalance putInitialWeightsItem(String key, BigDecimal initialWeightsItem) {
    if (this.initialWeights == null) {
      this.initialWeights = new HashMap<String, BigDecimal>();
    }
    this.initialWeights.put(key, initialWeightsItem);
    return this;
  }

   /**
   * Initial weights for model holdings
   * @return initialWeights
  **/
  @ApiModelProperty(value = "Initial weights for model holdings")
  public Map<String, BigDecimal> getInitialWeights() {
    return initialWeights;
  }

  public void setInitialWeights(Map<String, BigDecimal> initialWeights) {
    this.initialWeights = initialWeights;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rebalance rebalance = (Rebalance) o;
    return Objects.equals(this.modelId, rebalance.modelId) &&
        Objects.equals(this.startDate, rebalance.startDate) &&
        Objects.equals(this.endDate, rebalance.endDate) &&
        Objects.equals(this.initialWeights, rebalance.initialWeights);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelId, startDate, endDate, initialWeights);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rebalance {\n");
    
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    initialWeights: ").append(toIndentedString(initialWeights)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

