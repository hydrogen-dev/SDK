/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.hydrogen.nucleus.model.ClientRelationship;
import com.hydrogen.nucleus.model.Household;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * Member
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class Member {
  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("client_relationships")
  private List<ClientRelationship> clientRelationships = null;

  @SerializedName("household")
  private Household household = null;

  @SerializedName("is_primary")
  private Boolean isPrimary = null;

  public Member clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * clientId
   * @return clientId
  **/
  @ApiModelProperty(example = "89df1f77-82b3-48ec-b6bc-710ceba322d9", required = true, value = "clientId")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public Member clientRelationships(List<ClientRelationship> clientRelationships) {
    this.clientRelationships = clientRelationships;
    return this;
  }

  public Member addClientRelationshipsItem(ClientRelationship clientRelationshipsItem) {
    if (this.clientRelationships == null) {
      this.clientRelationships = new ArrayList<ClientRelationship>();
    }
    this.clientRelationships.add(clientRelationshipsItem);
    return this;
  }

   /**
   * Get clientRelationships
   * @return clientRelationships
  **/
  @ApiModelProperty(value = "")
  public List<ClientRelationship> getClientRelationships() {
    return clientRelationships;
  }

  public void setClientRelationships(List<ClientRelationship> clientRelationships) {
    this.clientRelationships = clientRelationships;
  }

  public Member household(Household household) {
    this.household = household;
    return this;
  }

   /**
   * Get household
   * @return household
  **/
  @ApiModelProperty(value = "")
  public Household getHousehold() {
    return household;
  }

  public void setHousehold(Household household) {
    this.household = household;
  }

  public Member isPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
    return this;
  }

   /**
   * isPrimary
   * @return isPrimary
  **/
  @ApiModelProperty(example = "false", value = "isPrimary")
  public Boolean isIsPrimary() {
    return isPrimary;
  }

  public void setIsPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Member member = (Member) o;
    return Objects.equals(this.clientId, member.clientId) &&
        Objects.equals(this.clientRelationships, member.clientRelationships) &&
        Objects.equals(this.household, member.household) &&
        Objects.equals(this.isPrimary, member.isPrimary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, clientRelationships, household, isPrimary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Member {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientRelationships: ").append(toIndentedString(clientRelationships)).append("\n");
    sb.append("    household: ").append(toIndentedString(household)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

