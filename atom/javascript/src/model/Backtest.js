/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.atom_api) {
      root.atom_api = {};
    }
    root.atom_api.Backtest = factory(root.atom_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Backtest model module.
   * @module model/Backtest
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>Backtest</code>.
   * @alias module:model/Backtest
   * @class
   * @param modelId {String} Identifier of the model to rebalance
   * @param startDate {Date} tart date for analysis
   * @param endDate {Date} End date for analysis
   */
  var exports = function(modelId, startDate, endDate) {
    var _this = this;

    _this['model_id'] = modelId;
    _this['start_date'] = startDate;
    _this['end_date'] = endDate;






  };

  /**
   * Constructs a <code>Backtest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Backtest} obj Optional instance to populate.
   * @return {module:model/Backtest} The populated <code>Backtest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('model_id')) {
        obj['model_id'] = ApiClient.convertToType(data['model_id'], 'String');
      }
      if (data.hasOwnProperty('start_date')) {
        obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
      }
      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
      }
      if (data.hasOwnProperty('initial_weights')) {
        obj['initial_weights'] = ApiClient.convertToType(data['initial_weights'], {'String': 'Number'});
      }
      if (data.hasOwnProperty('asset_size')) {
        obj['asset_size'] = ApiClient.convertToType(data['asset_size'], 'Number');
      }
      if (data.hasOwnProperty('asset_sizes')) {
        obj['asset_sizes'] = ApiClient.convertToType(data['asset_sizes'], 'Boolean');
      }
      if (data.hasOwnProperty('trades')) {
        obj['trades'] = ApiClient.convertToType(data['trades'], 'Boolean');
      }
      if (data.hasOwnProperty('holdings')) {
        obj['holdings'] = ApiClient.convertToType(data['holdings'], 'Boolean');
      }
      if (data.hasOwnProperty('stats')) {
        obj['stats'] = ApiClient.convertToType(data['stats'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Identifier of the model to rebalance
   * @member {String} model_id
   */
  exports.prototype['model_id'] = undefined;
  /**
   * tart date for analysis
   * @member {Date} start_date
   */
  exports.prototype['start_date'] = undefined;
  /**
   * End date for analysis
   * @member {Date} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * Initial weights for model holdings
   * @member {Object.<String, Number>} initial_weights
   */
  exports.prototype['initial_weights'] = undefined;
  /**
   * The initial asset size
   * @member {Number} asset_size
   */
  exports.prototype['asset_size'] = undefined;
  /**
   * Get asset sizes
   * @member {Boolean} asset_sizes
   * @default true
   */
  exports.prototype['asset_sizes'] = true;
  /**
   * Get trades
   * @member {Boolean} trades
   * @default true
   */
  exports.prototype['trades'] = true;
  /**
   * Get holdings
   * @member {Boolean} holdings
   * @default true
   */
  exports.prototype['holdings'] = true;
  /**
   * Get portfolio statistics
   * @member {Boolean} stats
   * @default true
   */
  exports.prototype['stats'] = true;



  return exports;
}));


