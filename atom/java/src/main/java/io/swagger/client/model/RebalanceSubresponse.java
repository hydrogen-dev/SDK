/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * RebalanceSubresponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-31T19:17:39.885-04:00")
public class RebalanceSubresponse {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("create_date")
  private String createDate = null;

  @SerializedName("update_date")
  private String updateDate = null;

  @SerializedName("transaction_code_id")
  private UUID transactionCodeId = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("is_read")
  private Boolean isRead = false;

  @SerializedName("quantity")
  private Double quantity = null;

  @SerializedName("security_id")
  private UUID securityId = null;

  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("portfolio_id")
  private UUID portfolioId = null;

  @SerializedName("model_id")
  private UUID modelId = null;

  @SerializedName("metadata")
  private Object metadata = null;

  public RebalanceSubresponse id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the order
   * @return id
  **/
  @ApiModelProperty(value = "ID of the order")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public RebalanceSubresponse createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Datetime the order was created
   * @return createDate
  **/
  @ApiModelProperty(value = "Datetime the order was created")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public RebalanceSubresponse updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Datetime the order was last updated
   * @return updateDate
  **/
  @ApiModelProperty(value = "Datetime the order was last updated")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }

  public RebalanceSubresponse transactionCodeId(UUID transactionCodeId) {
    this.transactionCodeId = transactionCodeId;
    return this;
  }

   /**
   * ID of the transaction code
   * @return transactionCodeId
  **/
  @ApiModelProperty(value = "ID of the transaction code")
  public UUID getTransactionCodeId() {
    return transactionCodeId;
  }

  public void setTransactionCodeId(UUID transactionCodeId) {
    this.transactionCodeId = transactionCodeId;
  }

  public RebalanceSubresponse date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date the order was generated
   * @return date
  **/
  @ApiModelProperty(value = "Date the order was generated")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public RebalanceSubresponse price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price of the security at the time the order is created
   * @return price
  **/
  @ApiModelProperty(value = "Price of the security at the time the order is created")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public RebalanceSubresponse isRead(Boolean isRead) {
    this.isRead = isRead;
    return this;
  }

   /**
   * Indicator for whether or not the order record has been read. Defaults to false which indicates that it has not been read
   * @return isRead
  **/
  @ApiModelProperty(value = "Indicator for whether or not the order record has been read. Defaults to false which indicates that it has not been read")
  public Boolean isIsRead() {
    return isRead;
  }

  public void setIsRead(Boolean isRead) {
    this.isRead = isRead;
  }

  public RebalanceSubresponse quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The number of shares of security being bought or sold
   * @return quantity
  **/
  @ApiModelProperty(value = "The number of shares of security being bought or sold")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public RebalanceSubresponse securityId(UUID securityId) {
    this.securityId = securityId;
    return this;
  }

   /**
   * The ID of the security being bought or sold
   * @return securityId
  **/
  @ApiModelProperty(value = "The ID of the security being bought or sold")
  public UUID getSecurityId() {
    return securityId;
  }

  public void setSecurityId(UUID securityId) {
    this.securityId = securityId;
  }

  public RebalanceSubresponse accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account that the order falls under
   * @return accountId
  **/
  @ApiModelProperty(value = "The ID of the account that the order falls under")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public RebalanceSubresponse portfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * The ID of the portfolio that the order falls under
   * @return portfolioId
  **/
  @ApiModelProperty(value = "The ID of the portfolio that the order falls under")
  public UUID getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
  }

  public RebalanceSubresponse modelId(UUID modelId) {
    this.modelId = modelId;
    return this;
  }

   /**
   * The ID of the model with which the order is associated
   * @return modelId
  **/
  @ApiModelProperty(value = "The ID of the model with which the order is associated")
  public UUID getModelId() {
    return modelId;
  }

  public void setModelId(UUID modelId) {
    this.modelId = modelId;
  }

  public RebalanceSubresponse metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Custom information associated with the order record in the format key:value
   * @return metadata
  **/
  @ApiModelProperty(value = "Custom information associated with the order record in the format key:value")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RebalanceSubresponse rebalanceSubresponse = (RebalanceSubresponse) o;
    return Objects.equals(this.id, rebalanceSubresponse.id) &&
        Objects.equals(this.createDate, rebalanceSubresponse.createDate) &&
        Objects.equals(this.updateDate, rebalanceSubresponse.updateDate) &&
        Objects.equals(this.transactionCodeId, rebalanceSubresponse.transactionCodeId) &&
        Objects.equals(this.date, rebalanceSubresponse.date) &&
        Objects.equals(this.price, rebalanceSubresponse.price) &&
        Objects.equals(this.isRead, rebalanceSubresponse.isRead) &&
        Objects.equals(this.quantity, rebalanceSubresponse.quantity) &&
        Objects.equals(this.securityId, rebalanceSubresponse.securityId) &&
        Objects.equals(this.accountId, rebalanceSubresponse.accountId) &&
        Objects.equals(this.portfolioId, rebalanceSubresponse.portfolioId) &&
        Objects.equals(this.modelId, rebalanceSubresponse.modelId) &&
        Objects.equals(this.metadata, rebalanceSubresponse.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createDate, updateDate, transactionCodeId, date, price, isRead, quantity, securityId, accountId, portfolioId, modelId, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RebalanceSubresponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    transactionCodeId: ").append(toIndentedString(transactionCodeId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isRead: ").append(toIndentedString(isRead)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    securityId: ").append(toIndentedString(securityId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

