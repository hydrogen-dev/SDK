/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * ExternalAccountTransfer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:39:20.203Z")
public class ExternalAccountTransfer {
  @SerializedName("account_holder")
  private String accountHolder = null;

  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("account_type_id")
  private UUID accountTypeId = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("dtc_number")
  private String dtcNumber = null;

  @SerializedName("firm_name")
  private String firmName = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("received_date")
  private OffsetDateTime receivedDate = null;

  @SerializedName("roth_five_year")
  private Integer rothFiveYear = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_time_stamp")
  private OffsetDateTime statusTimeStamp = null;

  @SerializedName("transfer_all_cash")
  private Boolean transferAllCash = null;

  @SerializedName("transfer_date")
  private LocalDate transferDate = null;

  @SerializedName("transfer_type")
  private String transferType = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public ExternalAccountTransfer accountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
    return this;
  }

   /**
   * External Account Transfer accountHolder
   * @return accountHolder
  **/
  @ApiModelProperty(example = "John Smith", required = true, value = "External Account Transfer accountHolder")
  public String getAccountHolder() {
    return accountHolder;
  }

  public void setAccountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
  }

  public ExternalAccountTransfer accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * External Account Transfer account id
   * @return accountId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", required = true, value = "External Account Transfer account id")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public ExternalAccountTransfer accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * External Account Transfer account number
   * @return accountNumber
  **/
  @ApiModelProperty(example = "5889632592", required = true, value = "External Account Transfer account number")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public ExternalAccountTransfer accountTypeId(UUID accountTypeId) {
    this.accountTypeId = accountTypeId;
    return this;
  }

   /**
   * External Account Transfer account type id
   * @return accountTypeId
  **/
  @ApiModelProperty(example = "50d76212-0fcd-4d36-8633-e4a52cbcb79f", required = true, value = "External Account Transfer account type id")
  public UUID getAccountTypeId() {
    return accountTypeId;
  }

  public void setAccountTypeId(UUID accountTypeId) {
    this.accountTypeId = accountTypeId;
  }

  public ExternalAccountTransfer amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * External Account Transfer amount
   * @return amount
  **/
  @ApiModelProperty(example = "100.0", value = "External Account Transfer amount")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public ExternalAccountTransfer comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * External Account Transfer comment
   * @return comment
  **/
  @ApiModelProperty(example = "sample", value = "External Account Transfer comment")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ExternalAccountTransfer createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public ExternalAccountTransfer currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", value = "currencyCode")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public ExternalAccountTransfer dtcNumber(String dtcNumber) {
    this.dtcNumber = dtcNumber;
    return this;
  }

   /**
   * External Account Transfer dtcNumber
   * @return dtcNumber
  **/
  @ApiModelProperty(example = "345928204", value = "External Account Transfer dtcNumber")
  public String getDtcNumber() {
    return dtcNumber;
  }

  public void setDtcNumber(String dtcNumber) {
    this.dtcNumber = dtcNumber;
  }

  public ExternalAccountTransfer firmName(String firmName) {
    this.firmName = firmName;
    return this;
  }

   /**
   * External Account Transfer firm name
   * @return firmName
  **/
  @ApiModelProperty(example = "Vanguard", required = true, value = "External Account Transfer firm name")
  public String getFirmName() {
    return firmName;
  }

  public void setFirmName(String firmName) {
    this.firmName = firmName;
  }

  public ExternalAccountTransfer id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ExternalAccountTransfer metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public ExternalAccountTransfer putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public ExternalAccountTransfer receivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * Get receivedDate
   * @return receivedDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
  }

  public ExternalAccountTransfer rothFiveYear(Integer rothFiveYear) {
    this.rothFiveYear = rothFiveYear;
    return this;
  }

   /**
   * External Account Transfer roth five year
   * @return rothFiveYear
  **/
  @ApiModelProperty(example = "2", value = "External Account Transfer roth five year")
  public Integer getRothFiveYear() {
    return rothFiveYear;
  }

  public void setRothFiveYear(Integer rothFiveYear) {
    this.rothFiveYear = rothFiveYear;
  }

  public ExternalAccountTransfer secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public ExternalAccountTransfer status(String status) {
    this.status = status;
    return this;
  }

   /**
   * External Account Transfer status
   * @return status
  **/
  @ApiModelProperty(example = "pending", value = "External Account Transfer status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ExternalAccountTransfer statusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
    return this;
  }

   /**
   * Get statusTimeStamp
   * @return statusTimeStamp
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getStatusTimeStamp() {
    return statusTimeStamp;
  }

  public void setStatusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
  }

  public ExternalAccountTransfer transferAllCash(Boolean transferAllCash) {
    this.transferAllCash = transferAllCash;
    return this;
  }

   /**
   * External Account Transfer transfer all cash
   * @return transferAllCash
  **/
  @ApiModelProperty(example = "true", required = true, value = "External Account Transfer transfer all cash")
  public Boolean isTransferAllCash() {
    return transferAllCash;
  }

  public void setTransferAllCash(Boolean transferAllCash) {
    this.transferAllCash = transferAllCash;
  }

  public ExternalAccountTransfer transferDate(LocalDate transferDate) {
    this.transferDate = transferDate;
    return this;
  }

   /**
   * External Account Transfer account transfer date
   * @return transferDate
  **/
  @ApiModelProperty(required = true, value = "External Account Transfer account transfer date")
  public LocalDate getTransferDate() {
    return transferDate;
  }

  public void setTransferDate(LocalDate transferDate) {
    this.transferDate = transferDate;
  }

  public ExternalAccountTransfer transferType(String transferType) {
    this.transferType = transferType;
    return this;
  }

   /**
   * External Account Transfer transfer type
   * @return transferType
  **/
  @ApiModelProperty(example = "WIRE", value = "External Account Transfer transfer type")
  public String getTransferType() {
    return transferType;
  }

  public void setTransferType(String transferType) {
    this.transferType = transferType;
  }

  public ExternalAccountTransfer updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalAccountTransfer externalAccountTransfer = (ExternalAccountTransfer) o;
    return Objects.equals(this.accountHolder, externalAccountTransfer.accountHolder) &&
        Objects.equals(this.accountId, externalAccountTransfer.accountId) &&
        Objects.equals(this.accountNumber, externalAccountTransfer.accountNumber) &&
        Objects.equals(this.accountTypeId, externalAccountTransfer.accountTypeId) &&
        Objects.equals(this.amount, externalAccountTransfer.amount) &&
        Objects.equals(this.comment, externalAccountTransfer.comment) &&
        Objects.equals(this.createDate, externalAccountTransfer.createDate) &&
        Objects.equals(this.currencyCode, externalAccountTransfer.currencyCode) &&
        Objects.equals(this.dtcNumber, externalAccountTransfer.dtcNumber) &&
        Objects.equals(this.firmName, externalAccountTransfer.firmName) &&
        Objects.equals(this.id, externalAccountTransfer.id) &&
        Objects.equals(this.metadata, externalAccountTransfer.metadata) &&
        Objects.equals(this.receivedDate, externalAccountTransfer.receivedDate) &&
        Objects.equals(this.rothFiveYear, externalAccountTransfer.rothFiveYear) &&
        Objects.equals(this.secondaryId, externalAccountTransfer.secondaryId) &&
        Objects.equals(this.status, externalAccountTransfer.status) &&
        Objects.equals(this.statusTimeStamp, externalAccountTransfer.statusTimeStamp) &&
        Objects.equals(this.transferAllCash, externalAccountTransfer.transferAllCash) &&
        Objects.equals(this.transferDate, externalAccountTransfer.transferDate) &&
        Objects.equals(this.transferType, externalAccountTransfer.transferType) &&
        Objects.equals(this.updateDate, externalAccountTransfer.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolder, accountId, accountNumber, accountTypeId, amount, comment, createDate, currencyCode, dtcNumber, firmName, id, metadata, receivedDate, rothFiveYear, secondaryId, status, statusTimeStamp, transferAllCash, transferDate, transferType, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalAccountTransfer {\n");
    
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountTypeId: ").append(toIndentedString(accountTypeId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    dtcNumber: ").append(toIndentedString(dtcNumber)).append("\n");
    sb.append("    firmName: ").append(toIndentedString(firmName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    rothFiveYear: ").append(toIndentedString(rothFiveYear)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusTimeStamp: ").append(toIndentedString(statusTimeStamp)).append("\n");
    sb.append("    transferAllCash: ").append(toIndentedString(transferAllCash)).append("\n");
    sb.append("    transferDate: ").append(toIndentedString(transferDate)).append("\n");
    sb.append("    transferType: ").append(toIndentedString(transferType)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

