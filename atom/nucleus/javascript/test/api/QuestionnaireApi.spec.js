/**
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.9.5
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenNucleusApi);
  }
}(this, function(expect, HydrogenNucleusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenNucleusApi.QuestionnaireApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QuestionnaireApi', function() {
    describe('createAnswerUsingPost', function() {
      it('should call createAnswerUsingPost successfully', function(done) {
        //uncomment below and update the code to test createAnswerUsingPost
        //instance.createAnswerUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQuestionUsingPost', function() {
      it('should call createQuestionUsingPost successfully', function(done) {
        //uncomment below and update the code to test createQuestionUsingPost
        //instance.createQuestionUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQuestionnaireUsingPost', function() {
      it('should call createQuestionnaireUsingPost successfully', function(done) {
        //uncomment below and update the code to test createQuestionnaireUsingPost
        //instance.createQuestionnaireUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnswerUsingDelete', function() {
      it('should call deleteAnswerUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteAnswerUsingDelete
        //instance.deleteAnswerUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuestionUsingDelete', function() {
      it('should call deleteQuestionUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteQuestionUsingDelete
        //instance.deleteQuestionUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuestionnaireUsingDelete', function() {
      it('should call deleteQuestionnaireUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteQuestionnaireUsingDelete
        //instance.deleteQuestionnaireUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnswerAllUsingGet', function() {
      it('should call getAnswerAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getAnswerAllUsingGet
        //instance.getAnswerAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnswerUsingGet', function() {
      it('should call getAnswerUsingGet successfully', function(done) {
        //uncomment below and update the code to test getAnswerUsingGet
        //instance.getAnswerUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionAllUsingGet', function() {
      it('should call getQuestionAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getQuestionAllUsingGet
        //instance.getQuestionAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionUsingGet', function() {
      it('should call getQuestionUsingGet successfully', function(done) {
        //uncomment below and update the code to test getQuestionUsingGet
        //instance.getQuestionUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionnaireAllUsingGet', function() {
      it('should call getQuestionnaireAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getQuestionnaireAllUsingGet
        //instance.getQuestionnaireAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuestionnaireUsingGet', function() {
      it('should call getQuestionnaireUsingGet successfully', function(done) {
        //uncomment below and update the code to test getQuestionnaireUsingGet
        //instance.getQuestionnaireUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnswerUsingPut', function() {
      it('should call updateAnswerUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateAnswerUsingPut
        //instance.updateAnswerUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuestionUsingPut', function() {
      it('should call updateQuestionUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateQuestionUsingPut
        //instance.updateQuestionUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuestionnaireUsingPut', function() {
      it('should call updateQuestionnaireUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateQuestionnaireUsingPut
        //instance.updateQuestionnaireUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
