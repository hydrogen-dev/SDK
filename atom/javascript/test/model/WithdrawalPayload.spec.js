/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.0.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.atom_api);
  }
}(this, function(expect, atom_api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new atom_api.WithdrawalPayload();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WithdrawalPayload', function() {
    it('should create an instance of WithdrawalPayload', function() {
      // uncomment below and update the code to test WithdrawalPayload
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be.a(atom_api.WithdrawalPayload);
    });

    it('should have the property accountId (base name: "account_id")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property fundingId (base name: "funding_id")', function() {
      // uncomment below and update the code to test the property fundingId
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property withdrawalDate (base name: "withdrawal_date")', function() {
      // uncomment below and update the code to test the property withdrawalDate
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property accountNumber (base name: "account_number")', function() {
      // uncomment below and update the code to test the property accountNumber
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property fees (base name: "fees")', function() {
      // uncomment below and update the code to test the property fees
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property lastRequestDate (base name: "last_request_date")', function() {
      // uncomment below and update the code to test the property lastRequestDate
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property receivedDate (base name: "received_date")', function() {
      // uncomment below and update the code to test the property receivedDate
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property statusTimeStamp (base name: "status_time_stamp")', function() {
      // uncomment below and update the code to test the property statusTimeStamp
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

    it('should have the property secondaryId (base name: "secondary_id")', function() {
      // uncomment below and update the code to test the property secondaryId
      //var instance = new atom_api.WithdrawalPayload();
      //expect(instance).to.be();
    });

  });

}));
